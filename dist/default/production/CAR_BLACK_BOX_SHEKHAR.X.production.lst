

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 31 18:20:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4580 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataCOMRAM
   105   003000                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for read_switches@once
   109   003000  01                 	db	1
   110                           
   111                           	psect	idataBANK0
   112   000224                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _once
   116   000224  0001               	dw	1
   117                           
   118                           ;initializer for change_password@flag
   119   000226  0001               	dw	1
   120                           
   121                           ;initializer for change_password@count2
   122   000228  0004               	dw	4
   123                           
   124                           ;initializer for login@left
   125   00022A  0003               	dw	3
   126                           
   127                           ;initializer for _left
   128   00022C  0003               	dw	3
   129                           
   130                           ;initializer for _flag
   131   00022E  0001               	dw	1
   132                           
   133                           ;initializer for _one
   134   000230  0001               	dw	1
   135                           
   136                           ;initializer for _s
   137   000232  0078               	dw	120
   138                           
   139                           ;initializer for _str
   140   000234  4F                 	db	79
   141   000235  4E                 	db	78
   142   000236  00                 	db	0
   143   000237  47                 	db	71
   144   000238  4E                 	db	78
   145   000239  00                 	db	0
   146   00023A  47                 	db	71
   147   00023B  52                 	db	82
   148   00023C  00                 	db	0
   149   00023D  47                 	db	71
   150   00023E  31                 	db	49
   151   00023F  00                 	db	0
   152   000240  47                 	db	71
   153   000241  32                 	db	50
   154   000242  00                 	db	0
   155   000243  47                 	db	71
   156   000244  33                 	db	51
   157   000245  00                 	db	0
   158   000246  47                 	db	71
   159   000247  34                 	db	52
   160   000248  00                 	db	0
   161   000249  43                 	db	67
   162   00024A  4F                 	db	79
   163   00024B  00                 	db	0
   164                           
   165                           	psect	idataBANK1
   166   0003D2                     __pidataBANK1:
   167                           	callstack 0
   168                           
   169                           ;initializer for _menu
   170   0003D2  56                 	db	86
   171   0003D3  49                 	db	73
   172   0003D4  45                 	db	69
   173   0003D5  57                 	db	87
   174   0003D6  20                 	db	32
   175   0003D7  4C                 	db	76
   176   0003D8  4F                 	db	79
   177   0003D9  47                 	db	71
   178   0003DA  20                 	db	32
   179   0003DB  20                 	db	32
   180   0003DC  20                 	db	32
   181   0003DD  20                 	db	32
   182   0003DE  20                 	db	32
   183   0003DF  20                 	db	32
   184   0003E0  00                 	db	0
   185   0003E1  00                 	db	0
   186   0003E2  43                 	db	67
   187   0003E3  4C                 	db	76
   188   0003E4  45                 	db	69
   189   0003E5  41                 	db	65
   190   0003E6  52                 	db	82
   191   0003E7  20                 	db	32
   192   0003E8  4C                 	db	76
   193   0003E9  4F                 	db	79
   194   0003EA  47                 	db	71
   195   0003EB  20                 	db	32
   196   0003EC  20                 	db	32
   197   0003ED  20                 	db	32
   198   0003EE  20                 	db	32
   199   0003EF  20                 	db	32
   200   0003F0  00                 	db	0
   201   0003F1  00                 	db	0
   202   0003F2  44                 	db	68
   203   0003F3  4F                 	db	79
   204   0003F4  57                 	db	87
   205   0003F5  4E                 	db	78
   206   0003F6  4C                 	db	76
   207   0003F7  4F                 	db	79
   208   0003F8  41                 	db	65
   209   0003F9  44                 	db	68
   210   0003FA  20                 	db	32
   211   0003FB  4C                 	db	76
   212   0003FC  4F                 	db	79
   213   0003FD  47                 	db	71
   214   0003FE  20                 	db	32
   215   0003FF  20                 	db	32
   216   000400  00                 	db	0
   217   000401  00                 	db	0
   218   000402  53                 	db	83
   219   000403  45                 	db	69
   220   000404  54                 	db	84
   221   000405  20                 	db	32
   222   000406  54                 	db	84
   223   000407  49                 	db	73
   224   000408  4D                 	db	77
   225   000409  45                 	db	69
   226   00040A  20                 	db	32
   227   00040B  20                 	db	32
   228   00040C  20                 	db	32
   229   00040D  20                 	db	32
   230   00040E  20                 	db	32
   231   00040F  20                 	db	32
   232   000410  00                 	db	0
   233   000411  00                 	db	0
   234   000412  43                 	db	67
   235   000413  48                 	db	72
   236   000414  41                 	db	65
   237   000415  4E                 	db	78
   238   000416  47                 	db	71
   239   000417  45                 	db	69
   240   000418  20                 	db	32
   241   000419  50                 	db	80
   242   00041A  57                 	db	87
   243   00041B  44                 	db	68
   244   00041C  20                 	db	32
   245   00041D  20                 	db	32
   246   00041E  20                 	db	32
   247   00041F  20                 	db	32
   248   000420  00                 	db	0
   249   000421  00                 	db	0
   250   000000                     _SSPADD	set	4040
   251   000000                     _SSPCON1	set	4038
   252   000000                     _ADRESL	set	4035
   253   000000                     _ADRESH	set	4036
   254   000000                     _SEN	set	32296
   255   000000                     _CKE	set	32318
   256   000000                     _GODONE	set	32273
   257   000000                     _RBPU	set	32655
   258   000000                     _ADCON0	set	4034
   259   000000                     _PORTBbits	set	3969
   260   000000                     _TRISD	set	3989
   261   000000                     _RCIF	set	31989
   262   000000                     _RCIE	set	31981
   263   000000                     _TXIF	set	31988
   264   000000                     _ABDEN	set	32192
   265   000000                     _WUE	set	32193
   266   000000                     _BRG16	set	32195
   267   000000                     _CREN	set	32092
   268   000000                     _RX9	set	32094
   269   000000                     _BRGH	set	32098
   270   000000                     _SENDB	set	32099
   271   000000                     _SYNC	set	32100
   272   000000                     _TXEN	set	32101
   273   000000                     _TRISC6	set	31910
   274   000000                     _TRISC7	set	31911
   275   000000                     _ACKEN	set	32300
   276   000000                     _ACKDT	set	32301
   277   000000                     _RCEN	set	32299
   278   000000                     _RSEN	set	32297
   279   000000                     _PEN	set	32298
   280   000000                     _SMP	set	32319
   281   000000                     _TRISC4	set	31908
   282   000000                     _TRISC3	set	31907
   283   000000                     _GO	set	32273
   284   000000                     _ADON	set	32272
   285   000000                     _VCFG0	set	32268
   286   000000                     _VCFG1	set	32269
   287   000000                     _ADCS2	set	32258
   288   000000                     _ADCS1	set	32257
   289   000000                     _ADCS0	set	32256
   290   000000                     _ACQT0	set	32259
   291   000000                     _ACQT1	set	32260
   292   000000                     _ACQT2	set	32261
   293   000000                     _RD7	set	31775
   294   000000                     _RC0	set	31760
   295   000000                     _RC2	set	31762
   296   000000                     _PORTB	set	3969
   297   000000                     _RC1	set	31761
   298   000000                     _TRISB	set	3987
   299   000000                     _TRISC	set	3988
   300   000000                     _PORTD	set	3971
   301   000000                     _TRISD7	set	31919
   302   000000                     _ADCON1	set	4033
   303   000000                     _TXIE	set	31980
   304   000000                     _SSPIF	set	31987
   305   000000                     _ADFM	set	32263
   306   000000                     _SSPBUF	set	4041
   307   000000                     _BCLIF	set	32011
   308   000000                     _SPEN	set	32095
   309   000000                     _TX9	set	32102
   310   000000                     _TXREG	set	4013
   311   000000                     _SPBRG	set	4015
   312   000000                     _ABDOVF	set	32199
   313                           
   314                           	psect	mediumconst
   315   002EB4                     __pmediumconst:
   316                           	callstack 0
   317   002EB4  00                 	db	0
   318   002EB5                     STR_21:
   319   002EB5  20                 	db	32
   320   002EB6  20                 	db	32
   321   002EB7  20                 	db	32
   322   002EB8  20                 	db	32
   323   002EB9  20                 	db	32
   324   002EBA  44                 	db	68	;'D'
   325   002EBB  4F                 	db	79	;'O'
   326   002EBC  57                 	db	87	;'W'
   327   002EBD  4E                 	db	78	;'N'
   328   002EBE  4C                 	db	76	;'L'
   329   002EBF  4F                 	db	79	;'O'
   330   002EC0  41                 	db	65	;'A'
   331   002EC1  44                 	db	68	;'D'
   332   002EC2  20                 	db	32
   333   002EC3  4C                 	db	76	;'L'
   334   002EC4  4F                 	db	79	;'O'
   335   002EC5  47                 	db	71	;'G'
   336   002EC6  20                 	db	32
   337   002EC7  20                 	db	32
   338   002EC8  20                 	db	32
   339   002EC9  20                 	db	32
   340   002ECA  20                 	db	32
   341   002ECB  0A                 	db	10
   342   002ECC  20                 	db	32
   343   002ECD  0D                 	db	13
   344   002ECE  00                 	db	0
   345   002ECF                     STR_22:
   346   002ECF  23                 	db	35
   347   002ED0  20                 	db	32
   348   002ED1  20                 	db	32
   349   002ED2  54                 	db	84	;'T'
   350   002ED3  49                 	db	73	;'I'
   351   002ED4  4D                 	db	77	;'M'
   352   002ED5  45                 	db	69	;'E'
   353   002ED6  20                 	db	32
   354   002ED7  20                 	db	32
   355   002ED8  20                 	db	32
   356   002ED9  20                 	db	32
   357   002EDA  45                 	db	69	;'E'
   358   002EDB  56                 	db	86	;'V'
   359   002EDC  20                 	db	32
   360   002EDD  53                 	db	83	;'S'
   361   002EDE  50                 	db	80	;'P'
   362   002EDF  0A                 	db	10
   363   002EE0  20                 	db	32
   364   002EE1  0D                 	db	13
   365   002EE2  00                 	db	0
   366   002EE3                     STR_25:
   367   002EE3  4E                 	db	78	;'N'
   368   002EE4  4F                 	db	79	;'O'
   369   002EE5  20                 	db	32
   370   002EE6  4C                 	db	76	;'L'
   371   002EE7  4F                 	db	79	;'O'
   372   002EE8  47                 	db	71	;'G'
   373   002EE9  53                 	db	83	;'S'
   374   002EEA  20                 	db	32
   375   002EEB  50                 	db	80	;'P'
   376   002EEC  52                 	db	82	;'R'
   377   002EED  45                 	db	69	;'E'
   378   002EEE  53                 	db	83	;'S'
   379   002EEF  45                 	db	69	;'E'
   380   002EF0  4E                 	db	78	;'N'
   381   002EF1  54                 	db	84	;'T'
   382   002EF2  0A                 	db	10
   383   002EF3  20                 	db	32
   384   002EF4  0D                 	db	13
   385   002EF5  00                 	db	0
   386   002EF6                     STR_19:
   387   002EF6  41                 	db	65	;'A'
   388   002EF7  4C                 	db	76	;'L'
   389   002EF8  4C                 	db	76	;'L'
   390   002EF9  20                 	db	32
   391   002EFA  4C                 	db	76	;'L'
   392   002EFB  4F                 	db	79	;'O'
   393   002EFC  47                 	db	71	;'G'
   394   002EFD  53                 	db	83	;'S'
   395   002EFE  20                 	db	32
   396   002EFF  43                 	db	67	;'C'
   397   002F00  4C                 	db	76	;'L'
   398   002F01  45                 	db	69	;'E'
   399   002F02  41                 	db	65	;'A'
   400   002F03  52                 	db	82	;'R'
   401   002F04  45                 	db	69	;'E'
   402   002F05  44                 	db	68	;'D'
   403   002F06  00                 	db	0
   404   002F07                     STR_11:
   405   002F07  52                 	db	82	;'R'
   406   002F08  65                 	db	101	;'e'
   407   002F09  45                 	db	69	;'E'
   408   002F0A  6E                 	db	110	;'n'
   409   002F0B  74                 	db	116	;'t'
   410   002F0C  65                 	db	101	;'e'
   411   002F0D  72                 	db	114	;'r'
   412   002F0E  20                 	db	32
   413   002F0F  70                 	db	112	;'p'
   414   002F10  61                 	db	97	;'a'
   415   002F11  73                 	db	115	;'s'
   416   002F12  73                 	db	115	;'s'
   417   002F13  77                 	db	119	;'w'
   418   002F14  6F                 	db	111	;'o'
   419   002F15  72                 	db	114	;'r'
   420   002F16  64                 	db	100	;'d'
   421   002F17  00                 	db	0
   422   002F18                     STR_1:
   423   002F18  20                 	db	32
   424   002F19  20                 	db	32
   425   002F1A  54                 	db	84	;'T'
   426   002F1B  49                 	db	73	;'I'
   427   002F1C  4D                 	db	77	;'M'
   428   002F1D  45                 	db	69	;'E'
   429   002F1E  20                 	db	32
   430   002F1F  20                 	db	32
   431   002F20  20                 	db	32
   432   002F21  45                 	db	69	;'E'
   433   002F22  56                 	db	86	;'V'
   434   002F23  54                 	db	84	;'T'
   435   002F24  20                 	db	32
   436   002F25  53                 	db	83	;'S'
   437   002F26  50                 	db	80	;'P'
   438   002F27  44                 	db	68	;'D'
   439   002F28  00                 	db	0
   440   002F29                     STR_20:
   441   002F29  20                 	db	32
   442   002F2A  64                 	db	100	;'d'
   443   002F2B  6F                 	db	111	;'o'
   444   002F2C  77                 	db	119	;'w'
   445   002F2D  6E                 	db	110	;'n'
   446   002F2E  6C                 	db	108	;'l'
   447   002F2F  6F                 	db	111	;'o'
   448   002F30  61                 	db	97	;'a'
   449   002F31  64                 	db	100	;'d'
   450   002F32  69                 	db	105	;'i'
   451   002F33  6E                 	db	110	;'n'
   452   002F34  67                 	db	103	;'g'
   453   002F35  2E                 	db	46
   454   002F36  2E                 	db	46
   455   002F37  2E                 	db	46
   456   002F38  00                 	db	0
   457   002F39                     STR_24:
   458   002F39  4E                 	db	78	;'N'
   459   002F3A  4F                 	db	79	;'O'
   460   002F3B  20                 	db	32
   461   002F3C  4C                 	db	76	;'L'
   462   002F3D  4F                 	db	79	;'O'
   463   002F3E  47                 	db	71	;'G'
   464   002F3F  53                 	db	83	;'S'
   465   002F40  20                 	db	32
   466   002F41  50                 	db	80	;'P'
   467   002F42  52                 	db	82	;'R'
   468   002F43  45                 	db	69	;'E'
   469   002F44  53                 	db	83	;'S'
   470   002F45  45                 	db	69	;'E'
   471   002F46  4E                 	db	78	;'N'
   472   002F47  54                 	db	84	;'T'
   473   002F48  00                 	db	0
   474   002F49                     STR_17:
   475   002F49  20                 	db	32
   476   002F4A  20                 	db	32
   477   002F4B  20                 	db	32
   478   002F4C  53                 	db	83	;'S'
   479   002F4D  45                 	db	69	;'E'
   480   002F4E  54                 	db	84	;'T'
   481   002F4F  20                 	db	32
   482   002F50  54                 	db	84	;'T'
   483   002F51  49                 	db	73	;'I'
   484   002F52  4D                 	db	77	;'M'
   485   002F53  45                 	db	69	;'E'
   486   002F54  20                 	db	32
   487   002F55  20                 	db	32
   488   002F56  20                 	db	32
   489   002F57  20                 	db	32
   490   002F58  00                 	db	0
   491   002F59                     STR_15:
   492   002F59  4E                 	db	78	;'N'
   493   002F5A  6F                 	db	111	;'o'
   494   002F5B  20                 	db	32
   495   002F5C  6C                 	db	108	;'l'
   496   002F5D  6F                 	db	111	;'o'
   497   002F5E  67                 	db	103	;'g'
   498   002F5F  73                 	db	115	;'s'
   499   002F60  20                 	db	32
   500   002F61  70                 	db	112	;'p'
   501   002F62  72                 	db	114	;'r'
   502   002F63  65                 	db	101	;'e'
   503   002F64  73                 	db	115	;'s'
   504   002F65  65                 	db	101	;'e'
   505   002F66  6E                 	db	110	;'n'
   506   002F67  74                 	db	116	;'t'
   507   002F68  00                 	db	0
   508   002F69                     STR_6:
   509   002F69  57                 	db	87	;'W'
   510   002F6A  45                 	db	69	;'E'
   511   002F6B  4C                 	db	76	;'L'
   512   002F6C  43                 	db	67	;'C'
   513   002F6D  4F                 	db	79	;'O'
   514   002F6E  4D                 	db	77	;'M'
   515   002F6F  45                 	db	69	;'E'
   516   002F70  20                 	db	32
   517   002F71  53                 	db	83	;'S'
   518   002F72  48                 	db	72	;'H'
   519   002F73  45                 	db	69	;'E'
   520   002F74  4B                 	db	75	;'K'
   521   002F75  48                 	db	72	;'H'
   522   002F76  41                 	db	65	;'A'
   523   002F77  52                 	db	82	;'R'
   524   002F78  00                 	db	0
   525   002F79                     STR_7:
   526   002F79  79                 	db	121	;'y'
   527   002F7A  6F                 	db	111	;'o'
   528   002F7B  75                 	db	117	;'u'
   529   002F7C  20                 	db	32
   530   002F7D  61                 	db	97	;'a'
   531   002F7E  72                 	db	114	;'r'
   532   002F7F  65                 	db	101	;'e'
   533   002F80  20                 	db	32
   534   002F81  62                 	db	98	;'b'
   535   002F82  6C                 	db	108	;'l'
   536   002F83  6F                 	db	111	;'o'
   537   002F84  63                 	db	99	;'c'
   538   002F85  6B                 	db	107	;'k'
   539   002F86  65                 	db	101	;'e'
   540   002F87  64                 	db	100	;'d'
   541   002F88  00                 	db	0
   542   002F89                     STR_18:
   543   002F89  53                 	db	83	;'S'
   544   002F8A  55                 	db	85	;'U'
   545   002F8B  43                 	db	67	;'C'
   546   002F8C  43                 	db	67	;'C'
   547   002F8D  53                 	db	83	;'S'
   548   002F8E  53                 	db	83	;'S'
   549   002F8F  46                 	db	70	;'F'
   550   002F90  55                 	db	85	;'U'
   551   002F91  4C                 	db	76	;'L'
   552   002F92  4C                 	db	76	;'L'
   553   002F93  20                 	db	32
   554   002F94  21                 	db	33
   555   002F95  21                 	db	33
   556   002F96  21                 	db	33
   557   002F97  00                 	db	0
   558   002F98                     STR_16:
   559   002F98  54                 	db	84	;'T'
   560   002F99  49                 	db	73	;'I'
   561   002F9A  4D                 	db	77	;'M'
   562   002F9B  45                 	db	69	;'E'
   563   002F9C  28                 	db	40
   564   002F9D  48                 	db	72	;'H'
   565   002F9E  48                 	db	72	;'H'
   566   002F9F  3A                 	db	58	;':'
   567   002FA0  4D                 	db	77	;'M'
   568   002FA1  4D                 	db	77	;'M'
   569   002FA2  3A                 	db	58	;':'
   570   002FA3  53                 	db	83	;'S'
   571   002FA4  53                 	db	83	;'S'
   572   002FA5  29                 	db	41
   573   002FA6  00                 	db	0
   574   002FA7                     STR_13:
   575   002FA7  57                 	db	87	;'W'
   576   002FA8  4F                 	db	79	;'O'
   577   002FA9  52                 	db	82	;'R'
   578   002FAA  4E                 	db	78	;'N'
   579   002FAB  47                 	db	71	;'G'
   580   002FAC  20                 	db	32
   581   002FAD  50                 	db	80	;'P'
   582   002FAE  41                 	db	65	;'A'
   583   002FAF  53                 	db	83	;'S'
   584   002FB0  53                 	db	83	;'S'
   585   002FB1  57                 	db	87	;'W'
   586   002FB2  4F                 	db	79	;'O'
   587   002FB3  52                 	db	82	;'R'
   588   002FB4  44                 	db	68	;'D'
   589   002FB5  00                 	db	0
   590   002FB6                     STR_3:
   591   002FB6  50                 	db	80	;'P'
   592   002FB7  41                 	db	65	;'A'
   593   002FB8  53                 	db	83	;'S'
   594   002FB9  53                 	db	83	;'S'
   595   002FBA  57                 	db	87	;'W'
   596   002FBB  4F                 	db	79	;'O'
   597   002FBC  52                 	db	82	;'R'
   598   002FBD  44                 	db	68	;'D'
   599   002FBE  20                 	db	32
   600   002FBF  57                 	db	87	;'W'
   601   002FC0  4F                 	db	79	;'O'
   602   002FC1  52                 	db	82	;'R'
   603   002FC2  4E                 	db	78	;'N'
   604   002FC3  47                 	db	71	;'G'
   605   002FC4  00                 	db	0
   606   002FC5                     STR_4:
   607   002FC5  41                 	db	65	;'A'
   608   002FC6  54                 	db	84	;'T'
   609   002FC7  54                 	db	84	;'T'
   610   002FC8  45                 	db	69	;'E'
   611   002FC9  4D                 	db	77	;'M'
   612   002FCA  50                 	db	80	;'P'
   613   002FCB  20                 	db	32
   614   002FCC  4C                 	db	76	;'L'
   615   002FCD  45                 	db	69	;'E'
   616   002FCE  46                 	db	70	;'F'
   617   002FCF  54                 	db	84	;'T'
   618   002FD0  2D                 	db	45
   619   002FD1  3E                 	db	62	;'>'
   620   002FD2  00                 	db	0
   621   002FD3                     STR_5:
   622   002FD3  53                 	db	83	;'S'
   623   002FD4  55                 	db	85	;'U'
   624   002FD5  43                 	db	67	;'C'
   625   002FD6  43                 	db	67	;'C'
   626   002FD7  45                 	db	69	;'E'
   627   002FD8  53                 	db	83	;'S'
   628   002FD9  53                 	db	83	;'S'
   629   002FDA  46                 	db	70	;'F'
   630   002FDB  55                 	db	85	;'U'
   631   002FDC  4C                 	db	76	;'L'
   632   002FDD  4C                 	db	76	;'L'
   633   002FDE  00                 	db	0
   634   002FDF                     STR_14:
   635   002FDF  4C                 	db	76	;'L'
   636   002FE0  4F                 	db	79	;'O'
   637   002FE1  47                 	db	71	;'G'
   638   002FE2  53                 	db	83	;'S'
   639   002FE3  20                 	db	32
   640   002FE4  3A                 	db	58	;':'
   641   002FE5  2D                 	db	45
   642   002FE6  00                 	db	0
   643   002FE7                     STR_12:
   644   002FE7  53                 	db	83	;'S'
   645   002FE8  55                 	db	85	;'U'
   646   002FE9  43                 	db	67	;'C'
   647   002FEA  43                 	db	67	;'C'
   648   002FEB  45                 	db	69	;'E'
   649   002FEC  53                 	db	83	;'S'
   650   002FED  53                 	db	83	;'S'
   651   002FEE  00                 	db	0
   652   002FEF                     STR_9:
   653   002FEF  53                 	db	83	;'S'
   654   002FF0  65                 	db	101	;'e'
   655   002FF1  63                 	db	99	;'c'
   656   002FF2  2E                 	db	46
   657   002FF3  2E                 	db	46
   658   002FF4  2E                 	db	46
   659   002FF5  00                 	db	0
   660   002FF6                     STR_8:
   661   002FF6  57                 	db	87	;'W'
   662   002FF7  61                 	db	97	;'a'
   663   002FF8  69                 	db	105	;'i'
   664   002FF9  74                 	db	116	;'t'
   665   002FFA  20                 	db	32
   666   002FFB  00                 	db	0
   667   002FFC                     STR_23:
   668   002FFC  0A                 	db	10
   669   002FFD  0D                 	db	13
   670   002FFE  00                 	db	0
   671   002FFF  00                 	db	0	; dummy byte at the end
   672   000000                     
   673                           ; #config settings
   674                           
   675                           	psect	cinit
   676   000790                     __pcinit:
   677                           	callstack 0
   678   000790                     start_initialization:
   679                           	callstack 0
   680   000790                     __initialization:
   681                           	callstack 0
   682                           
   683                           ; Initialize objects allocated to BANK1 (80 bytes)
   684                           ; load TBLPTR registers with __pidataBANK1
   685   000790  0ED2               	movlw	low __pidataBANK1
   686   000792  6EF6               	movwf	tblptrl,c
   687   000794  0E03               	movlw	high __pidataBANK1
   688   000796  6EF7               	movwf	tblptrh,c
   689   000798  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   690   00079A  6EF8               	movwf	tblptru,c
   691   00079C  EE01  F0A0         	lfsr	0,__pdataBANK1
   692   0007A0  EE10 F050          	lfsr	1,80
   693   0007A4                     copy_data0:
   694   0007A4  0009               	tblrd		*+
   695   0007A6  CFF5 FFEE          	movff	tablat,postinc0
   696   0007AA  50E5               	movf	postdec1,w,c
   697   0007AC  50E1               	movf	fsr1l,w,c
   698   0007AE  E1FA               	bnz	copy_data0
   699                           
   700                           ; Initialize objects allocated to BANK0 (40 bytes)
   701                           ; load TBLPTR registers with __pidataBANK0
   702   0007B0  0E24               	movlw	low __pidataBANK0
   703   0007B2  6EF6               	movwf	tblptrl,c
   704   0007B4  0E02               	movlw	high __pidataBANK0
   705   0007B6  6EF7               	movwf	tblptrh,c
   706   0007B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   707   0007BA  6EF8               	movwf	tblptru,c
   708   0007BC  EE00  F09D         	lfsr	0,__pdataBANK0
   709   0007C0  EE10 F028          	lfsr	1,40
   710   0007C4                     copy_data1:
   711   0007C4  0009               	tblrd		*+
   712   0007C6  CFF5 FFEE          	movff	tablat,postinc0
   713   0007CA  50E5               	movf	postdec1,w,c
   714   0007CC  50E1               	movf	fsr1l,w,c
   715   0007CE  E1FA               	bnz	copy_data1
   716                           
   717                           ; Initialize objects allocated to COMRAM (1 bytes)
   718                           ; load TBLPTR registers with __pidataCOMRAM
   719   0007D0  0E00               	movlw	low __pidataCOMRAM
   720   0007D2  6EF6               	movwf	tblptrl,c
   721   0007D4  0E30               	movlw	high __pidataCOMRAM
   722   0007D6  6EF7               	movwf	tblptrh,c
   723   0007D8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   724   0007DA  6EF8               	movwf	tblptru,c
   725   0007DC  0009               	tblrd		*+	;fetch initializer
   726   0007DE  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   727                           
   728                           ; Clear objects allocated to BIGRAM (320 bytes)
   729   0007E2  EE01  F0F0         	lfsr	0,__pbssBIGRAM
   730   0007E6  EE11 F040          	lfsr	1,320
   731   0007EA                     clear_0:
   732   0007EA  6AEE               	clrf	postinc0,c
   733   0007EC  50E5               	movf	postdec1,w,c
   734   0007EE  50E1               	movf	fsr1l,w,c
   735   0007F0  E1FC               	bnz	clear_0
   736   0007F2  50E2               	movf	fsr1h,w,c
   737   0007F4  E1FA               	bnz	clear_0
   738                           
   739                           ; Clear objects allocated to BANK1 (160 bytes)
   740   0007F6  EE01  F000         	lfsr	0,__pbssBANK1
   741   0007FA  0EA0               	movlw	160
   742   0007FC                     clear_1:
   743   0007FC  6AEE               	clrf	postinc0,c
   744   0007FE  06E8               	decf	wreg,f,c
   745   000800  E1FD               	bnz	clear_1
   746                           
   747                           ; Clear objects allocated to BANK0 (61 bytes)
   748   000802  EE00  F060         	lfsr	0,__pbssBANK0
   749   000806  0E3D               	movlw	61
   750   000808                     clear_2:
   751   000808  6AEE               	clrf	postinc0,c
   752   00080A  06E8               	decf	wreg,f,c
   753   00080C  E1FD               	bnz	clear_2
   754                           
   755                           ; Clear objects allocated to COMRAM (40 bytes)
   756   00080E  EE00  F037         	lfsr	0,__pbssCOMRAM
   757   000812  0E28               	movlw	40
   758   000814                     clear_3:
   759   000814  6AEE               	clrf	postinc0,c
   760   000816  06E8               	decf	wreg,f,c
   761   000818  E1FD               	bnz	clear_3
   762   00081A                     end_of_initialization:
   763                           	callstack 0
   764   00081A                     __end_of__initialization:
   765                           	callstack 0
   766   00081A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   767   00081C  6EF8               	movwf	tblptru,c
   768   00081E  0100               	movlb	0
   769   000820  EF20  F005         	goto	_main	;jump to C main() function
   770                           
   771                           	psect	bssCOMRAM
   772   000037                     __pbssCOMRAM:
   773                           	callstack 0
   774   000037                     _clock_reg:
   775                           	callstack 0
   776   000037                     	ds	3
   777   00003A                     _sec:
   778                           	callstack 0
   779   00003A                     	ds	2
   780   00003C                     _mn:
   781                           	callstack 0
   782   00003C                     	ds	2
   783   00003E                     _hr:
   784                           	callstack 0
   785   00003E                     	ds	2
   786   000040                     _flag_t:
   787                           	callstack 0
   788   000040                     	ds	2
   789   000042                     e_store@address:
   790                           	callstack 0
   791   000042                     	ds	2
   792   000044                     _event_count:
   793                           	callstack 0
   794   000044                     	ds	2
   795   000046                     change_password@delay12:
   796                           	callstack 0
   797   000046                     	ds	2
   798   000048                     change_password@i:
   799                           	callstack 0
   800   000048                     	ds	2
   801   00004A                     _menu_index:
   802                           	callstack 0
   803   00004A                     	ds	2
   804   00004C                     _wait:
   805                           	callstack 0
   806   00004C                     	ds	2
   807   00004E                     _delay:
   808                           	callstack 0
   809   00004E                     	ds	2
   810   000050                     _flag@menu$F308:
   811                           	callstack 0
   812   000050                     	ds	2
   813   000052                     _j:
   814                           	callstack 0
   815   000052                     	ds	2
   816   000054                     _event:
   817                           	callstack 0
   818   000054                     	ds	2
   819   000056                     _val:
   820                           	callstack 0
   821   000056                     	ds	2
   822   000058                     _i:
   823                           	callstack 0
   824   000058                     	ds	2
   825   00005A                     _shift:
   826                           	callstack 0
   827   00005A                     	ds	2
   828   00005C                     _key:
   829                           	callstack 0
   830   00005C                     	ds	2
   831   00005E                     read_switches@key:
   832                           	callstack 0
   833   00005E                     	ds	1
   834                           
   835                           	psect	dataCOMRAM
   836   00005F                     __pdataCOMRAM:
   837                           	callstack 0
   838   00005F                     read_switches@once:
   839                           	callstack 0
   840   00005F                     	ds	1
   841                           
   842                           	psect	bssBANK0
   843   000060                     __pbssBANK0:
   844                           	callstack 0
   845   000060                     _renew:
   846                           	callstack 0
   847   000060                     	ds	4
   848   000064                     _new:
   849                           	callstack 0
   850   000064                     	ds	4
   851   000068                     _wait1:
   852                           	callstack 0
   853   000068                     	ds	4
   854   00006C                     _arr:
   855                           	callstack 0
   856   00006C                     	ds	4
   857   000070                     _arr1:
   858                           	callstack 0
   859   000070                     	ds	4
   860   000074                     _delay12:
   861                           	callstack 0
   862   000074                     	ds	2
   863   000076                     _delay11:
   864                           	callstack 0
   865   000076                     	ds	2
   866   000078                     view_log@delay12:
   867                           	callstack 0
   868   000078                     	ds	2
   869   00007A                     view_log@delay11:
   870                           	callstack 0
   871   00007A                     	ds	2
   872   00007C                     _address:
   873                           	callstack 0
   874   00007C                     	ds	2
   875   00007E                     _scroll:
   876                           	callstack 0
   877   00007E                     	ds	2
   878   000080                     _view_flag:
   879                           	callstack 0
   880   000080                     	ds	2
   881   000082                     _e_flag:
   882                           	callstack 0
   883   000082                     	ds	2
   884   000084                     _worng:
   885                           	callstack 0
   886   000084                     	ds	2
   887   000086                     _star_flag:
   888                           	callstack 0
   889   000086                     	ds	2
   890   000088                     _second:
   891                           	callstack 0
   892   000088                     	ds	2
   893   00008A                     _right:
   894                           	callstack 0
   895   00008A                     	ds	2
   896   00008C                     _speed:
   897                           	callstack 0
   898   00008C                     	ds	2
   899   00008E                     _count1:
   900                           	callstack 0
   901   00008E                     	ds	2
   902   000090                     _clear_flag:
   903                           	callstack 0
   904   000090                     	ds	2
   905   000092                     _key_mkp:
   906                           	callstack 0
   907   000092                     	ds	2
   908   000094                     _time:
   909                           	callstack 0
   910   000094                     	ds	9
   911                           
   912                           	psect	dataBANK0
   913   00009D                     __pdataBANK0:
   914                           	callstack 0
   915   00009D                     _once:
   916                           	callstack 0
   917   00009D                     	ds	2
   918   00009F                     change_password@flag:
   919                           	callstack 0
   920   00009F                     	ds	2
   921   0000A1                     change_password@count2:
   922                           	callstack 0
   923   0000A1                     	ds	2
   924   0000A3                     login@left:
   925                           	callstack 0
   926   0000A3                     	ds	2
   927   0000A5                     _left:
   928                           	callstack 0
   929   0000A5                     	ds	2
   930   0000A7                     _flag:
   931                           	callstack 0
   932   0000A7                     	ds	2
   933   0000A9                     _one:
   934                           	callstack 0
   935   0000A9                     	ds	2
   936   0000AB                     _s:
   937                           	callstack 0
   938   0000AB                     	ds	2
   939   0000AD                     _str:
   940                           	callstack 0
   941   0000AD                     	ds	24
   942                           
   943                           	psect	bssBANK1
   944   000100                     __pbssBANK1:
   945                           	callstack 0
   946   000100                     _array1:
   947                           	callstack 0
   948   000100                     	ds	160
   949                           
   950                           	psect	dataBANK1
   951   0001A0                     __pdataBANK1:
   952                           	callstack 0
   953   0001A0                     _menu:
   954                           	callstack 0
   955   0001A0                     	ds	80
   956                           
   957                           	psect	bssBIGRAM
   958   0001F0                     __pbssBIGRAM:
   959                           	callstack 0
   960   0001F0                     _array:
   961                           	callstack 0
   962   0001F0                     	ds	320
   963                           
   964                           	psect	cstackCOMRAM
   965   000001                     __pcstackCOMRAM:
   966                           	callstack 0
   967   000001                     ?_read_adc:
   968                           	callstack 0
   969   000001                     ?___awdiv:
   970                           	callstack 0
   971   000001                     ?___lwdiv:
   972                           	callstack 0
   973   000001                     ?___xxtofl:
   974                           	callstack 0
   975   000001                     clcd_write@control_bit:
   976                           	callstack 0
   977   000001                     read_switches@detection_type:
   978                           	callstack 0
   979   000001                     i2c_write@data:
   980                           	callstack 0
   981   000001                     putch@byte:
   982                           	callstack 0
   983   000001                     ___awdiv@dividend:
   984                           	callstack 0
   985   000001                     ___lwdiv@dividend:
   986                           	callstack 0
   987   000001                     ___xxtofl@val:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x0
   991   000001                     	ds	1
   992   000002                     clcd_write@byte:
   993                           	callstack 0
   994   000002                     write_ds1307@data:
   995                           	callstack 0
   996   000002                     read_ds1307@address:
   997                           	callstack 0
   998   000002                     read_external_eeprom@address1:
   999                           	callstack 0
  1000   000002                     puts@s:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x1
  1004   000002                     	ds	1
  1005   000003                     ??_init_clcd:
  1006   000003                     ??_read_adc:
  1007   000003                     write_ds1307@address:
  1008                           	callstack 0
  1009   000003                     read_ds1307@data:
  1010                           	callstack 0
  1011   000003                     read_external_eeprom@data:
  1012                           	callstack 0
  1013   000003                     clcd_print@data:
  1014                           	callstack 0
  1015   000003                     ___awdiv@divisor:
  1016                           	callstack 0
  1017   000003                     ___lwdiv@divisor:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2
  1021   000003                     	ds	1
  1022   000004                     init_ds1307@dummy:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x3
  1026   000004                     	ds	1
  1027   000005                     ??___xxtofl:
  1028   000005                     clcd_print@addr:
  1029                           	callstack 0
  1030   000005                     ___awdiv@counter:
  1031                           	callstack 0
  1032   000005                     read_adc@reg_val:
  1033                           	callstack 0
  1034   000005                     ___lwdiv@quotient:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x4
  1038   000005                     	ds	1
  1039   000006                     ??_clear_log:
  1040   000006                     ??_download_log:
  1041   000006                     ___awdiv@sign:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x5
  1045   000006                     	ds	1
  1046   000007                     read_adc@channel:
  1047                           	callstack 0
  1048   000007                     ___lwdiv@counter:
  1049                           	callstack 0
  1050   000007                     ___awdiv@quotient:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x6
  1054   000007                     	ds	1
  1055   000008                     ?___lwmod:
  1056                           	callstack 0
  1057   000008                     ___lwmod@dividend:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x7
  1061   000008                     	ds	1
  1062   000009                     ?___awmod:
  1063                           	callstack 0
  1064   000009                     ___xxtofl@sign:
  1065                           	callstack 0
  1066   000009                     ___awmod@dividend:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x8
  1070   000009                     	ds	1
  1071   00000A                     ___xxtofl@exp:
  1072                           	callstack 0
  1073   00000A                     download_log@i:
  1074                           	callstack 0
  1075   00000A                     ___lwmod@divisor:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x9
  1079   00000A                     	ds	1
  1080   00000B                     ___awmod@divisor:
  1081                           	callstack 0
  1082   00000B                     ___xxtofl@arg:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0xA
  1086   00000B                     	ds	1
  1087   00000C                     ___lwmod@counter:
  1088                           	callstack 0
  1089   00000C                     download_log@j:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0xB
  1093   00000C                     	ds	1
  1094   00000D                     ___awmod@counter:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0xC
  1098   00000D                     	ds	1
  1099   00000E                     ___awmod@sign:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0xD
  1103   00000E                     	ds	1
  1104   00000F                     ?___fldiv:
  1105                           	callstack 0
  1106   00000F                     clcd_putch@addr:
  1107                           	callstack 0
  1108   00000F                     write_external_eeprom@data:
  1109                           	callstack 0
  1110   00000F                     ___fldiv@b:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0xE
  1114   00000F                     	ds	1
  1115   000010                     clcd_putch@data:
  1116                           	callstack 0
  1117   000010                     write_external_eeprom@i:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xF
  1121   000010                     	ds	1
  1122   000011                     ??_login:
  1123   000011                     ??_menu_car:
  1124   000011                     ??_view_log:
  1125   000011                     ??_set_time:
  1126                           
  1127                           ; 1 bytes @ 0x10
  1128   000011                     	ds	1
  1129   000012                     write_external_eeprom@address1:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x11
  1133   000012                     	ds	1
  1134   000013                     ??_change_password:
  1135   000013                     e_store@i:
  1136                           	callstack 0
  1137   000013                     login@j:
  1138                           	callstack 0
  1139   000013                     set_time@w:
  1140                           	callstack 0
  1141   000013                     ___fldiv@a:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x12
  1145   000013                     	ds	2
  1146   000015                     change_password@key:
  1147                           	callstack 0
  1148   000015                     e_store@j:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x14
  1152   000015                     	ds	2
  1153   000017                     ??___fldiv:
  1154   000017                     login@i:
  1155                           	callstack 0
  1156   000017                     change_password@j:
  1157                           	callstack 0
  1158   000017                     view_log@key:
  1159                           	callstack 0
  1160   000017                     set_time@w_481:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x16
  1164   000017                     	ds	2
  1165   000019                     change_password@w:
  1166                           	callstack 0
  1167   000019                     view_log@i:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x18
  1171   000019                     	ds	2
  1172   00001B                     view_log@i_457:
  1173                           	callstack 0
  1174   00001B                     set_time@w_482:
  1175                           	callstack 0
  1176   00001B                     ___fldiv@rem:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x1A
  1180   00001B                     	ds	2
  1181   00001D                     view_log@j:
  1182                           	callstack 0
  1183   00001D                     set_time@w_483:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x1C
  1187   00001D                     	ds	2
  1188   00001F                     ___fldiv@sign:
  1189                           	callstack 0
  1190   00001F                     set_time@w_484:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x1E
  1194   00001F                     	ds	1
  1195   000020                     ___fldiv@new_exp:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x1F
  1199   000020                     	ds	2
  1200   000022                     ___fldiv@grs:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x21
  1204   000022                     	ds	4
  1205   000026                     ___fldiv@bexp:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x25
  1209   000026                     	ds	1
  1210   000027                     ___fldiv@aexp:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x26
  1214   000027                     	ds	1
  1215   000028                     ?___fltol:
  1216                           	callstack 0
  1217   000028                     ___fltol@f1:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x27
  1221   000028                     	ds	4
  1222   00002C                     ??___fltol:
  1223                           
  1224                           ; 1 bytes @ 0x2B
  1225   00002C                     	ds	4
  1226   000030                     ___fltol@sign1:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x2F
  1230   000030                     	ds	1
  1231   000031                     ___fltol@exp1:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x30
  1235   000031                     	ds	1
  1236   000032                     ??_dash_board:
  1237                           
  1238                           ; 1 bytes @ 0x31
  1239   000032                     	ds	1
  1240   000033                     dash_board@var:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x32
  1244   000033                     	ds	2
  1245   000035                     dash_board@key:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x34
  1249   000035                     	ds	2
  1250   000037                     
  1251                           ; 1 bytes @ 0x36
  1252 ;;
  1253 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1254 ;;
  1255 ;; *************** function _main *****************
  1256 ;; Defined at:
  1257 ;;		line 31 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1271 ;;      Params:         0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels required when called: 6
  1277 ;; This function calls:
  1278 ;;		_change_password
  1279 ;;		_clear_log
  1280 ;;		_dash_board
  1281 ;;		_download_log
  1282 ;;		_init_config
  1283 ;;		_login
  1284 ;;		_menu_car
  1285 ;;		_set_time
  1286 ;;		_view_log
  1287 ;; This function is called by:
  1288 ;;		Startup code after reset
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text0
  1293   000A40                     __ptext0:
  1294                           	callstack 0
  1295   000A40                     _main:
  1296                           	callstack 25
  1297   000A40                     
  1298                           ;main.c: 33:     init_config();
  1299   000A40  ECDC  F000         	call	_init_config	;wreg free
  1300   000A44                     l4475:
  1301                           
  1302                           ;main.c: 36:         if (shift == 0) {
  1303   000A44  505A               	movf	_shift^0,w,c
  1304   000A46  105B               	iorwf	(_shift+1)^0,w,c
  1305   000A48  A4D8               	btfss	status,2,c
  1306   000A4A  EF29  F005         	goto	u4451
  1307   000A4E  EF2B  F005         	goto	u4450
  1308   000A52                     u4451:
  1309   000A52  EF2F  F005         	goto	l4479
  1310   000A56                     u4450:
  1311   000A56                     
  1312                           ;main.c: 37:             dash_board();
  1313   000A56  EC7A  F007         	call	_dash_board	;wreg free
  1314                           
  1315                           ;main.c: 38:         } else if (shift == 1) {
  1316   000A5A  EF22  F005         	goto	l4475
  1317   000A5E                     l4479:
  1318   000A5E  045A               	decf	_shift^0,w,c
  1319   000A60  105B               	iorwf	(_shift+1)^0,w,c
  1320   000A62  A4D8               	btfss	status,2,c
  1321   000A64  EF36  F005         	goto	u4461
  1322   000A68  EF38  F005         	goto	u4460
  1323   000A6C                     u4461:
  1324   000A6C  EF3C  F005         	goto	l4483
  1325   000A70                     u4460:
  1326   000A70                     
  1327                           ;main.c: 39:             login();
  1328   000A70  ECED  F00C         	call	_login	;wreg free
  1329                           
  1330                           ;main.c: 40:         } else if (shift == 2) {
  1331   000A74  EF22  F005         	goto	l4475
  1332   000A78                     l4483:
  1333   000A78  0E02               	movlw	2
  1334   000A7A  185A               	xorwf	_shift^0,w,c
  1335   000A7C  105B               	iorwf	(_shift+1)^0,w,c
  1336   000A7E  A4D8               	btfss	status,2,c
  1337   000A80  EF44  F005         	goto	u4471
  1338   000A84  EF46  F005         	goto	u4470
  1339   000A88                     u4471:
  1340   000A88  EF4A  F005         	goto	l4487
  1341   000A8C                     u4470:
  1342   000A8C                     
  1343                           ;main.c: 41:             menu_car();
  1344   000A8C  EC7E  F009         	call	_menu_car	;wreg free
  1345                           
  1346                           ;main.c: 42:         } else if (shift == 3) {
  1347   000A90  EF22  F005         	goto	l4475
  1348   000A94                     l4487:
  1349   000A94  0E03               	movlw	3
  1350   000A96  185A               	xorwf	_shift^0,w,c
  1351   000A98  105B               	iorwf	(_shift+1)^0,w,c
  1352   000A9A  A4D8               	btfss	status,2,c
  1353   000A9C  EF52  F005         	goto	u4481
  1354   000AA0  EF54  F005         	goto	u4480
  1355   000AA4                     u4481:
  1356   000AA4  EF58  F005         	goto	l4491
  1357   000AA8                     u4480:
  1358   000AA8                     
  1359                           ;main.c: 43:             view_log();
  1360   000AA8  ECFB  F00E         	call	_view_log	;wreg free
  1361                           
  1362                           ;main.c: 44:         } else if (shift == 4) {
  1363   000AAC  EF22  F005         	goto	l4475
  1364   000AB0                     l4491:
  1365   000AB0  0E04               	movlw	4
  1366   000AB2  185A               	xorwf	_shift^0,w,c
  1367   000AB4  105B               	iorwf	(_shift+1)^0,w,c
  1368   000AB6  A4D8               	btfss	status,2,c
  1369   000AB8  EF60  F005         	goto	u4491
  1370   000ABC  EF62  F005         	goto	u4490
  1371   000AC0                     u4491:
  1372   000AC0  EF66  F005         	goto	l4495
  1373   000AC4                     u4490:
  1374   000AC4                     
  1375                           ;main.c: 45:             clear_log();
  1376   000AC4  EC11  F002         	call	_clear_log	;wreg free
  1377                           
  1378                           ;main.c: 46:         } else if (shift == 5) {
  1379   000AC8  EF22  F005         	goto	l4475
  1380   000ACC                     l4495:
  1381   000ACC  0E05               	movlw	5
  1382   000ACE  185A               	xorwf	_shift^0,w,c
  1383   000AD0  105B               	iorwf	(_shift+1)^0,w,c
  1384   000AD2  A4D8               	btfss	status,2,c
  1385   000AD4  EF6E  F005         	goto	u4501
  1386   000AD8  EF70  F005         	goto	u4500
  1387   000ADC                     u4501:
  1388   000ADC  EF74  F005         	goto	l4499
  1389   000AE0                     u4500:
  1390   000AE0                     
  1391                           ;main.c: 47:             download_log();
  1392   000AE0  EC69  F008         	call	_download_log	;wreg free
  1393                           
  1394                           ;main.c: 48:         } else if (shift == 6) {
  1395   000AE4  EF22  F005         	goto	l4475
  1396   000AE8                     l4499:
  1397   000AE8  0E06               	movlw	6
  1398   000AEA  185A               	xorwf	_shift^0,w,c
  1399   000AEC  105B               	iorwf	(_shift+1)^0,w,c
  1400   000AEE  A4D8               	btfss	status,2,c
  1401   000AF0  EF7C  F005         	goto	u4511
  1402   000AF4  EF7E  F005         	goto	u4510
  1403   000AF8                     u4511:
  1404   000AF8  EF82  F005         	goto	l4503
  1405   000AFC                     u4510:
  1406   000AFC                     
  1407                           ;main.c: 49:             set_time();
  1408   000AFC  EC6A  F013         	call	_set_time	;wreg free
  1409                           
  1410                           ;main.c: 50:         } else if (shift == 7) {
  1411   000B00  EF22  F005         	goto	l4475
  1412   000B04                     l4503:
  1413   000B04  0E07               	movlw	7
  1414   000B06  185A               	xorwf	_shift^0,w,c
  1415   000B08  105B               	iorwf	(_shift+1)^0,w,c
  1416   000B0A  A4D8               	btfss	status,2,c
  1417   000B0C  EF8A  F005         	goto	u4521
  1418   000B10  EF8C  F005         	goto	u4520
  1419   000B14                     u4521:
  1420   000B14  EF90  F005         	goto	l50
  1421   000B18                     u4520:
  1422   000B18                     
  1423                           ;main.c: 51:             change_password();
  1424   000B18  EC1D  F011         	call	_change_password	;wreg free
  1425   000B1C  EF22  F005         	goto	l4475
  1426   000B20                     l50:
  1427   000B20  EF22  F005         	goto	l4475
  1428   000B24  EF00  F000         	goto	start
  1429   000B28                     __end_of_main:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _view_log *****************
  1433 ;; Defined at:
  1434 ;;		line 28 in file "view_log.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  j               2   28[COMRAM] int 
  1439 ;;  i               2   24[COMRAM] int 
  1440 ;;  i               2   26[COMRAM] int 
  1441 ;;  key             2   22[COMRAM] int 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1451 ;;      Params:         0       0       0       0       0       0       0
  1452 ;;      Locals:         8       0       0       0       0       0       0
  1453 ;;      Temps:          6       0       0       0       0       0       0
  1454 ;;      Totals:        14       0       0       0       0       0       0
  1455 ;;Total ram usage:       14 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 4
  1458 ;; This function calls:
  1459 ;;		_clcd_print
  1460 ;;		_clcd_putch
  1461 ;;		_clcd_write
  1462 ;;		_read_external_eeprom
  1463 ;;		_read_switches
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text1
  1470   001DF6                     __ptext1:
  1471                           	callstack 0
  1472   001DF6                     _view_log:
  1473                           	callstack 26
  1474   001DF6                     
  1475                           ;view_log.c: 29:     if (e_flag == 1) {
  1476   001DF6  0100               	movlb	0	; () banked
  1477   001DF8  0582               	decf	_e_flag& (0+255),w,b
  1478   001DFA  1183               	iorwf	(_e_flag+1)& (0+255),w,b
  1479   001DFC  A4D8               	btfss	status,2,c
  1480   001DFE  EF03  F00F         	goto	u3561
  1481   001E02  EF05  F00F         	goto	u3560
  1482   001E06                     u3561:
  1483   001E06  EF0D  F00F         	goto	l3953
  1484   001E0A                     u3560:
  1485   001E0A                     
  1486                           ; BSR set to: 0
  1487                           ;view_log.c: 30:         once = 1;
  1488   001E0A  0E00               	movlw	0
  1489   001E0C  6F9E               	movwf	(_once+1)& (0+255),b
  1490   001E0E  0E01               	movlw	1
  1491   001E10  6F9D               	movwf	_once& (0+255),b
  1492                           
  1493                           ;view_log.c: 31:         e_flag = 0;
  1494   001E12  0E00               	movlw	0
  1495   001E14  6F83               	movwf	(_e_flag+1)& (0+255),b
  1496   001E16  0E00               	movlw	0
  1497   001E18  6F82               	movwf	_e_flag& (0+255),b
  1498   001E1A                     l3953:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;view_log.c: 33:     if (clear_flag == 0 && event_count>0) {
  1502   001E1A  5190               	movf	_clear_flag& (0+255),w,b
  1503   001E1C  1191               	iorwf	(_clear_flag+1)& (0+255),w,b
  1504   001E1E  A4D8               	btfss	status,2,c
  1505   001E20  EF14  F00F         	goto	u3571
  1506   001E24  EF16  F00F         	goto	u3570
  1507   001E28                     u3571:
  1508   001E28  EFFF  F010         	goto	l4057
  1509   001E2C                     u3570:
  1510   001E2C                     
  1511                           ; BSR set to: 0
  1512   001E2C  BE45               	btfsc	(_event_count+1)^0,7,c
  1513   001E2E  EF21  F00F         	goto	u3581
  1514   001E32  5045               	movf	(_event_count+1)^0,w,c
  1515   001E34  E108               	bnz	u3580
  1516   001E36  0444               	decf	_event_count^0,w,c
  1517   001E38  A0D8               	btfss	status,0,c
  1518   001E3A  EF21  F00F         	goto	u3581
  1519   001E3E  EF23  F00F         	goto	u3580
  1520   001E42                     u3581:
  1521   001E42  EFFF  F010         	goto	l4057
  1522   001E46                     u3580:
  1523   001E46                     
  1524                           ; BSR set to: 0
  1525                           ;view_log.c: 34:             clcd_print("LOGS :-", (0x80 + (0)));
  1526   001E46  0EDF               	movlw	low STR_14
  1527   001E48  6E03               	movwf	clcd_print@data^0,c
  1528   001E4A  0E2F               	movlw	high STR_14
  1529   001E4C  6E04               	movwf	(clcd_print@data+1)^0,c
  1530   001E4E  0E80               	movlw	128
  1531   001E50  6E05               	movwf	clcd_print@addr^0,c
  1532   001E52  EC9D  F002         	call	_clcd_print	;wreg free
  1533   001E56                     
  1534                           ;view_log.c: 35:             static int delay11 = 0, delay12 = 0;;view_log.c: 36:       
      +                                if (once == 1) {
  1535   001E56  0100               	movlb	0	; () banked
  1536   001E58  059D               	decf	_once& (0+255),w,b
  1537   001E5A  119E               	iorwf	(_once+1)& (0+255),w,b
  1538   001E5C  A4D8               	btfss	status,2,c
  1539   001E5E  EF33  F00F         	goto	u3591
  1540   001E62  EF35  F00F         	goto	u3590
  1541   001E66                     u3591:
  1542   001E66  EFC0  F00F         	goto	l3989
  1543   001E6A                     u3590:
  1544   001E6A                     
  1545                           ; BSR set to: 0
  1546                           ;view_log.c: 37:                 for (int i = 0; i < event_count; i++) {
  1547   001E6A  0E00               	movlw	0
  1548   001E6C  6E1A               	movwf	(view_log@i+1)^0,c
  1549   001E6E  0E00               	movlw	0
  1550   001E70  6E19               	movwf	view_log@i^0,c
  1551   001E72  EFAC  F00F         	goto	l3985
  1552   001E76                     l3963:
  1553                           
  1554                           ;view_log.c: 38:                     for (int j = 0; j < 14; j++) {
  1555   001E76  0E00               	movlw	0
  1556   001E78  6E1E               	movwf	(view_log@j+1)^0,c
  1557   001E7A  0E00               	movlw	0
  1558   001E7C  6E1D               	movwf	view_log@j^0,c
  1559   001E7E                     l3969:
  1560                           
  1561                           ;view_log.c: 39:                         if (j == 8 || j == 11) {
  1562   001E7E  0E08               	movlw	8
  1563   001E80  181D               	xorwf	view_log@j^0,w,c
  1564   001E82  101E               	iorwf	(view_log@j+1)^0,w,c
  1565   001E84  B4D8               	btfsc	status,2,c
  1566   001E86  EF47  F00F         	goto	u3601
  1567   001E8A  EF49  F00F         	goto	u3600
  1568   001E8E                     u3601:
  1569   001E8E  EF53  F00F         	goto	l3973
  1570   001E92                     u3600:
  1571   001E92  0E0B               	movlw	11
  1572   001E94  181D               	xorwf	view_log@j^0,w,c
  1573   001E96  101E               	iorwf	(view_log@j+1)^0,w,c
  1574   001E98  A4D8               	btfss	status,2,c
  1575   001E9A  EF51  F00F         	goto	u3611
  1576   001E9E  EF53  F00F         	goto	u3610
  1577   001EA2                     u3611:
  1578   001EA2  EF73  F00F         	goto	l3975
  1579   001EA6                     u3610:
  1580   001EA6                     l3973:
  1581                           
  1582                           ;view_log.c: 40:                             array[i][j] = ' ';
  1583   001EA6  C019  F011         	movff	view_log@i,??_view_log
  1584   001EAA  C01A  F012         	movff	view_log@i+1,??_view_log+1
  1585   001EAE  0E05               	movlw	5
  1586   001EB0                     u3625:
  1587   001EB0  90D8               	bcf	status,0,c
  1588   001EB2  3611               	rlcf	??_view_log^0,f,c
  1589   001EB4  3612               	rlcf	(??_view_log+1)^0,f,c
  1590   001EB6  2EE8               	decfsz	wreg,f,c
  1591   001EB8  EF58  F00F         	goto	u3625
  1592   001EBC  0EF0               	movlw	low _array
  1593   001EBE  2411               	addwf	??_view_log^0,w,c
  1594   001EC0  6E13               	movwf	(??_view_log+2)^0,c
  1595   001EC2  0E01               	movlw	high _array
  1596   001EC4  2012               	addwfc	(??_view_log+1)^0,w,c
  1597   001EC6  6E14               	movwf	(??_view_log+3)^0,c
  1598   001EC8  90D8               	bcf	status,0,c
  1599   001ECA  341D               	rlcf	view_log@j^0,w,c
  1600   001ECC  6ED9               	movwf	fsr2l,c
  1601   001ECE  341E               	rlcf	(view_log@j+1)^0,w,c
  1602   001ED0  6EDA               	movwf	fsr2h,c
  1603   001ED2  5013               	movf	(??_view_log+2)^0,w,c
  1604   001ED4  26D9               	addwf	fsr2l,f,c
  1605   001ED6  5014               	movf	(??_view_log+3)^0,w,c
  1606   001ED8  22DA               	addwfc	fsr2h,f,c
  1607   001EDA  0E20               	movlw	32
  1608   001EDC  6EDE               	movwf	postinc2,c
  1609   001EDE  0E00               	movlw	0
  1610   001EE0  6EDD               	movwf	postdec2,c
  1611                           
  1612                           ;view_log.c: 41:                         } else {
  1613   001EE2  EF9A  F00F         	goto	l3979
  1614   001EE6                     l3975:
  1615                           
  1616                           ;view_log.c: 42:                             array[i][j] = read_external_eeprom(address+
      +                          +);
  1617   001EE6  0100               	movlb	0	; () banked
  1618   001EE8  517C               	movf	_address& (0+255),w,b
  1619   001EEA  EC50  F001         	call	_read_external_eeprom
  1620   001EEE  6E11               	movwf	??_view_log^0,c
  1621   001EF0  6A12               	clrf	(??_view_log+1)^0,c
  1622   001EF2  C019  F013         	movff	view_log@i,??_view_log+2
  1623   001EF6  C01A  F014         	movff	view_log@i+1,??_view_log+3
  1624   001EFA  0E05               	movlw	5
  1625   001EFC                     u3635:
  1626   001EFC  90D8               	bcf	status,0,c
  1627   001EFE  3613               	rlcf	(??_view_log+2)^0,f,c
  1628   001F00  3614               	rlcf	(??_view_log+3)^0,f,c
  1629   001F02  2EE8               	decfsz	wreg,f,c
  1630   001F04  EF7E  F00F         	goto	u3635
  1631   001F08  0EF0               	movlw	low _array
  1632   001F0A  2413               	addwf	(??_view_log+2)^0,w,c
  1633   001F0C  6E15               	movwf	(??_view_log+4)^0,c
  1634   001F0E  0E01               	movlw	high _array
  1635   001F10  2014               	addwfc	(??_view_log+3)^0,w,c
  1636   001F12  6E16               	movwf	(??_view_log+5)^0,c
  1637   001F14  90D8               	bcf	status,0,c
  1638   001F16  341D               	rlcf	view_log@j^0,w,c
  1639   001F18  6ED9               	movwf	fsr2l,c
  1640   001F1A  341E               	rlcf	(view_log@j+1)^0,w,c
  1641   001F1C  6EDA               	movwf	fsr2h,c
  1642   001F1E  5015               	movf	(??_view_log+4)^0,w,c
  1643   001F20  26D9               	addwf	fsr2l,f,c
  1644   001F22  5016               	movf	(??_view_log+5)^0,w,c
  1645   001F24  22DA               	addwfc	fsr2h,f,c
  1646   001F26  C011  FFDE         	movff	??_view_log,postinc2
  1647   001F2A  C012  FFDD         	movff	??_view_log+1,postdec2
  1648   001F2E  0100               	movlb	0	; () banked
  1649   001F30  4B7C               	infsnz	_address& (0+255),f,b
  1650   001F32  2B7D               	incf	(_address+1)& (0+255),f,b
  1651   001F34                     l3979:
  1652                           
  1653                           ;view_log.c: 44:                     }
  1654   001F34  4A1D               	infsnz	view_log@j^0,f,c
  1655   001F36  2A1E               	incf	(view_log@j+1)^0,f,c
  1656   001F38  BE1E               	btfsc	(view_log@j+1)^0,7,c
  1657   001F3A  EFA8  F00F         	goto	u3641
  1658   001F3E  501E               	movf	(view_log@j+1)^0,w,c
  1659   001F40  E109               	bnz	u3640
  1660   001F42  0E0E               	movlw	14
  1661   001F44  5C1D               	subwf	view_log@j^0,w,c
  1662   001F46  A0D8               	btfss	status,0,c
  1663   001F48  EFA8  F00F         	goto	u3641
  1664   001F4C  EFAA  F00F         	goto	u3640
  1665   001F50                     u3641:
  1666   001F50  EF3F  F00F         	goto	l3969
  1667   001F54                     u3640:
  1668   001F54                     
  1669                           ;view_log.c: 45:                 }
  1670   001F54  4A19               	infsnz	view_log@i^0,f,c
  1671   001F56  2A1A               	incf	(view_log@i+1)^0,f,c
  1672   001F58                     l3985:
  1673   001F58  5044               	movf	_event_count^0,w,c
  1674   001F5A  5C19               	subwf	view_log@i^0,w,c
  1675   001F5C  501A               	movf	(view_log@i+1)^0,w,c
  1676   001F5E  0A80               	xorlw	128
  1677   001F60  6E11               	movwf	??_view_log^0,c
  1678   001F62  5045               	movf	(_event_count+1)^0,w,c
  1679   001F64  0A80               	xorlw	128
  1680   001F66  5811               	subwfb	??_view_log^0,w,c
  1681   001F68  A0D8               	btfss	status,0,c
  1682   001F6A  EFB9  F00F         	goto	u3651
  1683   001F6E  EFBB  F00F         	goto	u3650
  1684   001F72                     u3651:
  1685   001F72  EF3B  F00F         	goto	l3963
  1686   001F76                     u3650:
  1687   001F76                     
  1688                           ;view_log.c: 46:                 once = 0;
  1689   001F76  0E00               	movlw	0
  1690   001F78  0100               	movlb	0	; () banked
  1691   001F7A  6F9E               	movwf	(_once+1)& (0+255),b
  1692   001F7C  0E00               	movlw	0
  1693   001F7E  6F9D               	movwf	_once& (0+255),b
  1694   001F80                     l3989:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;view_log.c: 49:             int key = read_switches(0);
  1698   001F80  0E00               	movlw	0
  1699   001F82  EC0D  F003         	call	_read_switches
  1700   001F86  6E11               	movwf	??_view_log^0,c
  1701   001F88  5011               	movf	??_view_log^0,w,c
  1702   001F8A  6E17               	movwf	view_log@key^0,c
  1703   001F8C  6A18               	clrf	(view_log@key+1)^0,c
  1704   001F8E                     
  1705                           ;view_log.c: 50:             if (11 == key) {
  1706   001F8E  0E0B               	movlw	11
  1707   001F90  1817               	xorwf	view_log@key^0,w,c
  1708   001F92  1018               	iorwf	(view_log@key+1)^0,w,c
  1709   001F94  A4D8               	btfss	status,2,c
  1710   001F96  EFCF  F00F         	goto	u3661
  1711   001F9A  EFD1  F00F         	goto	u3660
  1712   001F9E                     u3661:
  1713   001F9E  EFD6  F00F         	goto	l3995
  1714   001FA2                     u3660:
  1715   001FA2                     
  1716                           ;view_log.c: 51:                 delay11++;
  1717   001FA2  0100               	movlb	0	; () banked
  1718   001FA4  4B7A               	infsnz	view_log@delay11& (0+255),f,b
  1719   001FA6  2B7B               	incf	(view_log@delay11+1)& (0+255),f,b
  1720                           
  1721                           ;view_log.c: 52:             } else if (delay11 > 0 && delay11 < 500) {
  1722   001FA8  EF2E  F010         	goto	l4011
  1723   001FAC                     l3995:
  1724   001FAC  0100               	movlb	0	; () banked
  1725   001FAE  BF7B               	btfsc	(view_log@delay11+1)& (0+255),7,b
  1726   001FB0  EFE2  F00F         	goto	u3671
  1727   001FB4  517B               	movf	(view_log@delay11+1)& (0+255),w,b
  1728   001FB6  E108               	bnz	u3670
  1729   001FB8  057A               	decf	view_log@delay11& (0+255),w,b
  1730   001FBA  A0D8               	btfss	status,0,c
  1731   001FBC  EFE2  F00F         	goto	u3671
  1732   001FC0  EFE4  F00F         	goto	u3670
  1733   001FC4                     u3671:
  1734   001FC4  EF2A  F010         	goto	l4009
  1735   001FC8                     u3670:
  1736   001FC8                     
  1737                           ; BSR set to: 0
  1738   001FC8  BF7B               	btfsc	(view_log@delay11+1)& (0+255),7,b
  1739   001FCA  EFF2  F00F         	goto	u3680
  1740   001FCE  0EF4               	movlw	244
  1741   001FD0  5D7A               	subwf	view_log@delay11& (0+255),w,b
  1742   001FD2  0E01               	movlw	1
  1743   001FD4  597B               	subwfb	(view_log@delay11+1)& (0+255),w,b
  1744   001FD6  B0D8               	btfsc	status,0,c
  1745   001FD8  EFF0  F00F         	goto	u3681
  1746   001FDC  EFF2  F00F         	goto	u3680
  1747   001FE0                     u3681:
  1748   001FE0  EF2A  F010         	goto	l4009
  1749   001FE4                     u3680:
  1750   001FE4                     
  1751                           ; BSR set to: 0
  1752                           ;view_log.c: 53:                 delay11 = 0;
  1753   001FE4  0E00               	movlw	0
  1754   001FE6  6F7B               	movwf	(view_log@delay11+1)& (0+255),b
  1755   001FE8  0E00               	movlw	0
  1756   001FEA  6F7A               	movwf	view_log@delay11& (0+255),b
  1757   001FEC                     
  1758                           ; BSR set to: 0
  1759                           ;view_log.c: 54:                 if (view_flag-- <= 0) {
  1760   001FEC  5180               	movf	_view_flag& (0+255),w,b
  1761   001FEE  6E11               	movwf	??_view_log^0,c
  1762   001FF0  5181               	movf	(_view_flag+1)& (0+255),w,b
  1763   001FF2  6E12               	movwf	(??_view_log+1)^0,c
  1764   001FF4  0E01               	movlw	1
  1765   001FF6  5F80               	subwf	_view_flag& (0+255),f,b
  1766   001FF8  0E00               	movlw	0
  1767   001FFA  5B81               	subwfb	(_view_flag+1)& (0+255),f,b
  1768   001FFC  BE12               	btfsc	(??_view_log+1)^0,7,c
  1769   001FFE  EF0B  F010         	goto	u3690
  1770   002002  5012               	movf	(??_view_log+1)^0,w,c
  1771   002004  E106               	bnz	u3691
  1772   002006  0411               	decf	??_view_log^0,w,c
  1773   002008  B0D8               	btfsc	status,0,c
  1774   00200A  EF09  F010         	goto	u3691
  1775   00200E  EF0B  F010         	goto	u3690
  1776   002012                     u3691:
  1777   002012  EF0F  F010         	goto	l4005
  1778   002016                     u3690:
  1779   002016                     
  1780                           ; BSR set to: 0
  1781                           ;view_log.c: 55:                     view_flag = 0;
  1782   002016  0E00               	movlw	0
  1783   002018  6F81               	movwf	(_view_flag+1)& (0+255),b
  1784   00201A  0E00               	movlw	0
  1785   00201C  6F80               	movwf	_view_flag& (0+255),b
  1786   00201E                     l4005:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;view_log.c: 57:                 if (scroll-- <= 0) {
  1790   00201E  517E               	movf	_scroll& (0+255),w,b
  1791   002020  6E11               	movwf	??_view_log^0,c
  1792   002022  517F               	movf	(_scroll+1)& (0+255),w,b
  1793   002024  6E12               	movwf	(??_view_log+1)^0,c
  1794   002026  0E01               	movlw	1
  1795   002028  5F7E               	subwf	_scroll& (0+255),f,b
  1796   00202A  0E00               	movlw	0
  1797   00202C  5B7F               	subwfb	(_scroll+1)& (0+255),f,b
  1798   00202E  BE12               	btfsc	(??_view_log+1)^0,7,c
  1799   002030  EF24  F010         	goto	u3700
  1800   002034  5012               	movf	(??_view_log+1)^0,w,c
  1801   002036  E106               	bnz	u3701
  1802   002038  0411               	decf	??_view_log^0,w,c
  1803   00203A  B0D8               	btfsc	status,0,c
  1804   00203C  EF22  F010         	goto	u3701
  1805   002040  EF24  F010         	goto	u3700
  1806   002044                     u3701:
  1807   002044  EF2E  F010         	goto	l4011
  1808   002048                     u3700:
  1809   002048                     
  1810                           ; BSR set to: 0
  1811                           ;view_log.c: 58:                     scroll = 0;
  1812   002048  0E00               	movlw	0
  1813   00204A  6F7F               	movwf	(_scroll+1)& (0+255),b
  1814   00204C  0E00               	movlw	0
  1815   00204E  6F7E               	movwf	_scroll& (0+255),b
  1816   002050  EF2E  F010         	goto	l4011
  1817   002054                     l4009:
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;view_log.c: 61:                 delay11 = 0;
  1821   002054  0E00               	movlw	0
  1822   002056  6F7B               	movwf	(view_log@delay11+1)& (0+255),b
  1823   002058  0E00               	movlw	0
  1824   00205A  6F7A               	movwf	view_log@delay11& (0+255),b
  1825   00205C                     l4011:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;view_log.c: 64:             if (12 == key) {
  1829   00205C  0E0C               	movlw	12
  1830   00205E  1817               	xorwf	view_log@key^0,w,c
  1831   002060  1018               	iorwf	(view_log@key+1)^0,w,c
  1832   002062  A4D8               	btfss	status,2,c
  1833   002064  EF36  F010         	goto	u3711
  1834   002068  EF38  F010         	goto	u3710
  1835   00206C                     u3711:
  1836   00206C  EF57  F010         	goto	l4023
  1837   002070                     u3710:
  1838   002070                     
  1839                           ; BSR set to: 0
  1840                           ;view_log.c: 65:                 delay12++;
  1841   002070  4B78               	infsnz	view_log@delay12& (0+255),f,b
  1842   002072  2B79               	incf	(view_log@delay12+1)& (0+255),f,b
  1843   002074                     
  1844                           ; BSR set to: 0
  1845                           ;view_log.c: 66:                 if (delay12 > 500) {
  1846   002074  BF79               	btfsc	(view_log@delay12+1)& (0+255),7,b
  1847   002076  EF46  F010         	goto	u3721
  1848   00207A  0EF5               	movlw	245
  1849   00207C  5D78               	subwf	view_log@delay12& (0+255),w,b
  1850   00207E  0E01               	movlw	1
  1851   002080  5979               	subwfb	(view_log@delay12+1)& (0+255),w,b
  1852   002082  A0D8               	btfss	status,0,c
  1853   002084  EF46  F010         	goto	u3721
  1854   002088  EF48  F010         	goto	u3720
  1855   00208C                     u3721:
  1856   00208C  EFAB  F010         	goto	l599
  1857   002090                     u3720:
  1858   002090                     
  1859                           ; BSR set to: 0
  1860                           ;view_log.c: 67:                     delay12 = 0;
  1861   002090  0E00               	movlw	0
  1862   002092  6F79               	movwf	(view_log@delay12+1)& (0+255),b
  1863   002094  0E00               	movlw	0
  1864   002096  6F78               	movwf	view_log@delay12& (0+255),b
  1865                           
  1866                           ;view_log.c: 68:                     shift = 2;
  1867   002098  0E00               	movlw	0
  1868   00209A  6E5B               	movwf	(_shift+1)^0,c
  1869   00209C  0E02               	movlw	2
  1870   00209E  6E5A               	movwf	_shift^0,c
  1871   0020A0                     
  1872                           ; BSR set to: 0
  1873                           ;view_log.c: 69:                     clcd_write(0x01, 0);
  1874   0020A0  0E00               	movlw	0
  1875   0020A2  6E01               	movwf	clcd_write@control_bit^0,c
  1876   0020A4  0E01               	movlw	1
  1877   0020A6  EC65  F001         	call	_clcd_write
  1878   0020AA  EF1C  F011         	goto	l598
  1879   0020AE                     l4023:
  1880                           
  1881                           ; BSR set to: 0
  1882   0020AE  BF79               	btfsc	(view_log@delay12+1)& (0+255),7,b
  1883   0020B0  EF62  F010         	goto	u3731
  1884   0020B4  5179               	movf	(view_log@delay12+1)& (0+255),w,b
  1885   0020B6  E108               	bnz	u3730
  1886   0020B8  0578               	decf	view_log@delay12& (0+255),w,b
  1887   0020BA  A0D8               	btfss	status,0,c
  1888   0020BC  EF62  F010         	goto	u3731
  1889   0020C0  EF64  F010         	goto	u3730
  1890   0020C4                     u3731:
  1891   0020C4  EFA7  F010         	goto	l4037
  1892   0020C8                     u3730:
  1893   0020C8                     
  1894                           ; BSR set to: 0
  1895   0020C8  BF79               	btfsc	(view_log@delay12+1)& (0+255),7,b
  1896   0020CA  EF72  F010         	goto	u3740
  1897   0020CE  0EF4               	movlw	244
  1898   0020D0  5D78               	subwf	view_log@delay12& (0+255),w,b
  1899   0020D2  0E01               	movlw	1
  1900   0020D4  5979               	subwfb	(view_log@delay12+1)& (0+255),w,b
  1901   0020D6  B0D8               	btfsc	status,0,c
  1902   0020D8  EF70  F010         	goto	u3741
  1903   0020DC  EF72  F010         	goto	u3740
  1904   0020E0                     u3741:
  1905   0020E0  EFA7  F010         	goto	l4037
  1906   0020E4                     u3740:
  1907   0020E4                     
  1908                           ; BSR set to: 0
  1909                           ;view_log.c: 73:                 delay12 = 0;
  1910   0020E4  0E00               	movlw	0
  1911   0020E6  6F79               	movwf	(view_log@delay12+1)& (0+255),b
  1912   0020E8  0E00               	movlw	0
  1913   0020EA  6F78               	movwf	view_log@delay12& (0+255),b
  1914   0020EC                     
  1915                           ; BSR set to: 0
  1916                           ;view_log.c: 74:                 if (scroll < event_count - 1) {
  1917   0020EC  0EFF               	movlw	255
  1918   0020EE  2444               	addwf	_event_count^0,w,c
  1919   0020F0  6E11               	movwf	??_view_log^0,c
  1920   0020F2  0EFF               	movlw	255
  1921   0020F4  2045               	addwfc	(_event_count+1)^0,w,c
  1922   0020F6  6E12               	movwf	(??_view_log+1)^0,c
  1923   0020F8  5011               	movf	??_view_log^0,w,c
  1924   0020FA  5D7E               	subwf	_scroll& (0+255),w,b
  1925   0020FC  517F               	movf	(_scroll+1)& (0+255),w,b
  1926   0020FE  0A80               	xorlw	128
  1927   002100  6E13               	movwf	(??_view_log+2)^0,c
  1928   002102  5012               	movf	(??_view_log+1)^0,w,c
  1929   002104  0A80               	xorlw	128
  1930   002106  5813               	subwfb	(??_view_log+2)^0,w,c
  1931   002108  B0D8               	btfsc	status,0,c
  1932   00210A  EF89  F010         	goto	u3751
  1933   00210E  EF8B  F010         	goto	u3750
  1934   002112                     u3751:
  1935   002112  EFAB  F010         	goto	l599
  1936   002116                     u3750:
  1937   002116                     
  1938                           ; BSR set to: 0
  1939                           ;view_log.c: 75:                     view_flag++;
  1940   002116  4B80               	infsnz	_view_flag& (0+255),f,b
  1941   002118  2B81               	incf	(_view_flag+1)& (0+255),f,b
  1942   00211A                     
  1943                           ; BSR set to: 0
  1944                           ;view_log.c: 76:                     if (scroll++ >= 9) {
  1945   00211A  517E               	movf	_scroll& (0+255),w,b
  1946   00211C  6E11               	movwf	??_view_log^0,c
  1947   00211E  517F               	movf	(_scroll+1)& (0+255),w,b
  1948   002120  6E12               	movwf	(??_view_log+1)^0,c
  1949   002122  4B7E               	infsnz	_scroll& (0+255),f,b
  1950   002124  2B7F               	incf	(_scroll+1)& (0+255),f,b
  1951   002126  BE12               	btfsc	(??_view_log+1)^0,7,c
  1952   002128  EF9F  F010         	goto	u3761
  1953   00212C  5012               	movf	(??_view_log+1)^0,w,c
  1954   00212E  E109               	bnz	u3760
  1955   002130  0E09               	movlw	9
  1956   002132  5C11               	subwf	??_view_log^0,w,c
  1957   002134  A0D8               	btfss	status,0,c
  1958   002136  EF9F  F010         	goto	u3761
  1959   00213A  EFA1  F010         	goto	u3760
  1960   00213E                     u3761:
  1961   00213E  EFAB  F010         	goto	l599
  1962   002142                     u3760:
  1963   002142                     
  1964                           ; BSR set to: 0
  1965                           ;view_log.c: 77:                         scroll = 9;
  1966   002142  0E00               	movlw	0
  1967   002144  6F7F               	movwf	(_scroll+1)& (0+255),b
  1968   002146  0E09               	movlw	9
  1969   002148  6F7E               	movwf	_scroll& (0+255),b
  1970   00214A  EFAB  F010         	goto	l599
  1971   00214E                     l4037:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;view_log.c: 81:                 delay12 = 0;
  1975   00214E  0E00               	movlw	0
  1976   002150  6F79               	movwf	(view_log@delay12+1)& (0+255),b
  1977   002152  0E00               	movlw	0
  1978   002154  6F78               	movwf	view_log@delay12& (0+255),b
  1979   002156                     l599:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;view_log.c: 83:             for (int i = 2; i <= 15; i++) {
  1983   002156  0E00               	movlw	0
  1984   002158  6E1C               	movwf	(view_log@i_457+1)^0,c
  1985   00215A  0E02               	movlw	2
  1986   00215C  6E1B               	movwf	view_log@i_457^0,c
  1987   00215E                     l4043:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;view_log.c: 84:                 clcd_putch(scroll + 48, (0xC0 + (0)));
  1991   00215E  0EC0               	movlw	192
  1992   002160  6E0F               	movwf	clcd_putch@addr^0,c
  1993   002162  517E               	movf	_scroll& (0+255),w,b
  1994   002164  0F30               	addlw	48
  1995   002166  ECE7  F000         	call	_clcd_putch
  1996   00216A                     
  1997                           ;view_log.c: 85:                 clcd_putch('.', (0xC0 + (1)));
  1998   00216A  0EC1               	movlw	193
  1999   00216C  6E0F               	movwf	clcd_putch@addr^0,c
  2000   00216E  0E2E               	movlw	46
  2001   002170  ECE7  F000         	call	_clcd_putch
  2002   002174                     
  2003                           ;view_log.c: 87:                 clcd_putch(array[view_flag][i - 2], (0xC0 + (i)));
  2004   002174  501B               	movf	view_log@i_457^0,w,c
  2005   002176  0FC0               	addlw	192
  2006   002178  6E0F               	movwf	clcd_putch@addr^0,c
  2007   00217A  C080  F011         	movff	_view_flag,??_view_log
  2008   00217E  C081  F012         	movff	_view_flag+1,??_view_log+1
  2009   002182  0E05               	movlw	5
  2010   002184                     u3775:
  2011   002184  90D8               	bcf	status,0,c
  2012   002186  3611               	rlcf	??_view_log^0,f,c
  2013   002188  3612               	rlcf	(??_view_log+1)^0,f,c
  2014   00218A  2EE8               	decfsz	wreg,f,c
  2015   00218C  EFC2  F010         	goto	u3775
  2016   002190  C01B  F013         	movff	view_log@i_457,??_view_log+2
  2017   002194  C01C  F014         	movff	view_log@i_457+1,??_view_log+3
  2018   002198  90D8               	bcf	status,0,c
  2019   00219A  3613               	rlcf	(??_view_log+2)^0,f,c
  2020   00219C  3614               	rlcf	(??_view_log+3)^0,f,c
  2021   00219E  0EEC               	movlw	low (_array+65532)
  2022   0021A0  2413               	addwf	(??_view_log+2)^0,w,c
  2023   0021A2  6E15               	movwf	(??_view_log+4)^0,c
  2024   0021A4  0E01               	movlw	high (_array+65532)
  2025   0021A6  2014               	addwfc	(??_view_log+3)^0,w,c
  2026   0021A8  6E16               	movwf	(??_view_log+5)^0,c
  2027   0021AA  5011               	movf	??_view_log^0,w,c
  2028   0021AC  2415               	addwf	(??_view_log+4)^0,w,c
  2029   0021AE  6ED9               	movwf	fsr2l,c
  2030   0021B0  5012               	movf	(??_view_log+1)^0,w,c
  2031   0021B2  2016               	addwfc	(??_view_log+5)^0,w,c
  2032   0021B4  6EDA               	movwf	fsr2h,c
  2033   0021B6  50DF               	movf	indf2,w,c
  2034   0021B8  ECE7  F000         	call	_clcd_putch
  2035   0021BC                     
  2036                           ;view_log.c: 88:                 if (address == 0x78) {
  2037   0021BC  0E78               	movlw	120
  2038   0021BE  0100               	movlb	0	; () banked
  2039   0021C0  197C               	xorwf	_address& (0+255),w,b
  2040   0021C2  117D               	iorwf	(_address+1)& (0+255),w,b
  2041   0021C4  A4D8               	btfss	status,2,c
  2042   0021C6  EFE7  F010         	goto	u3781
  2043   0021CA  EFE9  F010         	goto	u3780
  2044   0021CE                     u3781:
  2045   0021CE  EFED  F010         	goto	l4053
  2046   0021D2                     u3780:
  2047   0021D2                     
  2048                           ; BSR set to: 0
  2049                           ;view_log.c: 89:                     address = 0x00;
  2050   0021D2  0E00               	movlw	0
  2051   0021D4  6F7D               	movwf	(_address+1)& (0+255),b
  2052   0021D6  0E00               	movlw	0
  2053   0021D8  6F7C               	movwf	_address& (0+255),b
  2054   0021DA                     l4053:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;view_log.c: 91:             }
  2058   0021DA  4A1B               	infsnz	view_log@i_457^0,f,c
  2059   0021DC  2A1C               	incf	(view_log@i_457+1)^0,f,c
  2060   0021DE                     
  2061                           ; BSR set to: 0
  2062   0021DE  BE1C               	btfsc	(view_log@i_457+1)^0,7,c
  2063   0021E0  EFFB  F010         	goto	u3791
  2064   0021E4  501C               	movf	(view_log@i_457+1)^0,w,c
  2065   0021E6  E109               	bnz	u3790
  2066   0021E8  0E10               	movlw	16
  2067   0021EA  5C1B               	subwf	view_log@i_457^0,w,c
  2068   0021EC  A0D8               	btfss	status,0,c
  2069   0021EE  EFFB  F010         	goto	u3791
  2070   0021F2  EFFD  F010         	goto	u3790
  2071   0021F6                     u3791:
  2072   0021F6  EFAF  F010         	goto	l4043
  2073   0021FA                     u3790:
  2074   0021FA  EF1C  F011         	goto	l598
  2075   0021FE                     l4057:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;view_log.c: 94:         clcd_print("No logs present", (0x80 + (0)));
  2079   0021FE  0E59               	movlw	low STR_15
  2080   002200  6E03               	movwf	clcd_print@data^0,c
  2081   002202  0E2F               	movlw	high STR_15
  2082   002204  6E04               	movwf	(clcd_print@data+1)^0,c
  2083   002206  0E80               	movlw	128
  2084   002208  6E05               	movwf	clcd_print@addr^0,c
  2085   00220A  EC9D  F002         	call	_clcd_print	;wreg free
  2086   00220E                     
  2087                           ;view_log.c: 95:         _delay((unsigned long)((500)*(20000000/4000.0)));
  2088   00220E  0E0D               	movlw	13
  2089   002210  6E12               	movwf	(??_view_log+1)^0,c
  2090   002212  0EAF               	movlw	175
  2091   002214  6E11               	movwf	??_view_log^0,c
  2092   002216  0EB6               	movlw	182
  2093   002218                     u4537:
  2094   002218  2EE8               	decfsz	wreg,f,c
  2095   00221A  D7FE               	bra	u4537
  2096   00221C  2E11               	decfsz	??_view_log^0,f,c
  2097   00221E  D7FC               	bra	u4537
  2098   002220  2E12               	decfsz	(??_view_log+1)^0,f,c
  2099   002222  D7FA               	bra	u4537
  2100   002224  D000               	nop2	
  2101   002226                     
  2102                           ;view_log.c: 96:         shift = 2;
  2103   002226  0E00               	movlw	0
  2104   002228  6E5B               	movwf	(_shift+1)^0,c
  2105   00222A  0E02               	movlw	2
  2106   00222C  6E5A               	movwf	_shift^0,c
  2107   00222E                     
  2108                           ;view_log.c: 97:         clcd_write(0x01, 0);
  2109   00222E  0E00               	movlw	0
  2110   002230  6E01               	movwf	clcd_write@control_bit^0,c
  2111   002232  0E01               	movlw	1
  2112   002234  EC65  F001         	call	_clcd_write
  2113   002238                     l598:
  2114   002238  0012               	return		;funcret
  2115   00223A                     __end_of_view_log:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _set_time *****************
  2119 ;; Defined at:
  2120 ;;		line 32 in file "set_time.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  w               2   30[COMRAM] unsigned int 
  2125 ;;  w               2   28[COMRAM] unsigned int 
  2126 ;;  w               2   26[COMRAM] unsigned int 
  2127 ;;  w               4   22[COMRAM] unsigned long 
  2128 ;;  w               4   18[COMRAM] unsigned long 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2138 ;;      Params:         0       0       0       0       0       0       0
  2139 ;;      Locals:        14       0       0       0       0       0       0
  2140 ;;      Temps:          2       0       0       0       0       0       0
  2141 ;;      Totals:        16       0       0       0       0       0       0
  2142 ;;Total ram usage:       16 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 3
  2145 ;; This function calls:
  2146 ;;		___awdiv
  2147 ;;		___awmod
  2148 ;;		_clcd_print
  2149 ;;		_clcd_putch
  2150 ;;		_clcd_write
  2151 ;;		_read_switches
  2152 ;;		_write_ds1307
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text2
  2159   0026D4                     __ptext2:
  2160                           	callstack 0
  2161   0026D4                     _set_time:
  2162                           	callstack 27
  2163   0026D4                     
  2164                           ;set_time.c: 33:     clcd_print("TIME(HH:MM:SS)", (0x80 + (0)));
  2165   0026D4  0E98               	movlw	low STR_16
  2166   0026D6  6E03               	movwf	clcd_print@data^0,c
  2167   0026D8  0E2F               	movlw	high STR_16
  2168   0026DA  6E04               	movwf	(clcd_print@data+1)^0,c
  2169   0026DC  0E80               	movlw	128
  2170   0026DE  6E05               	movwf	clcd_print@addr^0,c
  2171   0026E0  EC9D  F002         	call	_clcd_print	;wreg free
  2172   0026E4                     
  2173                           ;set_time.c: 34:     if (once == 1) {
  2174   0026E4  0100               	movlb	0	; () banked
  2175   0026E6  059D               	decf	_once& (0+255),w,b
  2176   0026E8  119E               	iorwf	(_once+1)& (0+255),w,b
  2177   0026EA  A4D8               	btfss	status,2,c
  2178   0026EC  EF7A  F013         	goto	u3871
  2179   0026F0  EF7C  F013         	goto	u3870
  2180   0026F4                     u3871:
  2181   0026F4  EFB0  F013         	goto	l4157
  2182   0026F8                     u3870:
  2183   0026F8                     
  2184                           ; BSR set to: 0
  2185                           ;set_time.c: 35:         hr = ((time[0] - 48)*10)+(time[1] - 48);
  2186   0026F8  5194               	movf	_time& (0+255),w,b
  2187   0026FA  0D0A               	mullw	10
  2188   0026FC  CFF3 F011          	movff	prodl,??_set_time
  2189   002700  CFF4 F012          	movff	prodh,??_set_time+1
  2190   002704  5195               	movf	(_time+1)& (0+255),w,b
  2191   002706  2611               	addwf	??_set_time^0,f,c
  2192   002708  0E00               	movlw	0
  2193   00270A  2212               	addwfc	(??_set_time+1)^0,f,c
  2194   00270C  0EF0               	movlw	240
  2195   00270E  2411               	addwf	??_set_time^0,w,c
  2196   002710  6E3E               	movwf	_hr^0,c
  2197   002712  0EFD               	movlw	253
  2198   002714  2012               	addwfc	(??_set_time+1)^0,w,c
  2199   002716  6E3F               	movwf	(_hr+1)^0,c
  2200                           
  2201                           ;set_time.c: 36:         mn = ((time[3] - 48)*10)+(time[4] - 48);
  2202   002718  5197               	movf	(_time+3)& (0+255),w,b
  2203   00271A  0D0A               	mullw	10
  2204   00271C  CFF3 F011          	movff	prodl,??_set_time
  2205   002720  CFF4 F012          	movff	prodh,??_set_time+1
  2206   002724  5198               	movf	(_time+4)& (0+255),w,b
  2207   002726  2611               	addwf	??_set_time^0,f,c
  2208   002728  0E00               	movlw	0
  2209   00272A  2212               	addwfc	(??_set_time+1)^0,f,c
  2210   00272C  0EF0               	movlw	240
  2211   00272E  2411               	addwf	??_set_time^0,w,c
  2212   002730  6E3C               	movwf	_mn^0,c
  2213   002732  0EFD               	movlw	253
  2214   002734  2012               	addwfc	(??_set_time+1)^0,w,c
  2215   002736  6E3D               	movwf	(_mn+1)^0,c
  2216                           
  2217                           ;set_time.c: 37:         sec = ((time[6] - 48)*10)+(time[7] - 48);
  2218   002738  519A               	movf	(_time+6)& (0+255),w,b
  2219   00273A  0D0A               	mullw	10
  2220   00273C  CFF3 F011          	movff	prodl,??_set_time
  2221   002740  CFF4 F012          	movff	prodh,??_set_time+1
  2222   002744  519B               	movf	(_time+7)& (0+255),w,b
  2223   002746  2611               	addwf	??_set_time^0,f,c
  2224   002748  0E00               	movlw	0
  2225   00274A  2212               	addwfc	(??_set_time+1)^0,f,c
  2226   00274C  0EF0               	movlw	240
  2227   00274E  2411               	addwf	??_set_time^0,w,c
  2228   002750  6E3A               	movwf	_sec^0,c
  2229   002752  0EFD               	movlw	253
  2230   002754  2012               	addwfc	(??_set_time+1)^0,w,c
  2231   002756  6E3B               	movwf	(_sec+1)^0,c
  2232   002758                     
  2233                           ; BSR set to: 0
  2234                           ;set_time.c: 38:         once = 0;
  2235   002758  0E00               	movlw	0
  2236   00275A  6F9E               	movwf	(_once+1)& (0+255),b
  2237   00275C  0E00               	movlw	0
  2238   00275E  6F9D               	movwf	_once& (0+255),b
  2239   002760                     l4157:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;set_time.c: 40:     key = read_switches(0);
  2243   002760  0E00               	movlw	0
  2244   002762  EC0D  F003         	call	_read_switches
  2245   002766  6E11               	movwf	??_set_time^0,c
  2246   002768  5011               	movf	??_set_time^0,w,c
  2247   00276A  6E5C               	movwf	_key^0,c
  2248   00276C  6A5D               	clrf	(_key+1)^0,c
  2249   00276E                     
  2250                           ;set_time.c: 41:     if (11 == key) {
  2251   00276E  0E0B               	movlw	11
  2252   002770  185C               	xorwf	_key^0,w,c
  2253   002772  105D               	iorwf	(_key+1)^0,w,c
  2254   002774  A4D8               	btfss	status,2,c
  2255   002776  EFBF  F013         	goto	u3881
  2256   00277A  EFC1  F013         	goto	u3880
  2257   00277E                     u3881:
  2258   00277E  EF3D  F014         	goto	l4191
  2259   002782                     u3880:
  2260   002782                     
  2261                           ;set_time.c: 42:         delay11++;
  2262   002782  0100               	movlb	0	; () banked
  2263   002784  4B76               	infsnz	_delay11& (0+255),f,b
  2264   002786  2B77               	incf	(_delay11+1)& (0+255),f,b
  2265   002788                     
  2266                           ; BSR set to: 0
  2267                           ;set_time.c: 43:         if (delay11 > 500) {
  2268   002788  BF77               	btfsc	(_delay11+1)& (0+255),7,b
  2269   00278A  EFD0  F013         	goto	u3891
  2270   00278E  0EF5               	movlw	245
  2271   002790  5D76               	subwf	_delay11& (0+255),w,b
  2272   002792  0E01               	movlw	1
  2273   002794  5977               	subwfb	(_delay11+1)& (0+255),w,b
  2274   002796  A0D8               	btfss	status,0,c
  2275   002798  EFD0  F013         	goto	u3891
  2276   00279C  EFD2  F013         	goto	u3890
  2277   0027A0                     u3891:
  2278   0027A0  EFBF  F014         	goto	l4221
  2279   0027A4                     u3890:
  2280   0027A4                     
  2281                           ; BSR set to: 0
  2282                           ;set_time.c: 44:             delay11 = 0;
  2283   0027A4  0E00               	movlw	0
  2284   0027A6  6F77               	movwf	(_delay11+1)& (0+255),b
  2285   0027A8  0E00               	movlw	0
  2286   0027AA  6F76               	movwf	_delay11& (0+255),b
  2287   0027AC                     
  2288                           ; BSR set to: 0
  2289                           ;set_time.c: 45:             clcd_write(0x01, 0);
  2290   0027AC  0E00               	movlw	0
  2291   0027AE  6E01               	movwf	clcd_write@control_bit^0,c
  2292   0027B0  0E01               	movlw	1
  2293   0027B2  EC65  F001         	call	_clcd_write
  2294   0027B6                     
  2295                           ;set_time.c: 46:             clcd_print("   SET TIME    ", (0x80 + (0)));
  2296   0027B6  0E49               	movlw	low STR_17
  2297   0027B8  6E03               	movwf	clcd_print@data^0,c
  2298   0027BA  0E2F               	movlw	high STR_17
  2299   0027BC  6E04               	movwf	(clcd_print@data+1)^0,c
  2300   0027BE  0E80               	movlw	128
  2301   0027C0  6E05               	movwf	clcd_print@addr^0,c
  2302   0027C2  EC9D  F002         	call	_clcd_print	;wreg free
  2303   0027C6                     
  2304                           ;set_time.c: 47:             clcd_print("SUCCSSFULL !!!", (0xC0 + (0)));
  2305   0027C6  0E89               	movlw	low STR_18
  2306   0027C8  6E03               	movwf	clcd_print@data^0,c
  2307   0027CA  0E2F               	movlw	high STR_18
  2308   0027CC  6E04               	movwf	(clcd_print@data+1)^0,c
  2309   0027CE  0EC0               	movlw	192
  2310   0027D0  6E05               	movwf	clcd_print@addr^0,c
  2311   0027D2  EC9D  F002         	call	_clcd_print	;wreg free
  2312   0027D6                     
  2313                           ;set_time.c: 48:             write_ds1307(0x02, clock_reg[0]);
  2314   0027D6  C037  F002         	movff	_clock_reg,write_ds1307@data
  2315   0027DA  0E02               	movlw	2
  2316   0027DC  ECF3  F000         	call	_write_ds1307
  2317   0027E0                     
  2318                           ;set_time.c: 49:             write_ds1307(0x01, clock_reg[1]);
  2319   0027E0  C038  F002         	movff	_clock_reg+1,write_ds1307@data
  2320   0027E4  0E01               	movlw	1
  2321   0027E6  ECF3  F000         	call	_write_ds1307
  2322   0027EA                     
  2323                           ;set_time.c: 50:             write_ds1307(0x00, clock_reg[2]);
  2324   0027EA  C039  F002         	movff	_clock_reg+2,write_ds1307@data
  2325   0027EE  0E00               	movlw	0
  2326   0027F0  ECF3  F000         	call	_write_ds1307
  2327                           
  2328                           ;set_time.c: 52:             for (unsigned long w = 500000; w--;);
  2329   0027F4  0E20               	movlw	32
  2330   0027F6  6E13               	movwf	set_time@w^0,c
  2331   0027F8  0EA1               	movlw	161
  2332   0027FA  6E14               	movwf	(set_time@w+1)^0,c
  2333   0027FC  0E07               	movlw	7
  2334   0027FE  6E15               	movwf	(set_time@w+2)^0,c
  2335   002800  0E00               	movlw	0
  2336   002802  6E16               	movwf	(set_time@w+3)^0,c
  2337   002804                     l4179:
  2338   002804  0613               	decf	set_time@w^0,f,c
  2339   002806  0E00               	movlw	0
  2340   002808  5A14               	subwfb	(set_time@w+1)^0,f,c
  2341   00280A  5A15               	subwfb	(set_time@w+2)^0,f,c
  2342   00280C  5A16               	subwfb	(set_time@w+3)^0,f,c
  2343   00280E  2813               	incf	set_time@w^0,w,c
  2344   002810  E10A               	bnz	u3901
  2345   002812  2814               	incf	(set_time@w+1)^0,w,c
  2346   002814  E108               	bnz	u3901
  2347   002816  2815               	incf	(set_time@w+2)^0,w,c
  2348   002818  E106               	bnz	u3901
  2349   00281A  2816               	incf	(set_time@w+3)^0,w,c
  2350   00281C  A4D8               	btfss	status,2,c
  2351   00281E  EF13  F014         	goto	u3901
  2352   002822  EF15  F014         	goto	u3900
  2353   002826                     u3901:
  2354   002826  EF02  F014         	goto	l4179
  2355   00282A                     u3900:
  2356   00282A                     
  2357                           ;set_time.c: 53:             for (unsigned long w = 500000; w--;);
  2358   00282A  0E20               	movlw	32
  2359   00282C  6E17               	movwf	set_time@w_481^0,c
  2360   00282E  0EA1               	movlw	161
  2361   002830  6E18               	movwf	(set_time@w_481+1)^0,c
  2362   002832  0E07               	movlw	7
  2363   002834  6E19               	movwf	(set_time@w_481+2)^0,c
  2364   002836  0E00               	movlw	0
  2365   002838  6E1A               	movwf	(set_time@w_481+3)^0,c
  2366   00283A                     l4183:
  2367   00283A  0617               	decf	set_time@w_481^0,f,c
  2368   00283C  0E00               	movlw	0
  2369   00283E  5A18               	subwfb	(set_time@w_481+1)^0,f,c
  2370   002840  5A19               	subwfb	(set_time@w_481+2)^0,f,c
  2371   002842  5A1A               	subwfb	(set_time@w_481+3)^0,f,c
  2372   002844  2817               	incf	set_time@w_481^0,w,c
  2373   002846  E10A               	bnz	u3911
  2374   002848  2818               	incf	(set_time@w_481+1)^0,w,c
  2375   00284A  E108               	bnz	u3911
  2376   00284C  2819               	incf	(set_time@w_481+2)^0,w,c
  2377   00284E  E106               	bnz	u3911
  2378   002850  281A               	incf	(set_time@w_481+3)^0,w,c
  2379   002852  A4D8               	btfss	status,2,c
  2380   002854  EF2E  F014         	goto	u3911
  2381   002858  EF30  F014         	goto	u3910
  2382   00285C                     u3911:
  2383   00285C  EF1D  F014         	goto	l4183
  2384   002860                     u3910:
  2385   002860                     
  2386                           ;set_time.c: 54:             clcd_write(0x01, 0);
  2387   002860  0E00               	movlw	0
  2388   002862  6E01               	movwf	clcd_write@control_bit^0,c
  2389   002864  0E01               	movlw	1
  2390   002866  EC65  F001         	call	_clcd_write
  2391   00286A                     
  2392                           ;set_time.c: 55:             shift = 2;
  2393   00286A  0E00               	movlw	0
  2394   00286C  6E5B               	movwf	(_shift+1)^0,c
  2395   00286E  0E02               	movlw	2
  2396   002870  6E5A               	movwf	_shift^0,c
  2397   002872  EF59  F017         	goto	l653
  2398   002876                     l646:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;set_time.c: 58:     } else if (delay11 > 0 && delay11 < 500) {
  2402   002876  EFBF  F014         	goto	l4221
  2403   00287A                     l4191:
  2404   00287A  0100               	movlb	0	; () banked
  2405   00287C  BF77               	btfsc	(_delay11+1)& (0+255),7,b
  2406   00287E  EF49  F014         	goto	u3921
  2407   002882  5177               	movf	(_delay11+1)& (0+255),w,b
  2408   002884  E108               	bnz	u3920
  2409   002886  0576               	decf	_delay11& (0+255),w,b
  2410   002888  A0D8               	btfss	status,0,c
  2411   00288A  EF49  F014         	goto	u3921
  2412   00288E  EF4B  F014         	goto	u3920
  2413   002892                     u3921:
  2414   002892  EFBF  F014         	goto	l4221
  2415   002896                     u3920:
  2416   002896                     
  2417                           ; BSR set to: 0
  2418   002896  BF77               	btfsc	(_delay11+1)& (0+255),7,b
  2419   002898  EF59  F014         	goto	u3930
  2420   00289C  0EF4               	movlw	244
  2421   00289E  5D76               	subwf	_delay11& (0+255),w,b
  2422   0028A0  0E01               	movlw	1
  2423   0028A2  5977               	subwfb	(_delay11+1)& (0+255),w,b
  2424   0028A4  B0D8               	btfsc	status,0,c
  2425   0028A6  EF57  F014         	goto	u3931
  2426   0028AA  EF59  F014         	goto	u3930
  2427   0028AE                     u3931:
  2428   0028AE  EFBF  F014         	goto	l4221
  2429   0028B2                     u3930:
  2430   0028B2                     
  2431                           ; BSR set to: 0
  2432                           ;set_time.c: 59:         delay11 = 0;
  2433   0028B2  0E00               	movlw	0
  2434   0028B4  6F77               	movwf	(_delay11+1)& (0+255),b
  2435   0028B6  0E00               	movlw	0
  2436   0028B8  6F76               	movwf	_delay11& (0+255),b
  2437   0028BA                     
  2438                           ; BSR set to: 0
  2439                           ;set_time.c: 60:         if (flag_t == 0) {
  2440   0028BA  5040               	movf	_flag_t^0,w,c
  2441   0028BC  1041               	iorwf	(_flag_t+1)^0,w,c
  2442   0028BE  A4D8               	btfss	status,2,c
  2443   0028C0  EF64  F014         	goto	u3941
  2444   0028C4  EF66  F014         	goto	u3940
  2445   0028C8                     u3941:
  2446   0028C8  EF7E  F014         	goto	l4205
  2447   0028CC                     u3940:
  2448   0028CC                     
  2449                           ; BSR set to: 0
  2450                           ;set_time.c: 61:             if (hr < 23)
  2451   0028CC  BE3F               	btfsc	(_hr+1)^0,7,c
  2452   0028CE  EF74  F014         	goto	u3950
  2453   0028D2  503F               	movf	(_hr+1)^0,w,c
  2454   0028D4  E107               	bnz	u3951
  2455   0028D6  0E17               	movlw	23
  2456   0028D8  5C3E               	subwf	_hr^0,w,c
  2457   0028DA  B0D8               	btfsc	status,0,c
  2458   0028DC  EF72  F014         	goto	u3951
  2459   0028E0  EF74  F014         	goto	u3950
  2460   0028E4                     u3951:
  2461   0028E4  EF78  F014         	goto	l4203
  2462   0028E8                     u3950:
  2463   0028E8                     
  2464                           ; BSR set to: 0
  2465                           ;set_time.c: 62:                 hr++;
  2466   0028E8  4A3E               	infsnz	_hr^0,f,c
  2467   0028EA  2A3F               	incf	(_hr+1)^0,f,c
  2468   0028EC  EFBF  F014         	goto	l4221
  2469   0028F0                     l4203:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;set_time.c: 64:                 hr = 0;
  2473   0028F0  0E00               	movlw	0
  2474   0028F2  6E3F               	movwf	(_hr+1)^0,c
  2475   0028F4  0E00               	movlw	0
  2476   0028F6  6E3E               	movwf	_hr^0,c
  2477   0028F8  EFBF  F014         	goto	l4221
  2478   0028FC                     l4205:
  2479                           
  2480                           ; BSR set to: 0
  2481   0028FC  0440               	decf	_flag_t^0,w,c
  2482   0028FE  1041               	iorwf	(_flag_t+1)^0,w,c
  2483   002900  A4D8               	btfss	status,2,c
  2484   002902  EF85  F014         	goto	u3961
  2485   002906  EF87  F014         	goto	u3960
  2486   00290A                     u3961:
  2487   00290A  EF9F  F014         	goto	l4213
  2488   00290E                     u3960:
  2489   00290E                     
  2490                           ; BSR set to: 0
  2491                           ;set_time.c: 66:             if (mn < 59)
  2492   00290E  BE3D               	btfsc	(_mn+1)^0,7,c
  2493   002910  EF95  F014         	goto	u3970
  2494   002914  503D               	movf	(_mn+1)^0,w,c
  2495   002916  E107               	bnz	u3971
  2496   002918  0E3B               	movlw	59
  2497   00291A  5C3C               	subwf	_mn^0,w,c
  2498   00291C  B0D8               	btfsc	status,0,c
  2499   00291E  EF93  F014         	goto	u3971
  2500   002922  EF95  F014         	goto	u3970
  2501   002926                     u3971:
  2502   002926  EF99  F014         	goto	l4211
  2503   00292A                     u3970:
  2504   00292A                     
  2505                           ; BSR set to: 0
  2506                           ;set_time.c: 67:                 mn++;
  2507   00292A  4A3C               	infsnz	_mn^0,f,c
  2508   00292C  2A3D               	incf	(_mn+1)^0,f,c
  2509   00292E  EFBF  F014         	goto	l4221
  2510   002932                     l4211:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;set_time.c: 69:                 mn = 0;
  2514   002932  0E00               	movlw	0
  2515   002934  6E3D               	movwf	(_mn+1)^0,c
  2516   002936  0E00               	movlw	0
  2517   002938  6E3C               	movwf	_mn^0,c
  2518   00293A  EFBF  F014         	goto	l4221
  2519   00293E                     l4213:
  2520                           
  2521                           ; BSR set to: 0
  2522   00293E  0E02               	movlw	2
  2523   002940  1840               	xorwf	_flag_t^0,w,c
  2524   002942  1041               	iorwf	(_flag_t+1)^0,w,c
  2525   002944  A4D8               	btfss	status,2,c
  2526   002946  EFA7  F014         	goto	u3981
  2527   00294A  EFA9  F014         	goto	u3980
  2528   00294E                     u3981:
  2529   00294E  EF3B  F014         	goto	l646
  2530   002952                     u3980:
  2531   002952                     
  2532                           ; BSR set to: 0
  2533                           ;set_time.c: 71:             if (sec < 59)
  2534   002952  BE3B               	btfsc	(_sec+1)^0,7,c
  2535   002954  EFB7  F014         	goto	u3990
  2536   002958  503B               	movf	(_sec+1)^0,w,c
  2537   00295A  E107               	bnz	u3991
  2538   00295C  0E3B               	movlw	59
  2539   00295E  5C3A               	subwf	_sec^0,w,c
  2540   002960  B0D8               	btfsc	status,0,c
  2541   002962  EFB5  F014         	goto	u3991
  2542   002966  EFB7  F014         	goto	u3990
  2543   00296A                     u3991:
  2544   00296A  EFBB  F014         	goto	l4219
  2545   00296E                     u3990:
  2546   00296E                     
  2547                           ; BSR set to: 0
  2548                           ;set_time.c: 72:                 sec++;
  2549   00296E  4A3A               	infsnz	_sec^0,f,c
  2550   002970  2A3B               	incf	(_sec+1)^0,f,c
  2551   002972  EFBF  F014         	goto	l4221
  2552   002976                     l4219:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;set_time.c: 74:                 sec = 0;
  2556   002976  0E00               	movlw	0
  2557   002978  6E3B               	movwf	(_sec+1)^0,c
  2558   00297A  0E00               	movlw	0
  2559   00297C  6E3A               	movwf	_sec^0,c
  2560   00297E                     l4221:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;set_time.c: 78:     if (12 == key) {
  2564   00297E  0E0C               	movlw	12
  2565   002980  185C               	xorwf	_key^0,w,c
  2566   002982  105D               	iorwf	(_key+1)^0,w,c
  2567   002984  A4D8               	btfss	status,2,c
  2568   002986  EFC7  F014         	goto	u4001
  2569   00298A  EFC9  F014         	goto	u4000
  2570   00298E                     u4001:
  2571   00298E  EFE8  F014         	goto	l4233
  2572   002992                     u4000:
  2573   002992                     
  2574                           ; BSR set to: 0
  2575                           ;set_time.c: 79:         delay12++;
  2576   002992  4B74               	infsnz	_delay12& (0+255),f,b
  2577   002994  2B75               	incf	(_delay12+1)& (0+255),f,b
  2578   002996                     
  2579                           ; BSR set to: 0
  2580                           ;set_time.c: 80:         if (delay12 > 500) {
  2581   002996  BF75               	btfsc	(_delay12+1)& (0+255),7,b
  2582   002998  EFD7  F014         	goto	u4011
  2583   00299C  0EF5               	movlw	245
  2584   00299E  5D74               	subwf	_delay12& (0+255),w,b
  2585   0029A0  0E01               	movlw	1
  2586   0029A2  5975               	subwfb	(_delay12+1)& (0+255),w,b
  2587   0029A4  A0D8               	btfss	status,0,c
  2588   0029A6  EFD7  F014         	goto	u4011
  2589   0029AA  EFD9  F014         	goto	u4010
  2590   0029AE                     u4011:
  2591   0029AE  EF1D  F015         	goto	l4245
  2592   0029B2                     u4010:
  2593   0029B2                     
  2594                           ; BSR set to: 0
  2595                           ;set_time.c: 81:             delay12 = 0;
  2596   0029B2  0E00               	movlw	0
  2597   0029B4  6F75               	movwf	(_delay12+1)& (0+255),b
  2598   0029B6  0E00               	movlw	0
  2599   0029B8  6F74               	movwf	_delay12& (0+255),b
  2600                           
  2601                           ;set_time.c: 82:             shift = 2;
  2602   0029BA  0E00               	movlw	0
  2603   0029BC  6E5B               	movwf	(_shift+1)^0,c
  2604   0029BE  0E02               	movlw	2
  2605   0029C0  6E5A               	movwf	_shift^0,c
  2606   0029C2                     
  2607                           ; BSR set to: 0
  2608                           ;set_time.c: 83:             clcd_write(0x01, 0);
  2609   0029C2  0E00               	movlw	0
  2610   0029C4  6E01               	movwf	clcd_write@control_bit^0,c
  2611   0029C6  0E01               	movlw	1
  2612   0029C8  EC65  F001         	call	_clcd_write
  2613   0029CC  EF59  F017         	goto	l653
  2614   0029D0                     l4233:
  2615                           
  2616                           ; BSR set to: 0
  2617   0029D0  BF75               	btfsc	(_delay12+1)& (0+255),7,b
  2618   0029D2  EFF3  F014         	goto	u4021
  2619   0029D6  5175               	movf	(_delay12+1)& (0+255),w,b
  2620   0029D8  E108               	bnz	u4020
  2621   0029DA  0574               	decf	_delay12& (0+255),w,b
  2622   0029DC  A0D8               	btfss	status,0,c
  2623   0029DE  EFF3  F014         	goto	u4021
  2624   0029E2  EFF5  F014         	goto	u4020
  2625   0029E6                     u4021:
  2626   0029E6  EF1D  F015         	goto	l4245
  2627   0029EA                     u4020:
  2628   0029EA                     
  2629                           ; BSR set to: 0
  2630   0029EA  BF75               	btfsc	(_delay12+1)& (0+255),7,b
  2631   0029EC  EF03  F015         	goto	u4030
  2632   0029F0  0EF4               	movlw	244
  2633   0029F2  5D74               	subwf	_delay12& (0+255),w,b
  2634   0029F4  0E01               	movlw	1
  2635   0029F6  5975               	subwfb	(_delay12+1)& (0+255),w,b
  2636   0029F8  B0D8               	btfsc	status,0,c
  2637   0029FA  EF01  F015         	goto	u4031
  2638   0029FE  EF03  F015         	goto	u4030
  2639   002A02                     u4031:
  2640   002A02  EF1D  F015         	goto	l4245
  2641   002A06                     u4030:
  2642   002A06                     
  2643                           ; BSR set to: 0
  2644                           ;set_time.c: 87:         delay12 = 0;
  2645   002A06  0E00               	movlw	0
  2646   002A08  6F75               	movwf	(_delay12+1)& (0+255),b
  2647   002A0A  0E00               	movlw	0
  2648   002A0C  6F74               	movwf	_delay12& (0+255),b
  2649   002A0E                     
  2650                           ; BSR set to: 0
  2651                           ;set_time.c: 88:         if (flag_t < 2)
  2652   002A0E  BE41               	btfsc	(_flag_t+1)^0,7,c
  2653   002A10  EF15  F015         	goto	u4040
  2654   002A14  5041               	movf	(_flag_t+1)^0,w,c
  2655   002A16  E107               	bnz	u4041
  2656   002A18  0E02               	movlw	2
  2657   002A1A  5C40               	subwf	_flag_t^0,w,c
  2658   002A1C  B0D8               	btfsc	status,0,c
  2659   002A1E  EF13  F015         	goto	u4041
  2660   002A22  EF15  F015         	goto	u4040
  2661   002A26                     u4041:
  2662   002A26  EF19  F015         	goto	l4243
  2663   002A2A                     u4040:
  2664   002A2A                     
  2665                           ; BSR set to: 0
  2666                           ;set_time.c: 89:             flag_t++;
  2667   002A2A  4A40               	infsnz	_flag_t^0,f,c
  2668   002A2C  2A41               	incf	(_flag_t+1)^0,f,c
  2669   002A2E  EF1D  F015         	goto	l4245
  2670   002A32                     l4243:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;set_time.c: 91:             flag_t = 0;
  2674   002A32  0E00               	movlw	0
  2675   002A34  6E41               	movwf	(_flag_t+1)^0,c
  2676   002A36  0E00               	movlw	0
  2677   002A38  6E40               	movwf	_flag_t^0,c
  2678   002A3A                     l4245:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;set_time.c: 93:     if (flag_t == 0) {
  2682   002A3A  5040               	movf	_flag_t^0,w,c
  2683   002A3C  1041               	iorwf	(_flag_t+1)^0,w,c
  2684   002A3E  A4D8               	btfss	status,2,c
  2685   002A40  EF24  F015         	goto	u4051
  2686   002A44  EF26  F015         	goto	u4050
  2687   002A48                     u4051:
  2688   002A48  EF99  F015         	goto	l4263
  2689   002A4C                     u4050:
  2690   002A4C                     
  2691                           ; BSR set to: 0
  2692                           ;set_time.c: 94:         if (wait++ < 5000) {
  2693   002A4C  504C               	movf	_wait^0,w,c
  2694   002A4E  6E11               	movwf	??_set_time^0,c
  2695   002A50  504D               	movf	(_wait+1)^0,w,c
  2696   002A52  6E12               	movwf	(??_set_time+1)^0,c
  2697   002A54  4A4C               	infsnz	_wait^0,f,c
  2698   002A56  2A4D               	incf	(_wait+1)^0,f,c
  2699   002A58  BE12               	btfsc	(??_set_time+1)^0,7,c
  2700   002A5A  EF3A  F015         	goto	u4060
  2701   002A5E  0E88               	movlw	136
  2702   002A60  5C11               	subwf	??_set_time^0,w,c
  2703   002A62  0E13               	movlw	19
  2704   002A64  5812               	subwfb	(??_set_time+1)^0,w,c
  2705   002A66  B0D8               	btfsc	status,0,c
  2706   002A68  EF38  F015         	goto	u4061
  2707   002A6C  EF3A  F015         	goto	u4060
  2708   002A70                     u4061:
  2709   002A70  EF57  F015         	goto	l4255
  2710   002A74                     u4060:
  2711   002A74                     
  2712                           ; BSR set to: 0
  2713                           ;set_time.c: 95:             clcd_putch(' ', (0xC0 + (4)));
  2714   002A74  0EC4               	movlw	196
  2715   002A76  6E0F               	movwf	clcd_putch@addr^0,c
  2716   002A78  0E20               	movlw	32
  2717   002A7A  ECE7  F000         	call	_clcd_putch
  2718                           
  2719                           ;set_time.c: 96:             clcd_putch(' ', (0xC0 + (5)));
  2720   002A7E  0EC5               	movlw	197
  2721   002A80  6E0F               	movwf	clcd_putch@addr^0,c
  2722   002A82  0E20               	movlw	32
  2723   002A84  ECE7  F000         	call	_clcd_putch
  2724   002A88                     
  2725                           ;set_time.c: 97:             for (unsigned int w = 1000; w--;);
  2726   002A88  0E03               	movlw	3
  2727   002A8A  6E1C               	movwf	(set_time@w_482+1)^0,c
  2728   002A8C  0EE8               	movlw	232
  2729   002A8E  6E1B               	movwf	set_time@w_482^0,c
  2730   002A90                     l4253:
  2731   002A90  061B               	decf	set_time@w_482^0,f,c
  2732   002A92  A0D8               	btfss	status,0,c
  2733   002A94  061C               	decf	(set_time@w_482+1)^0,f,c
  2734   002A96  281B               	incf	set_time@w_482^0,w,c
  2735   002A98  E106               	bnz	u4071
  2736   002A9A  281C               	incf	(set_time@w_482+1)^0,w,c
  2737   002A9C  A4D8               	btfss	status,2,c
  2738   002A9E  EF53  F015         	goto	u4071
  2739   002AA2  EF55  F015         	goto	u4070
  2740   002AA6                     u4071:
  2741   002AA6  EF48  F015         	goto	l4253
  2742   002AAA                     u4070:
  2743   002AAA  EF99  F015         	goto	l4263
  2744   002AAE                     l4255:
  2745                           
  2746                           ; BSR set to: 0
  2747   002AAE  BE4D               	btfsc	(_wait+1)^0,7,c
  2748   002AB0  EF63  F015         	goto	u4081
  2749   002AB4  0EF4               	movlw	244
  2750   002AB6  5C4C               	subwf	_wait^0,w,c
  2751   002AB8  0E01               	movlw	1
  2752   002ABA  584D               	subwfb	(_wait+1)^0,w,c
  2753   002ABC  A0D8               	btfss	status,0,c
  2754   002ABE  EF63  F015         	goto	u4081
  2755   002AC2  EF65  F015         	goto	u4080
  2756   002AC6                     u4081:
  2757   002AC6  EF95  F015         	goto	l4261
  2758   002ACA                     u4080:
  2759   002ACA                     
  2760                           ; BSR set to: 0
  2761   002ACA  BE4D               	btfsc	(_wait+1)^0,7,c
  2762   002ACC  EF73  F015         	goto	u4090
  2763   002AD0  0EE8               	movlw	232
  2764   002AD2  5C4C               	subwf	_wait^0,w,c
  2765   002AD4  0E03               	movlw	3
  2766   002AD6  584D               	subwfb	(_wait+1)^0,w,c
  2767   002AD8  B0D8               	btfsc	status,0,c
  2768   002ADA  EF71  F015         	goto	u4091
  2769   002ADE  EF73  F015         	goto	u4090
  2770   002AE2                     u4091:
  2771   002AE2  EF95  F015         	goto	l4261
  2772   002AE6                     u4090:
  2773   002AE6                     
  2774                           ; BSR set to: 0
  2775                           ;set_time.c: 99:             clcd_putch((hr / 10) + 48, (0xC0 + (4)));
  2776   002AE6  0EC4               	movlw	196
  2777   002AE8  6E0F               	movwf	clcd_putch@addr^0,c
  2778   002AEA  C03E  F001         	movff	_hr,___awdiv@dividend
  2779   002AEE  C03F  F002         	movff	_hr+1,___awdiv@dividend+1
  2780   002AF2  0E00               	movlw	0
  2781   002AF4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2782   002AF6  0E0A               	movlw	10
  2783   002AF8  6E03               	movwf	___awdiv@divisor^0,c
  2784   002AFA  ECBE  F004         	call	___awdiv	;wreg free
  2785   002AFE  5001               	movf	?___awdiv^0,w,c
  2786   002B00  0F30               	addlw	48
  2787   002B02  ECE7  F000         	call	_clcd_putch
  2788                           
  2789                           ;set_time.c: 100:             clcd_putch((hr % 10) + 48, (0xC0 + (5)));
  2790   002B06  0EC5               	movlw	197
  2791   002B08  6E0F               	movwf	clcd_putch@addr^0,c
  2792   002B0A  C03E  F009         	movff	_hr,___awmod@dividend
  2793   002B0E  C03F  F00A         	movff	_hr+1,___awmod@dividend+1
  2794   002B12  0E00               	movlw	0
  2795   002B14  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2796   002B16  0E0A               	movlw	10
  2797   002B18  6E0B               	movwf	___awmod@divisor^0,c
  2798   002B1A  EC66  F004         	call	___awmod	;wreg free
  2799   002B1E  5009               	movf	?___awmod^0,w,c
  2800   002B20  0F30               	addlw	48
  2801   002B22  ECE7  F000         	call	_clcd_putch
  2802                           
  2803                           ;set_time.c: 101:         } else
  2804   002B26  EF99  F015         	goto	l4263
  2805   002B2A                     l4261:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;set_time.c: 102:             wait = 0;
  2809   002B2A  0E00               	movlw	0
  2810   002B2C  6E4D               	movwf	(_wait+1)^0,c
  2811   002B2E  0E00               	movlw	0
  2812   002B30  6E4C               	movwf	_wait^0,c
  2813   002B32                     l4263:
  2814                           
  2815                           ;set_time.c: 105:     if (flag_t == 1) {
  2816   002B32  0440               	decf	_flag_t^0,w,c
  2817   002B34  1041               	iorwf	(_flag_t+1)^0,w,c
  2818   002B36  A4D8               	btfss	status,2,c
  2819   002B38  EFA0  F015         	goto	u4101
  2820   002B3C  EFA2  F015         	goto	u4100
  2821   002B40                     u4101:
  2822   002B40  EF15  F016         	goto	l4281
  2823   002B44                     u4100:
  2824   002B44                     
  2825                           ;set_time.c: 106:         if (wait++ < 500) {
  2826   002B44  504C               	movf	_wait^0,w,c
  2827   002B46  6E11               	movwf	??_set_time^0,c
  2828   002B48  504D               	movf	(_wait+1)^0,w,c
  2829   002B4A  6E12               	movwf	(??_set_time+1)^0,c
  2830   002B4C  4A4C               	infsnz	_wait^0,f,c
  2831   002B4E  2A4D               	incf	(_wait+1)^0,f,c
  2832   002B50  BE12               	btfsc	(??_set_time+1)^0,7,c
  2833   002B52  EFB6  F015         	goto	u4110
  2834   002B56  0EF4               	movlw	244
  2835   002B58  5C11               	subwf	??_set_time^0,w,c
  2836   002B5A  0E01               	movlw	1
  2837   002B5C  5812               	subwfb	(??_set_time+1)^0,w,c
  2838   002B5E  B0D8               	btfsc	status,0,c
  2839   002B60  EFB4  F015         	goto	u4111
  2840   002B64  EFB6  F015         	goto	u4110
  2841   002B68                     u4111:
  2842   002B68  EFD3  F015         	goto	l4273
  2843   002B6C                     u4110:
  2844   002B6C                     
  2845                           ;set_time.c: 107:             clcd_putch(' ', (0xC0 + (7)));
  2846   002B6C  0EC7               	movlw	199
  2847   002B6E  6E0F               	movwf	clcd_putch@addr^0,c
  2848   002B70  0E20               	movlw	32
  2849   002B72  ECE7  F000         	call	_clcd_putch
  2850                           
  2851                           ;set_time.c: 108:             clcd_putch(' ', (0xC0 + (8)));
  2852   002B76  0EC8               	movlw	200
  2853   002B78  6E0F               	movwf	clcd_putch@addr^0,c
  2854   002B7A  0E20               	movlw	32
  2855   002B7C  ECE7  F000         	call	_clcd_putch
  2856   002B80                     
  2857                           ;set_time.c: 109:             for (unsigned int w = 1000; w--;);
  2858   002B80  0E03               	movlw	3
  2859   002B82  6E1E               	movwf	(set_time@w_483+1)^0,c
  2860   002B84  0EE8               	movlw	232
  2861   002B86  6E1D               	movwf	set_time@w_483^0,c
  2862   002B88                     l4271:
  2863   002B88  061D               	decf	set_time@w_483^0,f,c
  2864   002B8A  A0D8               	btfss	status,0,c
  2865   002B8C  061E               	decf	(set_time@w_483+1)^0,f,c
  2866   002B8E  281D               	incf	set_time@w_483^0,w,c
  2867   002B90  E106               	bnz	u4121
  2868   002B92  281E               	incf	(set_time@w_483+1)^0,w,c
  2869   002B94  A4D8               	btfss	status,2,c
  2870   002B96  EFCF  F015         	goto	u4121
  2871   002B9A  EFD1  F015         	goto	u4120
  2872   002B9E                     u4121:
  2873   002B9E  EFC4  F015         	goto	l4271
  2874   002BA2                     u4120:
  2875   002BA2  EF15  F016         	goto	l4281
  2876   002BA6                     l4273:
  2877   002BA6  BE4D               	btfsc	(_wait+1)^0,7,c
  2878   002BA8  EFDF  F015         	goto	u4131
  2879   002BAC  0EF4               	movlw	244
  2880   002BAE  5C4C               	subwf	_wait^0,w,c
  2881   002BB0  0E01               	movlw	1
  2882   002BB2  584D               	subwfb	(_wait+1)^0,w,c
  2883   002BB4  A0D8               	btfss	status,0,c
  2884   002BB6  EFDF  F015         	goto	u4131
  2885   002BBA  EFE1  F015         	goto	u4130
  2886   002BBE                     u4131:
  2887   002BBE  EF11  F016         	goto	l4279
  2888   002BC2                     u4130:
  2889   002BC2  BE4D               	btfsc	(_wait+1)^0,7,c
  2890   002BC4  EFEF  F015         	goto	u4140
  2891   002BC8  0EE8               	movlw	232
  2892   002BCA  5C4C               	subwf	_wait^0,w,c
  2893   002BCC  0E03               	movlw	3
  2894   002BCE  584D               	subwfb	(_wait+1)^0,w,c
  2895   002BD0  B0D8               	btfsc	status,0,c
  2896   002BD2  EFED  F015         	goto	u4141
  2897   002BD6  EFEF  F015         	goto	u4140
  2898   002BDA                     u4141:
  2899   002BDA  EF11  F016         	goto	l4279
  2900   002BDE                     u4140:
  2901   002BDE                     
  2902                           ;set_time.c: 111:             clcd_putch((mn / 10) + 48, (0xC0 + (7)));
  2903   002BDE  0EC7               	movlw	199
  2904   002BE0  6E0F               	movwf	clcd_putch@addr^0,c
  2905   002BE2  C03C  F001         	movff	_mn,___awdiv@dividend
  2906   002BE6  C03D  F002         	movff	_mn+1,___awdiv@dividend+1
  2907   002BEA  0E00               	movlw	0
  2908   002BEC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2909   002BEE  0E0A               	movlw	10
  2910   002BF0  6E03               	movwf	___awdiv@divisor^0,c
  2911   002BF2  ECBE  F004         	call	___awdiv	;wreg free
  2912   002BF6  5001               	movf	?___awdiv^0,w,c
  2913   002BF8  0F30               	addlw	48
  2914   002BFA  ECE7  F000         	call	_clcd_putch
  2915                           
  2916                           ;set_time.c: 112:             clcd_putch((mn % 10) + 48, (0xC0 + (8)));
  2917   002BFE  0EC8               	movlw	200
  2918   002C00  6E0F               	movwf	clcd_putch@addr^0,c
  2919   002C02  C03C  F009         	movff	_mn,___awmod@dividend
  2920   002C06  C03D  F00A         	movff	_mn+1,___awmod@dividend+1
  2921   002C0A  0E00               	movlw	0
  2922   002C0C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2923   002C0E  0E0A               	movlw	10
  2924   002C10  6E0B               	movwf	___awmod@divisor^0,c
  2925   002C12  EC66  F004         	call	___awmod	;wreg free
  2926   002C16  5009               	movf	?___awmod^0,w,c
  2927   002C18  0F30               	addlw	48
  2928   002C1A  ECE7  F000         	call	_clcd_putch
  2929                           
  2930                           ;set_time.c: 113:         } else
  2931   002C1E  EF15  F016         	goto	l4281
  2932   002C22                     l4279:
  2933                           
  2934                           ;set_time.c: 114:             wait = 0;
  2935   002C22  0E00               	movlw	0
  2936   002C24  6E4D               	movwf	(_wait+1)^0,c
  2937   002C26  0E00               	movlw	0
  2938   002C28  6E4C               	movwf	_wait^0,c
  2939   002C2A                     l4281:
  2940                           
  2941                           ;set_time.c: 116:     if (flag_t == 2) {
  2942   002C2A  0E02               	movlw	2
  2943   002C2C  1840               	xorwf	_flag_t^0,w,c
  2944   002C2E  1041               	iorwf	(_flag_t+1)^0,w,c
  2945   002C30  A4D8               	btfss	status,2,c
  2946   002C32  EF1D  F016         	goto	u4151
  2947   002C36  EF1F  F016         	goto	u4150
  2948   002C3A                     u4151:
  2949   002C3A  EF92  F016         	goto	l4299
  2950   002C3E                     u4150:
  2951   002C3E                     
  2952                           ;set_time.c: 117:         if (wait++ < 500) {
  2953   002C3E  504C               	movf	_wait^0,w,c
  2954   002C40  6E11               	movwf	??_set_time^0,c
  2955   002C42  504D               	movf	(_wait+1)^0,w,c
  2956   002C44  6E12               	movwf	(??_set_time+1)^0,c
  2957   002C46  4A4C               	infsnz	_wait^0,f,c
  2958   002C48  2A4D               	incf	(_wait+1)^0,f,c
  2959   002C4A  BE12               	btfsc	(??_set_time+1)^0,7,c
  2960   002C4C  EF33  F016         	goto	u4160
  2961   002C50  0EF4               	movlw	244
  2962   002C52  5C11               	subwf	??_set_time^0,w,c
  2963   002C54  0E01               	movlw	1
  2964   002C56  5812               	subwfb	(??_set_time+1)^0,w,c
  2965   002C58  B0D8               	btfsc	status,0,c
  2966   002C5A  EF31  F016         	goto	u4161
  2967   002C5E  EF33  F016         	goto	u4160
  2968   002C62                     u4161:
  2969   002C62  EF50  F016         	goto	l4291
  2970   002C66                     u4160:
  2971   002C66                     
  2972                           ;set_time.c: 118:             clcd_putch(' ', (0xC0 + (10)));
  2973   002C66  0ECA               	movlw	202
  2974   002C68  6E0F               	movwf	clcd_putch@addr^0,c
  2975   002C6A  0E20               	movlw	32
  2976   002C6C  ECE7  F000         	call	_clcd_putch
  2977                           
  2978                           ;set_time.c: 119:             clcd_putch(' ', (0xC0 + (11)));
  2979   002C70  0ECB               	movlw	203
  2980   002C72  6E0F               	movwf	clcd_putch@addr^0,c
  2981   002C74  0E20               	movlw	32
  2982   002C76  ECE7  F000         	call	_clcd_putch
  2983   002C7A                     
  2984                           ;set_time.c: 120:             for (unsigned int w = 1000; w--;);
  2985   002C7A  0E03               	movlw	3
  2986   002C7C  6E20               	movwf	(set_time@w_484+1)^0,c
  2987   002C7E  0EE8               	movlw	232
  2988   002C80  6E1F               	movwf	set_time@w_484^0,c
  2989   002C82                     l4289:
  2990   002C82  061F               	decf	set_time@w_484^0,f,c
  2991   002C84  A0D8               	btfss	status,0,c
  2992   002C86  0620               	decf	(set_time@w_484+1)^0,f,c
  2993   002C88  281F               	incf	set_time@w_484^0,w,c
  2994   002C8A  E106               	bnz	u4171
  2995   002C8C  2820               	incf	(set_time@w_484+1)^0,w,c
  2996   002C8E  A4D8               	btfss	status,2,c
  2997   002C90  EF4C  F016         	goto	u4171
  2998   002C94  EF4E  F016         	goto	u4170
  2999   002C98                     u4171:
  3000   002C98  EF41  F016         	goto	l4289
  3001   002C9C                     u4170:
  3002   002C9C  EF92  F016         	goto	l4299
  3003   002CA0                     l4291:
  3004   002CA0  BE4D               	btfsc	(_wait+1)^0,7,c
  3005   002CA2  EF5C  F016         	goto	u4181
  3006   002CA6  0EF4               	movlw	244
  3007   002CA8  5C4C               	subwf	_wait^0,w,c
  3008   002CAA  0E01               	movlw	1
  3009   002CAC  584D               	subwfb	(_wait+1)^0,w,c
  3010   002CAE  A0D8               	btfss	status,0,c
  3011   002CB0  EF5C  F016         	goto	u4181
  3012   002CB4  EF5E  F016         	goto	u4180
  3013   002CB8                     u4181:
  3014   002CB8  EF8E  F016         	goto	l4297
  3015   002CBC                     u4180:
  3016   002CBC  BE4D               	btfsc	(_wait+1)^0,7,c
  3017   002CBE  EF6C  F016         	goto	u4190
  3018   002CC2  0EE8               	movlw	232
  3019   002CC4  5C4C               	subwf	_wait^0,w,c
  3020   002CC6  0E03               	movlw	3
  3021   002CC8  584D               	subwfb	(_wait+1)^0,w,c
  3022   002CCA  B0D8               	btfsc	status,0,c
  3023   002CCC  EF6A  F016         	goto	u4191
  3024   002CD0  EF6C  F016         	goto	u4190
  3025   002CD4                     u4191:
  3026   002CD4  EF8E  F016         	goto	l4297
  3027   002CD8                     u4190:
  3028   002CD8                     
  3029                           ;set_time.c: 122:             clcd_putch((sec / 10) + 48, (0xC0 + (10)));
  3030   002CD8  0ECA               	movlw	202
  3031   002CDA  6E0F               	movwf	clcd_putch@addr^0,c
  3032   002CDC  C03A  F001         	movff	_sec,___awdiv@dividend
  3033   002CE0  C03B  F002         	movff	_sec+1,___awdiv@dividend+1
  3034   002CE4  0E00               	movlw	0
  3035   002CE6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3036   002CE8  0E0A               	movlw	10
  3037   002CEA  6E03               	movwf	___awdiv@divisor^0,c
  3038   002CEC  ECBE  F004         	call	___awdiv	;wreg free
  3039   002CF0  5001               	movf	?___awdiv^0,w,c
  3040   002CF2  0F30               	addlw	48
  3041   002CF4  ECE7  F000         	call	_clcd_putch
  3042                           
  3043                           ;set_time.c: 123:             clcd_putch((sec % 10) + 48, (0xC0 + (11)));
  3044   002CF8  0ECB               	movlw	203
  3045   002CFA  6E0F               	movwf	clcd_putch@addr^0,c
  3046   002CFC  C03A  F009         	movff	_sec,___awmod@dividend
  3047   002D00  C03B  F00A         	movff	_sec+1,___awmod@dividend+1
  3048   002D04  0E00               	movlw	0
  3049   002D06  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3050   002D08  0E0A               	movlw	10
  3051   002D0A  6E0B               	movwf	___awmod@divisor^0,c
  3052   002D0C  EC66  F004         	call	___awmod	;wreg free
  3053   002D10  5009               	movf	?___awmod^0,w,c
  3054   002D12  0F30               	addlw	48
  3055   002D14  ECE7  F000         	call	_clcd_putch
  3056                           
  3057                           ;set_time.c: 124:         } else
  3058   002D18  EF92  F016         	goto	l4299
  3059   002D1C                     l4297:
  3060                           
  3061                           ;set_time.c: 125:             wait = 0;
  3062   002D1C  0E00               	movlw	0
  3063   002D1E  6E4D               	movwf	(_wait+1)^0,c
  3064   002D20  0E00               	movlw	0
  3065   002D22  6E4C               	movwf	_wait^0,c
  3066   002D24                     l4299:
  3067                           
  3068                           ;set_time.c: 128:     if (key == 0xFF) {
  3069   002D24  285C               	incf	_key^0,w,c
  3070   002D26  105D               	iorwf	(_key+1)^0,w,c
  3071   002D28  A4D8               	btfss	status,2,c
  3072   002D2A  EF99  F016         	goto	u4201
  3073   002D2E  EF9B  F016         	goto	u4200
  3074   002D32                     u4201:
  3075   002D32  EF59  F017         	goto	l653
  3076   002D36                     u4200:
  3077   002D36                     
  3078                           ;set_time.c: 129:         clcd_putch((hr / 10) + 48, (0xC0 + (4)));
  3079   002D36  0EC4               	movlw	196
  3080   002D38  6E0F               	movwf	clcd_putch@addr^0,c
  3081   002D3A  C03E  F001         	movff	_hr,___awdiv@dividend
  3082   002D3E  C03F  F002         	movff	_hr+1,___awdiv@dividend+1
  3083   002D42  0E00               	movlw	0
  3084   002D44  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3085   002D46  0E0A               	movlw	10
  3086   002D48  6E03               	movwf	___awdiv@divisor^0,c
  3087   002D4A  ECBE  F004         	call	___awdiv	;wreg free
  3088   002D4E  5001               	movf	?___awdiv^0,w,c
  3089   002D50  0F30               	addlw	48
  3090   002D52  ECE7  F000         	call	_clcd_putch
  3091                           
  3092                           ;set_time.c: 130:         clcd_putch((hr % 10) + 48, (0xC0 + (5)));
  3093   002D56  0EC5               	movlw	197
  3094   002D58  6E0F               	movwf	clcd_putch@addr^0,c
  3095   002D5A  C03E  F009         	movff	_hr,___awmod@dividend
  3096   002D5E  C03F  F00A         	movff	_hr+1,___awmod@dividend+1
  3097   002D62  0E00               	movlw	0
  3098   002D64  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3099   002D66  0E0A               	movlw	10
  3100   002D68  6E0B               	movwf	___awmod@divisor^0,c
  3101   002D6A  EC66  F004         	call	___awmod	;wreg free
  3102   002D6E  5009               	movf	?___awmod^0,w,c
  3103   002D70  0F30               	addlw	48
  3104   002D72  ECE7  F000         	call	_clcd_putch
  3105                           
  3106                           ;set_time.c: 132:         clcd_putch((mn / 10) + 48, (0xC0 + (7)));
  3107   002D76  0EC7               	movlw	199
  3108   002D78  6E0F               	movwf	clcd_putch@addr^0,c
  3109   002D7A  C03C  F001         	movff	_mn,___awdiv@dividend
  3110   002D7E  C03D  F002         	movff	_mn+1,___awdiv@dividend+1
  3111   002D82  0E00               	movlw	0
  3112   002D84  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3113   002D86  0E0A               	movlw	10
  3114   002D88  6E03               	movwf	___awdiv@divisor^0,c
  3115   002D8A  ECBE  F004         	call	___awdiv	;wreg free
  3116   002D8E  5001               	movf	?___awdiv^0,w,c
  3117   002D90  0F30               	addlw	48
  3118   002D92  ECE7  F000         	call	_clcd_putch
  3119                           
  3120                           ;set_time.c: 133:         clcd_putch((mn % 10) + 48, (0xC0 + (8)));
  3121   002D96  0EC8               	movlw	200
  3122   002D98  6E0F               	movwf	clcd_putch@addr^0,c
  3123   002D9A  C03C  F009         	movff	_mn,___awmod@dividend
  3124   002D9E  C03D  F00A         	movff	_mn+1,___awmod@dividend+1
  3125   002DA2  0E00               	movlw	0
  3126   002DA4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3127   002DA6  0E0A               	movlw	10
  3128   002DA8  6E0B               	movwf	___awmod@divisor^0,c
  3129   002DAA  EC66  F004         	call	___awmod	;wreg free
  3130   002DAE  5009               	movf	?___awmod^0,w,c
  3131   002DB0  0F30               	addlw	48
  3132   002DB2  ECE7  F000         	call	_clcd_putch
  3133                           
  3134                           ;set_time.c: 135:         clcd_putch((sec / 10) + 48, (0xC0 + (10)));
  3135   002DB6  0ECA               	movlw	202
  3136   002DB8  6E0F               	movwf	clcd_putch@addr^0,c
  3137   002DBA  C03A  F001         	movff	_sec,___awdiv@dividend
  3138   002DBE  C03B  F002         	movff	_sec+1,___awdiv@dividend+1
  3139   002DC2  0E00               	movlw	0
  3140   002DC4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3141   002DC6  0E0A               	movlw	10
  3142   002DC8  6E03               	movwf	___awdiv@divisor^0,c
  3143   002DCA  ECBE  F004         	call	___awdiv	;wreg free
  3144   002DCE  5001               	movf	?___awdiv^0,w,c
  3145   002DD0  0F30               	addlw	48
  3146   002DD2  ECE7  F000         	call	_clcd_putch
  3147                           
  3148                           ;set_time.c: 136:         clcd_putch((sec % 10) + 48, (0xC0 + (11)));
  3149   002DD6  0ECB               	movlw	203
  3150   002DD8  6E0F               	movwf	clcd_putch@addr^0,c
  3151   002DDA  C03A  F009         	movff	_sec,___awmod@dividend
  3152   002DDE  C03B  F00A         	movff	_sec+1,___awmod@dividend+1
  3153   002DE2  0E00               	movlw	0
  3154   002DE4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3155   002DE6  0E0A               	movlw	10
  3156   002DE8  6E0B               	movwf	___awmod@divisor^0,c
  3157   002DEA  EC66  F004         	call	___awmod	;wreg free
  3158   002DEE  5009               	movf	?___awmod^0,w,c
  3159   002DF0  0F30               	addlw	48
  3160   002DF2  ECE7  F000         	call	_clcd_putch
  3161   002DF6                     
  3162                           ;set_time.c: 138:         clcd_putch(':', (0xC0 + (6)));
  3163   002DF6  0EC6               	movlw	198
  3164   002DF8  6E0F               	movwf	clcd_putch@addr^0,c
  3165   002DFA  0E3A               	movlw	58
  3166   002DFC  ECE7  F000         	call	_clcd_putch
  3167   002E00                     
  3168                           ;set_time.c: 139:         clcd_putch(':', (0xC0 + (9)));
  3169   002E00  0EC9               	movlw	201
  3170   002E02  6E0F               	movwf	clcd_putch@addr^0,c
  3171   002E04  0E3A               	movlw	58
  3172   002E06  ECE7  F000         	call	_clcd_putch
  3173                           
  3174                           ;set_time.c: 141:         clock_reg[0] = ((hr / 10) << 4 | ((hr % 10)));
  3175   002E0A  C03E  F009         	movff	_hr,___awmod@dividend
  3176   002E0E  C03F  F00A         	movff	_hr+1,___awmod@dividend+1
  3177   002E12  0E00               	movlw	0
  3178   002E14  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3179   002E16  0E0A               	movlw	10
  3180   002E18  6E0B               	movwf	___awmod@divisor^0,c
  3181   002E1A  EC66  F004         	call	___awmod	;wreg free
  3182   002E1E  C009  F011         	movff	?___awmod,??_set_time
  3183   002E22  C00A  F012         	movff	?___awmod+1,??_set_time+1
  3184   002E26  C03E  F001         	movff	_hr,___awdiv@dividend
  3185   002E2A  C03F  F002         	movff	_hr+1,___awdiv@dividend+1
  3186   002E2E  0E00               	movlw	0
  3187   002E30  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3188   002E32  0E0A               	movlw	10
  3189   002E34  6E03               	movwf	___awdiv@divisor^0,c
  3190   002E36  ECBE  F004         	call	___awdiv	;wreg free
  3191   002E3A  3801               	swapf	?___awdiv^0,w,c
  3192   002E3C  0BF0               	andlw	240
  3193   002E3E  1011               	iorwf	??_set_time^0,w,c
  3194   002E40  6E37               	movwf	_clock_reg^0,c
  3195                           
  3196                           ;set_time.c: 142:         clock_reg[1] = ((mn / 10) << 4 | ((mn % 10)));
  3197   002E42  C03C  F009         	movff	_mn,___awmod@dividend
  3198   002E46  C03D  F00A         	movff	_mn+1,___awmod@dividend+1
  3199   002E4A  0E00               	movlw	0
  3200   002E4C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3201   002E4E  0E0A               	movlw	10
  3202   002E50  6E0B               	movwf	___awmod@divisor^0,c
  3203   002E52  EC66  F004         	call	___awmod	;wreg free
  3204   002E56  C009  F011         	movff	?___awmod,??_set_time
  3205   002E5A  C00A  F012         	movff	?___awmod+1,??_set_time+1
  3206   002E5E  C03C  F001         	movff	_mn,___awdiv@dividend
  3207   002E62  C03D  F002         	movff	_mn+1,___awdiv@dividend+1
  3208   002E66  0E00               	movlw	0
  3209   002E68  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3210   002E6A  0E0A               	movlw	10
  3211   002E6C  6E03               	movwf	___awdiv@divisor^0,c
  3212   002E6E  ECBE  F004         	call	___awdiv	;wreg free
  3213   002E72  3801               	swapf	?___awdiv^0,w,c
  3214   002E74  0BF0               	andlw	240
  3215   002E76  1011               	iorwf	??_set_time^0,w,c
  3216   002E78  6E38               	movwf	(_clock_reg+1)^0,c
  3217                           
  3218                           ;set_time.c: 143:         clock_reg[2] = ((sec / 10) << 4 | ((sec % 10)));
  3219   002E7A  C03A  F009         	movff	_sec,___awmod@dividend
  3220   002E7E  C03B  F00A         	movff	_sec+1,___awmod@dividend+1
  3221   002E82  0E00               	movlw	0
  3222   002E84  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3223   002E86  0E0A               	movlw	10
  3224   002E88  6E0B               	movwf	___awmod@divisor^0,c
  3225   002E8A  EC66  F004         	call	___awmod	;wreg free
  3226   002E8E  C009  F011         	movff	?___awmod,??_set_time
  3227   002E92  C00A  F012         	movff	?___awmod+1,??_set_time+1
  3228   002E96  C03A  F001         	movff	_sec,___awdiv@dividend
  3229   002E9A  C03B  F002         	movff	_sec+1,___awdiv@dividend+1
  3230   002E9E  0E00               	movlw	0
  3231   002EA0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3232   002EA2  0E0A               	movlw	10
  3233   002EA4  6E03               	movwf	___awdiv@divisor^0,c
  3234   002EA6  ECBE  F004         	call	___awdiv	;wreg free
  3235   002EAA  3801               	swapf	?___awdiv^0,w,c
  3236   002EAC  0BF0               	andlw	240
  3237   002EAE  1011               	iorwf	??_set_time^0,w,c
  3238   002EB0  6E39               	movwf	(_clock_reg+2)^0,c
  3239   002EB2                     l653:
  3240   002EB2  0012               	return		;funcret
  3241   002EB4                     __end_of_set_time:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function _menu_car *****************
  3245 ;; Defined at:
  3246 ;;		line 21 in file "menu.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3260 ;;      Params:         0       0       0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0
  3262 ;;      Temps:          2       0       0       0       0       0       0
  3263 ;;      Totals:         2       0       0       0       0       0       0
  3264 ;;Total ram usage:        2 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 2
  3267 ;; This function calls:
  3268 ;;		_clcd_print
  3269 ;;		_clcd_putch
  3270 ;;		_clcd_write
  3271 ;;		_read_switches
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text3
  3278   0012FC                     __ptext3:
  3279                           	callstack 0
  3280   0012FC                     _menu_car:
  3281                           	callstack 28
  3282   0012FC                     
  3283                           ;menu.c: 23:     if (star_flag == 0) {
  3284   0012FC  0100               	movlb	0	; () banked
  3285   0012FE  5186               	movf	_star_flag& (0+255),w,b
  3286   001300  1187               	iorwf	(_star_flag+1)& (0+255),w,b
  3287   001302  A4D8               	btfss	status,2,c
  3288   001304  EF86  F009         	goto	u3341
  3289   001308  EF88  F009         	goto	u3340
  3290   00130C                     u3341:
  3291   00130C  EFC2  F009         	goto	l3861
  3292   001310                     u3340:
  3293   001310                     
  3294                           ; BSR set to: 0
  3295                           ;menu.c: 24:         clcd_putch('*', (0x80 + (0)));
  3296   001310  0E80               	movlw	128
  3297   001312  6E0F               	movwf	clcd_putch@addr^0,c
  3298   001314  0E2A               	movlw	42
  3299   001316  ECE7  F000         	call	_clcd_putch
  3300                           
  3301                           ;menu.c: 25:         clcd_putch(' ', (0xC0 + (0)));
  3302   00131A  0EC0               	movlw	192
  3303   00131C  6E0F               	movwf	clcd_putch@addr^0,c
  3304   00131E  0E20               	movlw	32
  3305   001320  ECE7  F000         	call	_clcd_putch
  3306   001324                     l3857:
  3307                           
  3308                           ;menu.c: 26:         clcd_print(menu[menu_index], (0x80 + (2)));
  3309   001324  C04A  F011         	movff	_menu_index,??_menu_car
  3310   001328  C04B  F012         	movff	_menu_index+1,??_menu_car+1
  3311   00132C  3A11               	swapf	??_menu_car^0,f,c
  3312   00132E  3A12               	swapf	(??_menu_car+1)^0,f,c
  3313   001330  0EF0               	movlw	240
  3314   001332  1612               	andwf	(??_menu_car+1)^0,f,c
  3315   001334  5011               	movf	??_menu_car^0,w,c
  3316   001336  0B0F               	andlw	15
  3317   001338  1212               	iorwf	(??_menu_car+1)^0,f,c
  3318   00133A  0EF0               	movlw	240
  3319   00133C  1611               	andwf	??_menu_car^0,f,c
  3320   00133E  0EA0               	movlw	low _menu
  3321   001340  2411               	addwf	??_menu_car^0,w,c
  3322   001342  6E03               	movwf	clcd_print@data^0,c
  3323   001344  0E01               	movlw	high _menu
  3324   001346  2012               	addwfc	(??_menu_car+1)^0,w,c
  3325   001348  6E04               	movwf	(clcd_print@data+1)^0,c
  3326   00134A  0E82               	movlw	130
  3327   00134C  6E05               	movwf	clcd_print@addr^0,c
  3328   00134E  EC9D  F002         	call	_clcd_print	;wreg free
  3329   001352                     
  3330                           ;menu.c: 27:         clcd_print(menu[menu_index + 1], (0xC0 + (2)));
  3331   001352  C04A  F011         	movff	_menu_index,??_menu_car
  3332   001356  C04B  F012         	movff	_menu_index+1,??_menu_car+1
  3333   00135A  3A11               	swapf	??_menu_car^0,f,c
  3334   00135C  3A12               	swapf	(??_menu_car+1)^0,f,c
  3335   00135E  0EF0               	movlw	240
  3336   001360  1612               	andwf	(??_menu_car+1)^0,f,c
  3337   001362  5011               	movf	??_menu_car^0,w,c
  3338   001364  0B0F               	andlw	15
  3339   001366  1212               	iorwf	(??_menu_car+1)^0,f,c
  3340   001368  0EF0               	movlw	240
  3341   00136A  1611               	andwf	??_menu_car^0,f,c
  3342   00136C  0EB0               	movlw	low (_menu+16)
  3343   00136E  2411               	addwf	??_menu_car^0,w,c
  3344   001370  6E03               	movwf	clcd_print@data^0,c
  3345   001372  0E01               	movlw	high (_menu+16)
  3346   001374  2012               	addwfc	(??_menu_car+1)^0,w,c
  3347   001376  6E04               	movwf	(clcd_print@data+1)^0,c
  3348   001378  0EC2               	movlw	194
  3349   00137A  6E05               	movwf	clcd_print@addr^0,c
  3350   00137C  EC9D  F002         	call	_clcd_print	;wreg free
  3351                           
  3352                           ;menu.c: 28:     }
  3353   001380  EFD7  F009         	goto	l3869
  3354   001384                     l3861:
  3355                           
  3356                           ; BSR set to: 0
  3357   001384  0586               	decf	_star_flag& (0+255),w,b
  3358   001386  1187               	iorwf	(_star_flag+1)& (0+255),w,b
  3359   001388  A4D8               	btfss	status,2,c
  3360   00138A  EFC9  F009         	goto	u3351
  3361   00138E  EFCB  F009         	goto	u3350
  3362   001392                     u3351:
  3363   001392  EFD7  F009         	goto	l3869
  3364   001396                     u3350:
  3365   001396                     
  3366                           ; BSR set to: 0
  3367                           ;menu.c: 30:         clcd_putch(' ', (0x80 + (0)));
  3368   001396  0E80               	movlw	128
  3369   001398  6E0F               	movwf	clcd_putch@addr^0,c
  3370   00139A  0E20               	movlw	32
  3371   00139C  ECE7  F000         	call	_clcd_putch
  3372                           
  3373                           ;menu.c: 31:         clcd_putch('*', (0xC0 + (0)));
  3374   0013A0  0EC0               	movlw	192
  3375   0013A2  6E0F               	movwf	clcd_putch@addr^0,c
  3376   0013A4  0E2A               	movlw	42
  3377   0013A6  ECE7  F000         	call	_clcd_putch
  3378   0013AA  EF92  F009         	goto	l3857
  3379   0013AE                     l3869:
  3380                           
  3381                           ;menu.c: 35:     key = read_switches(0);
  3382   0013AE  0E00               	movlw	0
  3383   0013B0  EC0D  F003         	call	_read_switches
  3384   0013B4  6E11               	movwf	??_menu_car^0,c
  3385   0013B6  5011               	movf	??_menu_car^0,w,c
  3386   0013B8  6E5C               	movwf	_key^0,c
  3387   0013BA  6A5D               	clrf	(_key+1)^0,c
  3388   0013BC                     
  3389                           ;menu.c: 36:     if (12 == key) {
  3390   0013BC  0E0C               	movlw	12
  3391   0013BE  185C               	xorwf	_key^0,w,c
  3392   0013C0  105D               	iorwf	(_key+1)^0,w,c
  3393   0013C2  A4D8               	btfss	status,2,c
  3394   0013C4  EFE6  F009         	goto	u3361
  3395   0013C8  EFE8  F009         	goto	u3360
  3396   0013CC                     u3361:
  3397   0013CC  EF07  F00A         	goto	l3881
  3398   0013D0                     u3360:
  3399   0013D0                     
  3400                           ;menu.c: 37:         wait++;
  3401   0013D0  4A4C               	infsnz	_wait^0,f,c
  3402   0013D2  2A4D               	incf	(_wait+1)^0,f,c
  3403   0013D4                     
  3404                           ;menu.c: 38:         if (wait > 500) {
  3405   0013D4  BE4D               	btfsc	(_wait+1)^0,7,c
  3406   0013D6  EFF6  F009         	goto	u3371
  3407   0013DA  0EF5               	movlw	245
  3408   0013DC  5C4C               	subwf	_wait^0,w,c
  3409   0013DE  0E01               	movlw	1
  3410   0013E0  584D               	subwfb	(_wait+1)^0,w,c
  3411   0013E2  A0D8               	btfss	status,0,c
  3412   0013E4  EFF6  F009         	goto	u3371
  3413   0013E8  EFF8  F009         	goto	u3370
  3414   0013EC                     u3371:
  3415   0013EC  EF5D  F00A         	goto	l3901
  3416   0013F0                     u3370:
  3417   0013F0                     
  3418                           ;menu.c: 39:             wait = 0;
  3419   0013F0  0E00               	movlw	0
  3420   0013F2  6E4D               	movwf	(_wait+1)^0,c
  3421   0013F4  0E00               	movlw	0
  3422   0013F6  6E4C               	movwf	_wait^0,c
  3423                           
  3424                           ;menu.c: 40:             shift = 0;
  3425   0013F8  0E00               	movlw	0
  3426   0013FA  6E5B               	movwf	(_shift+1)^0,c
  3427   0013FC  0E00               	movlw	0
  3428   0013FE  6E5A               	movwf	_shift^0,c
  3429   001400                     
  3430                           ;menu.c: 41:             clcd_write(0x01, 0);
  3431   001400  0E00               	movlw	0
  3432   001402  6E01               	movwf	clcd_write@control_bit^0,c
  3433   001404  0E01               	movlw	1
  3434   001406  EC65  F001         	call	_clcd_write
  3435   00140A  EF5D  F00A         	goto	l3901
  3436   00140E                     l3881:
  3437   00140E  BE4D               	btfsc	(_wait+1)^0,7,c
  3438   001410  EF12  F00A         	goto	u3381
  3439   001414  504D               	movf	(_wait+1)^0,w,c
  3440   001416  E108               	bnz	u3380
  3441   001418  044C               	decf	_wait^0,w,c
  3442   00141A  A0D8               	btfss	status,0,c
  3443   00141C  EF12  F00A         	goto	u3381
  3444   001420  EF14  F00A         	goto	u3380
  3445   001424                     u3381:
  3446   001424  EF5D  F00A         	goto	l3901
  3447   001428                     u3380:
  3448   001428  BE4D               	btfsc	(_wait+1)^0,7,c
  3449   00142A  EF22  F00A         	goto	u3390
  3450   00142E  0EF4               	movlw	244
  3451   001430  5C4C               	subwf	_wait^0,w,c
  3452   001432  0E01               	movlw	1
  3453   001434  584D               	subwfb	(_wait+1)^0,w,c
  3454   001436  B0D8               	btfsc	status,0,c
  3455   001438  EF20  F00A         	goto	u3391
  3456   00143C  EF22  F00A         	goto	u3390
  3457   001440                     u3391:
  3458   001440  EF5D  F00A         	goto	l3901
  3459   001444                     u3390:
  3460   001444                     
  3461                           ;menu.c: 45:         if(flag >=0 && flag <=4)
  3462   001444  BE51               	btfsc	(_flag@menu$F308+1)^0,7,c
  3463   001446  EF27  F00A         	goto	u3401
  3464   00144A  EF29  F00A         	goto	u3400
  3465   00144E                     u3401:
  3466   00144E  EF39  F00A         	goto	l3891
  3467   001452                     u3400:
  3468   001452  BE51               	btfsc	(_flag@menu$F308+1)^0,7,c
  3469   001454  EF37  F00A         	goto	u3410
  3470   001458  5051               	movf	(_flag@menu$F308+1)^0,w,c
  3471   00145A  E107               	bnz	u3411
  3472   00145C  0E05               	movlw	5
  3473   00145E  5C50               	subwf	_flag@menu$F308^0,w,c
  3474   001460  B0D8               	btfsc	status,0,c
  3475   001462  EF35  F00A         	goto	u3411
  3476   001466  EF37  F00A         	goto	u3410
  3477   00146A                     u3411:
  3478   00146A  EF39  F00A         	goto	l3891
  3479   00146E                     u3410:
  3480   00146E                     
  3481                           ;menu.c: 46:         {;menu.c: 47:             flag++;
  3482   00146E  4A50               	infsnz	_flag@menu$F308^0,f,c
  3483   001470  2A51               	incf	(_flag@menu$F308+1)^0,f,c
  3484   001472                     l3891:
  3485                           
  3486                           ;menu.c: 49:         wait = 0;
  3487   001472  0E00               	movlw	0
  3488   001474  6E4D               	movwf	(_wait+1)^0,c
  3489   001476  0E00               	movlw	0
  3490   001478  6E4C               	movwf	_wait^0,c
  3491   00147A                     
  3492                           ;menu.c: 50:         if (star_flag == 0) {
  3493   00147A  0100               	movlb	0	; () banked
  3494   00147C  5186               	movf	_star_flag& (0+255),w,b
  3495   00147E  1187               	iorwf	(_star_flag+1)& (0+255),w,b
  3496   001480  A4D8               	btfss	status,2,c
  3497   001482  EF45  F00A         	goto	u3421
  3498   001486  EF47  F00A         	goto	u3420
  3499   00148A                     u3421:
  3500   00148A  EF4D  F00A         	goto	l3897
  3501   00148E                     u3420:
  3502   00148E                     
  3503                           ; BSR set to: 0
  3504                           ;menu.c: 51:             star_flag = 1;
  3505   00148E  0E00               	movlw	0
  3506   001490  6F87               	movwf	(_star_flag+1)& (0+255),b
  3507   001492  0E01               	movlw	1
  3508   001494  6F86               	movwf	_star_flag& (0+255),b
  3509                           
  3510                           ;menu.c: 52:         }
  3511   001496  EF5D  F00A         	goto	l3901
  3512   00149A                     l3897:
  3513                           
  3514                           ; BSR set to: 0
  3515   00149A  BE4B               	btfsc	(_menu_index+1)^0,7,c
  3516   00149C  EF5B  F00A         	goto	u3430
  3517   0014A0  504B               	movf	(_menu_index+1)^0,w,c
  3518   0014A2  E107               	bnz	u3431
  3519   0014A4  0E03               	movlw	3
  3520   0014A6  5C4A               	subwf	_menu_index^0,w,c
  3521   0014A8  B0D8               	btfsc	status,0,c
  3522   0014AA  EF59  F00A         	goto	u3431
  3523   0014AE  EF5B  F00A         	goto	u3430
  3524   0014B2                     u3431:
  3525   0014B2  EF5D  F00A         	goto	l3901
  3526   0014B6                     u3430:
  3527   0014B6                     
  3528                           ; BSR set to: 0
  3529                           ;menu.c: 54:             menu_index++;
  3530   0014B6  4A4A               	infsnz	_menu_index^0,f,c
  3531   0014B8  2A4B               	incf	(_menu_index+1)^0,f,c
  3532   0014BA                     l3901:
  3533                           
  3534                           ;menu.c: 58:     if (11 == key) {
  3535   0014BA  0E0B               	movlw	11
  3536   0014BC  185C               	xorwf	_key^0,w,c
  3537   0014BE  105D               	iorwf	(_key+1)^0,w,c
  3538   0014C0  A4D8               	btfss	status,2,c
  3539   0014C2  EF65  F00A         	goto	u3441
  3540   0014C6  EF67  F00A         	goto	u3440
  3541   0014CA                     u3441:
  3542   0014CA  EFD0  F00A         	goto	l3931
  3543   0014CE                     u3440:
  3544   0014CE                     
  3545                           ;menu.c: 59:         delay++;
  3546   0014CE  4A4E               	infsnz	_delay^0,f,c
  3547   0014D0  2A4F               	incf	(_delay+1)^0,f,c
  3548   0014D2                     
  3549                           ;menu.c: 60:         if (delay > 500) {
  3550   0014D2  BE4F               	btfsc	(_delay+1)^0,7,c
  3551   0014D4  EF75  F00A         	goto	u3451
  3552   0014D8  0EF5               	movlw	245
  3553   0014DA  5C4E               	subwf	_delay^0,w,c
  3554   0014DC  0E01               	movlw	1
  3555   0014DE  584F               	subwfb	(_delay+1)^0,w,c
  3556   0014E0  A0D8               	btfss	status,0,c
  3557   0014E2  EF75  F00A         	goto	u3451
  3558   0014E6  EF77  F00A         	goto	u3450
  3559   0014EA                     u3451:
  3560   0014EA  EF1F  F00B         	goto	l350
  3561   0014EE                     u3450:
  3562   0014EE                     
  3563                           ;menu.c: 61:             delay = 0;
  3564   0014EE  0E00               	movlw	0
  3565   0014F0  6E4F               	movwf	(_delay+1)^0,c
  3566   0014F2  0E00               	movlw	0
  3567   0014F4  6E4E               	movwf	_delay^0,c
  3568   0014F6                     
  3569                           ;menu.c: 62:             if(flag==0){
  3570   0014F6  5050               	movf	_flag@menu$F308^0,w,c
  3571   0014F8  1051               	iorwf	(_flag@menu$F308+1)^0,w,c
  3572   0014FA  A4D8               	btfss	status,2,c
  3573   0014FC  EF82  F00A         	goto	u3461
  3574   001500  EF84  F00A         	goto	u3460
  3575   001504                     u3461:
  3576   001504  EF8A  F00A         	goto	l3913
  3577   001508                     u3460:
  3578   001508                     
  3579                           ;menu.c: 63:                 shift=3;
  3580   001508  0E00               	movlw	0
  3581   00150A  6E5B               	movwf	(_shift+1)^0,c
  3582   00150C  0E03               	movlw	3
  3583   00150E  6E5A               	movwf	_shift^0,c
  3584                           
  3585                           ;menu.c: 64:             }else if(flag==1){
  3586   001510  EFC9  F00A         	goto	l3929
  3587   001514                     l3913:
  3588   001514  0450               	decf	_flag@menu$F308^0,w,c
  3589   001516  1051               	iorwf	(_flag@menu$F308+1)^0,w,c
  3590   001518  A4D8               	btfss	status,2,c
  3591   00151A  EF91  F00A         	goto	u3471
  3592   00151E  EF93  F00A         	goto	u3470
  3593   001522                     u3471:
  3594   001522  EF99  F00A         	goto	l3917
  3595   001526                     u3470:
  3596   001526                     
  3597                           ;menu.c: 65:                 shift=4;
  3598   001526  0E00               	movlw	0
  3599   001528  6E5B               	movwf	(_shift+1)^0,c
  3600   00152A  0E04               	movlw	4
  3601   00152C  6E5A               	movwf	_shift^0,c
  3602                           
  3603                           ;menu.c: 66:             }else if(flag==2){
  3604   00152E  EFC9  F00A         	goto	l3929
  3605   001532                     l3917:
  3606   001532  0E02               	movlw	2
  3607   001534  1850               	xorwf	_flag@menu$F308^0,w,c
  3608   001536  1051               	iorwf	(_flag@menu$F308+1)^0,w,c
  3609   001538  A4D8               	btfss	status,2,c
  3610   00153A  EFA1  F00A         	goto	u3481
  3611   00153E  EFA3  F00A         	goto	u3480
  3612   001542                     u3481:
  3613   001542  EFA9  F00A         	goto	l3921
  3614   001546                     u3480:
  3615   001546                     
  3616                           ;menu.c: 67:                 shift=5;
  3617   001546  0E00               	movlw	0
  3618   001548  6E5B               	movwf	(_shift+1)^0,c
  3619   00154A  0E05               	movlw	5
  3620   00154C  6E5A               	movwf	_shift^0,c
  3621                           
  3622                           ;menu.c: 68:             }else if(flag==3){
  3623   00154E  EFC9  F00A         	goto	l3929
  3624   001552                     l3921:
  3625   001552  0E03               	movlw	3
  3626   001554  1850               	xorwf	_flag@menu$F308^0,w,c
  3627   001556  1051               	iorwf	(_flag@menu$F308+1)^0,w,c
  3628   001558  A4D8               	btfss	status,2,c
  3629   00155A  EFB1  F00A         	goto	u3491
  3630   00155E  EFB3  F00A         	goto	u3490
  3631   001562                     u3491:
  3632   001562  EFB9  F00A         	goto	l3925
  3633   001566                     u3490:
  3634   001566                     
  3635                           ;menu.c: 69:                 shift=6;
  3636   001566  0E00               	movlw	0
  3637   001568  6E5B               	movwf	(_shift+1)^0,c
  3638   00156A  0E06               	movlw	6
  3639   00156C  6E5A               	movwf	_shift^0,c
  3640                           
  3641                           ;menu.c: 70:             }else if(flag==4){
  3642   00156E  EFC9  F00A         	goto	l3929
  3643   001572                     l3925:
  3644   001572  0E04               	movlw	4
  3645   001574  1850               	xorwf	_flag@menu$F308^0,w,c
  3646   001576  1051               	iorwf	(_flag@menu$F308+1)^0,w,c
  3647   001578  A4D8               	btfss	status,2,c
  3648   00157A  EFC1  F00A         	goto	u3501
  3649   00157E  EFC3  F00A         	goto	u3500
  3650   001582                     u3501:
  3651   001582  EFC9  F00A         	goto	l338
  3652   001586                     u3500:
  3653   001586                     
  3654                           ;menu.c: 71:                 shift=7;
  3655   001586  0E00               	movlw	0
  3656   001588  6E5B               	movwf	(_shift+1)^0,c
  3657   00158A  0E07               	movlw	7
  3658   00158C  6E5A               	movwf	_shift^0,c
  3659   00158E  EFC9  F00A         	goto	l3929
  3660   001592                     l338:
  3661   001592                     l3929:
  3662                           
  3663                           ;menu.c: 73:             clcd_write(0x01, 0);
  3664   001592  0E00               	movlw	0
  3665   001594  6E01               	movwf	clcd_write@control_bit^0,c
  3666   001596  0E01               	movlw	1
  3667   001598  EC65  F001         	call	_clcd_write
  3668   00159C  EF1F  F00B         	goto	l350
  3669   0015A0                     l3931:
  3670   0015A0  BE4F               	btfsc	(_delay+1)^0,7,c
  3671   0015A2  EFDB  F00A         	goto	u3511
  3672   0015A6  504F               	movf	(_delay+1)^0,w,c
  3673   0015A8  E108               	bnz	u3510
  3674   0015AA  044E               	decf	_delay^0,w,c
  3675   0015AC  A0D8               	btfss	status,0,c
  3676   0015AE  EFDB  F00A         	goto	u3511
  3677   0015B2  EFDD  F00A         	goto	u3510
  3678   0015B6                     u3511:
  3679   0015B6  EF1F  F00B         	goto	l350
  3680   0015BA                     u3510:
  3681   0015BA  BE4F               	btfsc	(_delay+1)^0,7,c
  3682   0015BC  EFEB  F00A         	goto	u3520
  3683   0015C0  0EF4               	movlw	244
  3684   0015C2  5C4E               	subwf	_delay^0,w,c
  3685   0015C4  0E01               	movlw	1
  3686   0015C6  584F               	subwfb	(_delay+1)^0,w,c
  3687   0015C8  B0D8               	btfsc	status,0,c
  3688   0015CA  EFE9  F00A         	goto	u3521
  3689   0015CE  EFEB  F00A         	goto	u3520
  3690   0015D2                     u3521:
  3691   0015D2  EF1F  F00B         	goto	l350
  3692   0015D6                     u3520:
  3693   0015D6                     
  3694                           ;menu.c: 76:     {;menu.c: 77:         if(flag > 0)
  3695   0015D6  BE51               	btfsc	(_flag@menu$F308+1)^0,7,c
  3696   0015D8  EFF6  F00A         	goto	u3531
  3697   0015DC  5051               	movf	(_flag@menu$F308+1)^0,w,c
  3698   0015DE  E108               	bnz	u3530
  3699   0015E0  0450               	decf	_flag@menu$F308^0,w,c
  3700   0015E2  A0D8               	btfss	status,0,c
  3701   0015E4  EFF6  F00A         	goto	u3531
  3702   0015E8  EFF8  F00A         	goto	u3530
  3703   0015EC                     u3531:
  3704   0015EC  EFFB  F00A         	goto	l3939
  3705   0015F0                     u3530:
  3706   0015F0                     
  3707                           ;menu.c: 78:         {;menu.c: 79:             flag--;
  3708   0015F0  0650               	decf	_flag@menu$F308^0,f,c
  3709   0015F2  A0D8               	btfss	status,0,c
  3710   0015F4  0651               	decf	(_flag@menu$F308+1)^0,f,c
  3711   0015F6                     l3939:
  3712                           
  3713                           ;menu.c: 81:         delay = 0;
  3714   0015F6  0E00               	movlw	0
  3715   0015F8  6E4F               	movwf	(_delay+1)^0,c
  3716   0015FA  0E00               	movlw	0
  3717   0015FC  6E4E               	movwf	_delay^0,c
  3718   0015FE                     
  3719                           ;menu.c: 82:         if (star_flag == 1) {
  3720   0015FE  0100               	movlb	0	; () banked
  3721   001600  0586               	decf	_star_flag& (0+255),w,b
  3722   001602  1187               	iorwf	(_star_flag+1)& (0+255),w,b
  3723   001604  A4D8               	btfss	status,2,c
  3724   001606  EF07  F00B         	goto	u3541
  3725   00160A  EF09  F00B         	goto	u3540
  3726   00160E                     u3541:
  3727   00160E  EF0F  F00B         	goto	l3945
  3728   001612                     u3540:
  3729   001612                     
  3730                           ; BSR set to: 0
  3731                           ;menu.c: 83:             star_flag = 0;
  3732   001612  0E00               	movlw	0
  3733   001614  6F87               	movwf	(_star_flag+1)& (0+255),b
  3734   001616  0E00               	movlw	0
  3735   001618  6F86               	movwf	_star_flag& (0+255),b
  3736                           
  3737                           ;menu.c: 84:         }
  3738   00161A  EF1F  F00B         	goto	l350
  3739   00161E                     l3945:
  3740                           
  3741                           ; BSR set to: 0
  3742   00161E  BE4B               	btfsc	(_menu_index+1)^0,7,c
  3743   001620  EF1A  F00B         	goto	u3551
  3744   001624  504B               	movf	(_menu_index+1)^0,w,c
  3745   001626  E108               	bnz	u3550
  3746   001628  044A               	decf	_menu_index^0,w,c
  3747   00162A  A0D8               	btfss	status,0,c
  3748   00162C  EF1A  F00B         	goto	u3551
  3749   001630  EF1C  F00B         	goto	u3550
  3750   001634                     u3551:
  3751   001634  EF1F  F00B         	goto	l350
  3752   001638                     u3550:
  3753   001638                     
  3754                           ; BSR set to: 0
  3755                           ;menu.c: 86:             menu_index--;
  3756   001638  064A               	decf	_menu_index^0,f,c
  3757   00163A  A0D8               	btfss	status,0,c
  3758   00163C  064B               	decf	(_menu_index+1)^0,f,c
  3759   00163E                     l350:
  3760   00163E  0012               	return		;funcret
  3761   001640                     __end_of_menu_car:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _login *****************
  3765 ;; Defined at:
  3766 ;;		line 29 in file "login.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  j               4   18[COMRAM] unsigned long 
  3771 ;;  i               2   22[COMRAM] unsigned int 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3781 ;;      Params:         0       0       0       0       0       0       0
  3782 ;;      Locals:         6       0       0       0       0       0       0
  3783 ;;      Temps:          2       0       0       0       0       0       0
  3784 ;;      Totals:         8       0       0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 4
  3788 ;; This function calls:
  3789 ;;		___lwdiv
  3790 ;;		___lwmod
  3791 ;;		_clcd_print
  3792 ;;		_clcd_putch
  3793 ;;		_clcd_write
  3794 ;;		_read_external_eeprom
  3795 ;;		_read_switches
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text4
  3802   0019DA                     __ptext4:
  3803                           	callstack 0
  3804   0019DA                     _login:
  3805                           	callstack 26
  3806   0019DA                     
  3807                           ;login.c: 31:     if (one) {
  3808   0019DA  0100               	movlb	0	; () banked
  3809   0019DC  51A9               	movf	_one& (0+255),w,b
  3810   0019DE  11AA               	iorwf	(_one+1)& (0+255),w,b
  3811   0019E0  B4D8               	btfsc	status,2,c
  3812   0019E2  EFF5  F00C         	goto	u3191
  3813   0019E6  EFF7  F00C         	goto	u3190
  3814   0019EA                     u3191:
  3815   0019EA  EF0F  F00D         	goto	l3723
  3816   0019EE                     u3190:
  3817   0019EE                     
  3818                           ; BSR set to: 0
  3819                           ;login.c: 37:         arr1[0] = read_external_eeprom(0x80);
  3820   0019EE  0E80               	movlw	128
  3821   0019F0  EC50  F001         	call	_read_external_eeprom
  3822   0019F4  0100               	movlb	0	; () banked
  3823   0019F6  6F70               	movwf	_arr1& (0+255),b
  3824                           
  3825                           ;login.c: 38:         arr1[1] = read_external_eeprom(0x81);
  3826   0019F8  0E81               	movlw	129
  3827   0019FA  EC50  F001         	call	_read_external_eeprom
  3828   0019FE  0100               	movlb	0	; () banked
  3829   001A00  6F71               	movwf	(_arr1+1)& (0+255),b
  3830                           
  3831                           ;login.c: 39:         arr1[2] = read_external_eeprom(0x82);
  3832   001A02  0E82               	movlw	130
  3833   001A04  EC50  F001         	call	_read_external_eeprom
  3834   001A08  0100               	movlb	0	; () banked
  3835   001A0A  6F72               	movwf	(_arr1+2)& (0+255),b
  3836                           
  3837                           ;login.c: 40:         arr1[3] = read_external_eeprom(0x83);
  3838   001A0C  0E83               	movlw	131
  3839   001A0E  EC50  F001         	call	_read_external_eeprom
  3840   001A12  0100               	movlb	0	; () banked
  3841   001A14  6F73               	movwf	(_arr1+3)& (0+255),b
  3842   001A16                     
  3843                           ; BSR set to: 0
  3844                           ;login.c: 41:         one = 0;
  3845   001A16  0E00               	movlw	0
  3846   001A18  6FAA               	movwf	(_one+1)& (0+255),b
  3847   001A1A  0E00               	movlw	0
  3848   001A1C  6FA9               	movwf	_one& (0+255),b
  3849   001A1E                     l3723:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;login.c: 44:         static int left=3;;login.c: 46:     if (left != 0) {
  3853   001A1E  51A3               	movf	login@left& (0+255),w,b
  3854   001A20  11A4               	iorwf	(login@left+1)& (0+255),w,b
  3855   001A22  B4D8               	btfsc	status,2,c
  3856   001A24  EF16  F00D         	goto	u3201
  3857   001A28  EF18  F00D         	goto	u3200
  3858   001A2C                     u3201:
  3859   001A2C  EF4F  F00D         	goto	l3739
  3860   001A30                     u3200:
  3861   001A30                     
  3862                           ; BSR set to: 0
  3863                           ;login.c: 47:         if (wait1++==2000) {
  3864   001A30  0E01               	movlw	1
  3865   001A32  2768               	addwf	_wait1& (0+255),f,b
  3866   001A34  0E00               	movlw	0
  3867   001A36  2369               	addwfc	(_wait1+1)& (0+255),f,b
  3868   001A38  236A               	addwfc	(_wait1+2)& (0+255),f,b
  3869   001A3A  236B               	addwfc	(_wait1+3)& (0+255),f,b
  3870   001A3C  0ED1               	movlw	209
  3871   001A3E  1968               	xorwf	_wait1& (0+255),w,b
  3872   001A40  E109               	bnz	u3211
  3873   001A42  0E07               	movlw	7
  3874   001A44  1969               	xorwf	(_wait1+1)& (0+255),w,b
  3875   001A46  116A               	iorwf	(_wait1+2)& (0+255),w,b
  3876   001A48  116B               	iorwf	(_wait1+3)& (0+255),w,b
  3877   001A4A  A4D8               	btfss	status,2,c
  3878   001A4C  EF2A  F00D         	goto	u3211
  3879   001A50  EF2C  F00D         	goto	u3210
  3880   001A54                     u3211:
  3881   001A54  EF36  F00D         	goto	l3731
  3882   001A58                     u3210:
  3883   001A58                     
  3884                           ; BSR set to: 0
  3885                           ;login.c: 48:                 second++;
  3886   001A58  4B88               	infsnz	_second& (0+255),f,b
  3887   001A5A  2B89               	incf	(_second+1)& (0+255),f,b
  3888   001A5C                     
  3889                           ; BSR set to: 0
  3890                           ;login.c: 49:                 wait1=0;
  3891   001A5C  0E00               	movlw	0
  3892   001A5E  6F68               	movwf	_wait1& (0+255),b
  3893   001A60  0E00               	movlw	0
  3894   001A62  6F69               	movwf	(_wait1+1)& (0+255),b
  3895   001A64  0E00               	movlw	0
  3896   001A66  6F6A               	movwf	(_wait1+2)& (0+255),b
  3897   001A68  0E00               	movlw	0
  3898   001A6A  6F6B               	movwf	(_wait1+3)& (0+255),b
  3899   001A6C                     l3731:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;login.c: 51:         if (second==5) {
  3903   001A6C  0E05               	movlw	5
  3904   001A6E  1988               	xorwf	_second& (0+255),w,b
  3905   001A70  1189               	iorwf	(_second+1)& (0+255),w,b
  3906   001A72  A4D8               	btfss	status,2,c
  3907   001A74  EF3E  F00D         	goto	u3221
  3908   001A78  EF40  F00D         	goto	u3220
  3909   001A7C                     u3221:
  3910   001A7C  EF4F  F00D         	goto	l3739
  3911   001A80                     u3220:
  3912   001A80                     
  3913                           ; BSR set to: 0
  3914                           ;login.c: 52:         second = 0;
  3915   001A80  0E00               	movlw	0
  3916   001A82  6F89               	movwf	(_second+1)& (0+255),b
  3917   001A84  0E00               	movlw	0
  3918   001A86  6F88               	movwf	_second& (0+255),b
  3919                           
  3920                           ;login.c: 53:         shift = 0;
  3921   001A88  0E00               	movlw	0
  3922   001A8A  6E5B               	movwf	(_shift+1)^0,c
  3923   001A8C  0E00               	movlw	0
  3924   001A8E  6E5A               	movwf	_shift^0,c
  3925   001A90                     
  3926                           ; BSR set to: 0
  3927                           ;login.c: 54:         clcd_write(0x01, 0);
  3928   001A90  0E00               	movlw	0
  3929   001A92  6E01               	movwf	clcd_write@control_bit^0,c
  3930   001A94  0E01               	movlw	1
  3931   001A96  EC65  F001         	call	_clcd_write
  3932   001A9A  EFFA  F00E         	goto	l276
  3933   001A9E                     l3739:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;login.c: 58:     key_mkp = read_switches(1);
  3937   001A9E  0E01               	movlw	1
  3938   001AA0  EC0D  F003         	call	_read_switches
  3939   001AA4  6E11               	movwf	??_login^0,c
  3940   001AA6  5011               	movf	??_login^0,w,c
  3941   001AA8  0100               	movlb	0	; () banked
  3942   001AAA  6F92               	movwf	_key_mkp& (0+255),b
  3943   001AAC  6B93               	clrf	(_key_mkp+1)& (0+255),b
  3944   001AAE                     
  3945                           ; BSR set to: 0
  3946                           ;login.c: 59:     if (flag == 1) {
  3947   001AAE  05A7               	decf	_flag& (0+255),w,b
  3948   001AB0  11A8               	iorwf	(_flag+1)& (0+255),w,b
  3949   001AB2  A4D8               	btfss	status,2,c
  3950   001AB4  EF5E  F00D         	goto	u3231
  3951   001AB8  EF60  F00D         	goto	u3230
  3952   001ABC                     u3231:
  3953   001ABC  EFA3  F00D         	goto	l3769
  3954   001AC0                     u3230:
  3955   001AC0                     
  3956                           ; BSR set to: 0
  3957                           ;login.c: 60:         clcd_print("Enter password", (0x80 + (0)));
  3958   001AC0  0E09               	movlw	low (STR_11+2)
  3959   001AC2  6E03               	movwf	clcd_print@data^0,c
  3960   001AC4  0E2F               	movlw	high (STR_11+2)
  3961   001AC6  6E04               	movwf	(clcd_print@data+1)^0,c
  3962   001AC8  0E80               	movlw	128
  3963   001ACA  6E05               	movwf	clcd_print@addr^0,c
  3964   001ACC  EC9D  F002         	call	_clcd_print	;wreg free
  3965   001AD0                     
  3966                           ;login.c: 61:         if (11 == key_mkp) {
  3967   001AD0  0E0B               	movlw	11
  3968   001AD2  0100               	movlb	0	; () banked
  3969   001AD4  1992               	xorwf	_key_mkp& (0+255),w,b
  3970   001AD6  1193               	iorwf	(_key_mkp+1)& (0+255),w,b
  3971   001AD8  A4D8               	btfss	status,2,c
  3972   001ADA  EF71  F00D         	goto	u3241
  3973   001ADE  EF73  F00D         	goto	u3240
  3974   001AE2                     u3241:
  3975   001AE2  EF8B  F00D         	goto	l3757
  3976   001AE6                     u3240:
  3977   001AE6                     
  3978                           ; BSR set to: 0
  3979                           ;login.c: 62:             clcd_putch('*', (0xC0 + (i)));
  3980   001AE6  5058               	movf	_i^0,w,c
  3981   001AE8  0FC0               	addlw	192
  3982   001AEA  6E0F               	movwf	clcd_putch@addr^0,c
  3983   001AEC  0E2A               	movlw	42
  3984   001AEE  ECE7  F000         	call	_clcd_putch
  3985   001AF2                     
  3986                           ;login.c: 63:             arr[i++] = '1';
  3987   001AF2  5058               	movf	_i^0,w,c
  3988   001AF4  0F6C               	addlw	low _arr
  3989   001AF6  6ED9               	movwf	fsr2l,c
  3990   001AF8  6ADA               	clrf	fsr2h,c
  3991   001AFA  0E31               	movlw	49
  3992   001AFC  6EDF               	movwf	indf2,c
  3993   001AFE                     l3751:
  3994   001AFE  4A58               	infsnz	_i^0,f,c
  3995   001B00  2A59               	incf	(_i+1)^0,f,c
  3996   001B02                     
  3997                           ;login.c: 64:             count1--;
  3998   001B02  0100               	movlb	0	; () banked
  3999   001B04  078E               	decf	_count1& (0+255),f,b
  4000   001B06  A0D8               	btfss	status,0,c
  4001   001B08  078F               	decf	(_count1+1)& (0+255),f,b
  4002   001B0A                     
  4003                           ; BSR set to: 0
  4004                           ;login.c: 65:             second = 0;
  4005   001B0A  0E00               	movlw	0
  4006   001B0C  6F89               	movwf	(_second+1)& (0+255),b
  4007   001B0E  0E00               	movlw	0
  4008   001B10  6F88               	movwf	_second& (0+255),b
  4009                           
  4010                           ;login.c: 66:         } else if (12 == key_mkp) {
  4011   001B12  EFA3  F00D         	goto	l3769
  4012   001B16                     l3757:
  4013                           
  4014                           ; BSR set to: 0
  4015   001B16  0E0C               	movlw	12
  4016   001B18  1992               	xorwf	_key_mkp& (0+255),w,b
  4017   001B1A  1193               	iorwf	(_key_mkp+1)& (0+255),w,b
  4018   001B1C  A4D8               	btfss	status,2,c
  4019   001B1E  EF93  F00D         	goto	u3251
  4020   001B22  EF95  F00D         	goto	u3250
  4021   001B26                     u3251:
  4022   001B26  EFA3  F00D         	goto	l3769
  4023   001B2A                     u3250:
  4024   001B2A                     
  4025                           ; BSR set to: 0
  4026                           ;login.c: 67:             clcd_putch('*', (0xC0 + (i)));
  4027   001B2A  5058               	movf	_i^0,w,c
  4028   001B2C  0FC0               	addlw	192
  4029   001B2E  6E0F               	movwf	clcd_putch@addr^0,c
  4030   001B30  0E2A               	movlw	42
  4031   001B32  ECE7  F000         	call	_clcd_putch
  4032   001B36                     
  4033                           ;login.c: 68:             arr[i++] = '0';
  4034   001B36  5058               	movf	_i^0,w,c
  4035   001B38  0F6C               	addlw	low _arr
  4036   001B3A  6ED9               	movwf	fsr2l,c
  4037   001B3C  6ADA               	clrf	fsr2h,c
  4038   001B3E  0E30               	movlw	48
  4039   001B40  6EDF               	movwf	indf2,c
  4040   001B42  EF7F  F00D         	goto	l3751
  4041   001B46                     l3769:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;login.c: 73:     if (count1 == 0) {
  4045   001B46  518E               	movf	_count1& (0+255),w,b
  4046   001B48  118F               	iorwf	(_count1+1)& (0+255),w,b
  4047   001B4A  A4D8               	btfss	status,2,c
  4048   001B4C  EFAA  F00D         	goto	u3261
  4049   001B50  EFAC  F00D         	goto	u3260
  4050   001B54                     u3261:
  4051   001B54  EF2D  F00E         	goto	l3809
  4052   001B58                     u3260:
  4053   001B58                     
  4054                           ; BSR set to: 0
  4055                           ;login.c: 74:         for (j = 0; j < 4; j++) {
  4056   001B58  0E00               	movlw	0
  4057   001B5A  6E53               	movwf	(_j+1)^0,c
  4058   001B5C  0E00               	movlw	0
  4059   001B5E  6E52               	movwf	_j^0,c
  4060   001B60                     l3777:
  4061                           
  4062                           ;login.c: 75:             if (arr[j] != arr1[j]) {
  4063   001B60  5052               	movf	_j^0,w,c
  4064   001B62  0F70               	addlw	low _arr1
  4065   001B64  6ED9               	movwf	fsr2l,c
  4066   001B66  6ADA               	clrf	fsr2h,c
  4067   001B68  5052               	movf	_j^0,w,c
  4068   001B6A  0F6C               	addlw	low _arr
  4069   001B6C  6EE1               	movwf	fsr1l,c
  4070   001B6E  6AE2               	clrf	fsr1h,c
  4071   001B70  50DE               	movf	postinc2,w,c
  4072   001B72  18E6               	xorwf	postinc1,w,c
  4073   001B74  B4D8               	btfsc	status,2,c
  4074   001B76  EFBF  F00D         	goto	u3271
  4075   001B7A  EFC1  F00D         	goto	u3270
  4076   001B7E                     u3271:
  4077   001B7E  EF13  F00E         	goto	l3801
  4078   001B82                     u3270:
  4079   001B82                     
  4080                           ;login.c: 76:                 i = 0;
  4081   001B82  0E00               	movlw	0
  4082   001B84  6E59               	movwf	(_i+1)^0,c
  4083   001B86  0E00               	movlw	0
  4084   001B88  6E58               	movwf	_i^0,c
  4085   001B8A                     
  4086                           ;login.c: 77:                 if (left == 0)
  4087   001B8A  0100               	movlb	0	; () banked
  4088   001B8C  51A3               	movf	login@left& (0+255),w,b
  4089   001B8E  11A4               	iorwf	(login@left+1)& (0+255),w,b
  4090   001B90  A4D8               	btfss	status,2,c
  4091   001B92  EFCD  F00D         	goto	u3281
  4092   001B96  EFCF  F00D         	goto	u3280
  4093   001B9A                     u3281:
  4094   001B9A  EFD5  F00D         	goto	l3785
  4095   001B9E                     u3280:
  4096   001B9E                     
  4097                           ; BSR set to: 0
  4098                           ;login.c: 78:                     count1 = 0;
  4099   001B9E  0E00               	movlw	0
  4100   001BA0  6F8F               	movwf	(_count1+1)& (0+255),b
  4101   001BA2  0E00               	movlw	0
  4102   001BA4  6F8E               	movwf	_count1& (0+255),b
  4103   001BA6  EFD9  F00D         	goto	l286
  4104   001BAA                     l3785:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;login.c: 80:                     count1 = 4;
  4108   001BAA  0E00               	movlw	0
  4109   001BAC  6F8F               	movwf	(_count1+1)& (0+255),b
  4110   001BAE  0E04               	movlw	4
  4111   001BB0  6F8E               	movwf	_count1& (0+255),b
  4112   001BB2                     l286:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;login.c: 81:                 flag = 1;
  4116   001BB2  0E00               	movlw	0
  4117   001BB4  6FA8               	movwf	(_flag+1)& (0+255),b
  4118   001BB6  0E01               	movlw	1
  4119   001BB8  6FA7               	movwf	_flag& (0+255),b
  4120   001BBA                     
  4121                           ; BSR set to: 0
  4122                           ;login.c: 82:                 clcd_print("PASSWORD WORNG", (0x80 + (0)));
  4123   001BBA  0EB6               	movlw	low STR_3
  4124   001BBC  6E03               	movwf	clcd_print@data^0,c
  4125   001BBE  0E2F               	movlw	high STR_3
  4126   001BC0  6E04               	movwf	(clcd_print@data+1)^0,c
  4127   001BC2  0E80               	movlw	128
  4128   001BC4  6E05               	movwf	clcd_print@addr^0,c
  4129   001BC6  EC9D  F002         	call	_clcd_print	;wreg free
  4130   001BCA                     
  4131                           ;login.c: 83:                 clcd_print("ATTEMP LEFT->", (0xC0 + (0)));
  4132   001BCA  0EC5               	movlw	low STR_4
  4133   001BCC  6E03               	movwf	clcd_print@data^0,c
  4134   001BCE  0E2F               	movlw	high STR_4
  4135   001BD0  6E04               	movwf	(clcd_print@data+1)^0,c
  4136   001BD2  0EC0               	movlw	192
  4137   001BD4  6E05               	movwf	clcd_print@addr^0,c
  4138   001BD6  EC9D  F002         	call	_clcd_print	;wreg free
  4139   001BDA                     
  4140                           ;login.c: 84:                 clcd_putch(--left + 48, (0xC0 + (13)));
  4141   001BDA  0ECD               	movlw	205
  4142   001BDC  6E0F               	movwf	clcd_putch@addr^0,c
  4143   001BDE  0100               	movlb	0	; () banked
  4144   001BE0  07A3               	decf	login@left& (0+255),f,b
  4145   001BE2  A0D8               	btfss	status,0,c
  4146   001BE4  07A4               	decf	(login@left+1)& (0+255),f,b
  4147   001BE6  51A3               	movf	login@left& (0+255),w,b
  4148   001BE8  0F30               	addlw	48
  4149   001BEA  ECE7  F000         	call	_clcd_putch
  4150   001BEE                     
  4151                           ;login.c: 85:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  4152   001BEE  0E1A               	movlw	26
  4153   001BF0  6E12               	movwf	(??_login+1)^0,c
  4154   001BF2  0E5E               	movlw	94
  4155   001BF4  6E11               	movwf	??_login^0,c
  4156   001BF6  0E6E               	movlw	110
  4157   001BF8                     u4547:
  4158   001BF8  2EE8               	decfsz	wreg,f,c
  4159   001BFA  D7FE               	bra	u4547
  4160   001BFC  2E11               	decfsz	??_login^0,f,c
  4161   001BFE  D7FC               	bra	u4547
  4162   001C00  2E12               	decfsz	(??_login+1)^0,f,c
  4163   001C02  D7FA               	bra	u4547
  4164   001C04  D000               	nop2	
  4165   001C06                     
  4166                           ;login.c: 86:                 clcd_write(0x01, 0);
  4167   001C06  0E00               	movlw	0
  4168   001C08  6E01               	movwf	clcd_write@control_bit^0,c
  4169   001C0A  0E01               	movlw	1
  4170   001C0C  EC65  F001         	call	_clcd_write
  4171   001C10                     
  4172                           ;login.c: 87:                 second = 0;
  4173   001C10  0E00               	movlw	0
  4174   001C12  0100               	movlb	0	; () banked
  4175   001C14  6F89               	movwf	(_second+1)& (0+255),b
  4176   001C16  0E00               	movlw	0
  4177   001C18  6F88               	movwf	_second& (0+255),b
  4178   001C1A                     
  4179                           ; BSR set to: 0
  4180                           ;login.c: 88:                 right = 0;
  4181   001C1A  0E00               	movlw	0
  4182   001C1C  6F8B               	movwf	(_right+1)& (0+255),b
  4183   001C1E  0E00               	movlw	0
  4184   001C20  6F8A               	movwf	_right& (0+255),b
  4185                           
  4186                           ;login.c: 89:                 break;
  4187   001C22  EF2D  F00E         	goto	l3809
  4188   001C26                     l3801:
  4189                           
  4190                           ;login.c: 91:             right = 1;
  4191   001C26  0E00               	movlw	0
  4192   001C28  0100               	movlb	0	; () banked
  4193   001C2A  6F8B               	movwf	(_right+1)& (0+255),b
  4194   001C2C  0E01               	movlw	1
  4195   001C2E  6F8A               	movwf	_right& (0+255),b
  4196   001C30                     
  4197                           ; BSR set to: 0
  4198                           ;login.c: 92:             clcd_write(0x01, 0);
  4199   001C30  0E00               	movlw	0
  4200   001C32  6E01               	movwf	clcd_write@control_bit^0,c
  4201   001C34  0E01               	movlw	1
  4202   001C36  EC65  F001         	call	_clcd_write
  4203   001C3A                     
  4204                           ;login.c: 93:         }
  4205   001C3A  4A52               	infsnz	_j^0,f,c
  4206   001C3C  2A53               	incf	(_j+1)^0,f,c
  4207   001C3E  BE53               	btfsc	(_j+1)^0,7,c
  4208   001C40  EF2B  F00E         	goto	u3291
  4209   001C44  5053               	movf	(_j+1)^0,w,c
  4210   001C46  E109               	bnz	u3290
  4211   001C48  0E04               	movlw	4
  4212   001C4A  5C52               	subwf	_j^0,w,c
  4213   001C4C  A0D8               	btfss	status,0,c
  4214   001C4E  EF2B  F00E         	goto	u3291
  4215   001C52  EF2D  F00E         	goto	u3290
  4216   001C56                     u3291:
  4217   001C56  EFB0  F00D         	goto	l3777
  4218   001C5A                     u3290:
  4219   001C5A                     l3809:
  4220                           
  4221                           ;login.c: 95:     if (right == 1) {
  4222   001C5A  0100               	movlb	0	; () banked
  4223   001C5C  058A               	decf	_right& (0+255),w,b
  4224   001C5E  118B               	iorwf	(_right+1)& (0+255),w,b
  4225   001C60  A4D8               	btfss	status,2,c
  4226   001C62  EF35  F00E         	goto	u3301
  4227   001C66  EF37  F00E         	goto	u3300
  4228   001C6A                     u3301:
  4229   001C6A  EF5B  F00E         	goto	l3821
  4230   001C6E                     u3300:
  4231   001C6E                     
  4232                           ; BSR set to: 0
  4233                           ;login.c: 96:         clcd_print("SUCCESSFULL", (0x80 + (0)));
  4234   001C6E  0ED3               	movlw	low STR_5
  4235   001C70  6E03               	movwf	clcd_print@data^0,c
  4236   001C72  0E2F               	movlw	high STR_5
  4237   001C74  6E04               	movwf	(clcd_print@data+1)^0,c
  4238   001C76  0E80               	movlw	128
  4239   001C78  6E05               	movwf	clcd_print@addr^0,c
  4240   001C7A  EC9D  F002         	call	_clcd_print	;wreg free
  4241                           
  4242                           ;login.c: 97:         clcd_print("WELCOME SHEKHAR", (0xC0 + (0)));
  4243   001C7E  0E69               	movlw	low STR_6
  4244   001C80  6E03               	movwf	clcd_print@data^0,c
  4245   001C82  0E2F               	movlw	high STR_6
  4246   001C84  6E04               	movwf	(clcd_print@data+1)^0,c
  4247   001C86  0EC0               	movlw	192
  4248   001C88  6E05               	movwf	clcd_print@addr^0,c
  4249   001C8A  EC9D  F002         	call	_clcd_print	;wreg free
  4250   001C8E                     
  4251                           ;login.c: 98:         shift = 2;
  4252   001C8E  0E00               	movlw	0
  4253   001C90  6E5B               	movwf	(_shift+1)^0,c
  4254   001C92  0E02               	movlw	2
  4255   001C94  6E5A               	movwf	_shift^0,c
  4256   001C96                     
  4257                           ;login.c: 99:         left = 3;
  4258   001C96  0E00               	movlw	0
  4259   001C98  0100               	movlb	0	; () banked
  4260   001C9A  6FA4               	movwf	(login@left+1)& (0+255),b
  4261   001C9C  0E03               	movlw	3
  4262   001C9E  6FA3               	movwf	login@left& (0+255),b
  4263   001CA0                     
  4264                           ; BSR set to: 0
  4265                           ;login.c: 100:         right = 0;
  4266   001CA0  0E00               	movlw	0
  4267   001CA2  6F8B               	movwf	(_right+1)& (0+255),b
  4268   001CA4  0E00               	movlw	0
  4269   001CA6  6F8A               	movwf	_right& (0+255),b
  4270   001CA8                     
  4271                           ; BSR set to: 0
  4272                           ;login.c: 101:         clcd_write(0x01, 0);
  4273   001CA8  0E00               	movlw	0
  4274   001CAA  6E01               	movwf	clcd_write@control_bit^0,c
  4275   001CAC  0E01               	movlw	1
  4276   001CAE  EC65  F001         	call	_clcd_write
  4277                           
  4278                           ;login.c: 102:     }
  4279   001CB2  EFFA  F00E         	goto	l276
  4280   001CB6                     l3821:
  4281                           
  4282                           ; BSR set to: 0
  4283   001CB6  51A3               	movf	login@left& (0+255),w,b
  4284   001CB8  11A4               	iorwf	(login@left+1)& (0+255),w,b
  4285   001CBA  A4D8               	btfss	status,2,c
  4286   001CBC  EF62  F00E         	goto	u3311
  4287   001CC0  EF64  F00E         	goto	u3310
  4288   001CC4                     u3311:
  4289   001CC4  EFFA  F00E         	goto	l276
  4290   001CC8                     u3310:
  4291   001CC8                     
  4292                           ; BSR set to: 0
  4293                           ;login.c: 104:         unsigned int i = 120;
  4294   001CC8  0E00               	movlw	0
  4295   001CCA  6E18               	movwf	(login@i+1)^0,c
  4296   001CCC  0E78               	movlw	120
  4297   001CCE  6E17               	movwf	login@i^0,c
  4298                           
  4299                           ;login.c: 105:         while (i) {
  4300   001CD0  EFE3  F00E         	goto	l3847
  4301   001CD4                     l3825:
  4302                           
  4303                           ;login.c: 106:             second=0;
  4304   001CD4  0E00               	movlw	0
  4305   001CD6  0100               	movlb	0	; () banked
  4306   001CD8  6F89               	movwf	(_second+1)& (0+255),b
  4307   001CDA  0E00               	movlw	0
  4308   001CDC  6F88               	movwf	_second& (0+255),b
  4309   001CDE                     
  4310                           ; BSR set to: 0
  4311                           ;login.c: 107:             clcd_write(0x01, 0);
  4312   001CDE  0E00               	movlw	0
  4313   001CE0  6E01               	movwf	clcd_write@control_bit^0,c
  4314   001CE2  0E01               	movlw	1
  4315   001CE4  EC65  F001         	call	_clcd_write
  4316   001CE8                     
  4317                           ;login.c: 108:             clcd_print("you are blocked", (0x80 + (0)));
  4318   001CE8  0E79               	movlw	low STR_7
  4319   001CEA  6E03               	movwf	clcd_print@data^0,c
  4320   001CEC  0E2F               	movlw	high STR_7
  4321   001CEE  6E04               	movwf	(clcd_print@data+1)^0,c
  4322   001CF0  0E80               	movlw	128
  4323   001CF2  6E05               	movwf	clcd_print@addr^0,c
  4324   001CF4  EC9D  F002         	call	_clcd_print	;wreg free
  4325   001CF8                     
  4326                           ;login.c: 109:             clcd_print("Wait ", (0xC0 + (0)));
  4327   001CF8  0EF6               	movlw	low STR_8
  4328   001CFA  6E03               	movwf	clcd_print@data^0,c
  4329   001CFC  0E2F               	movlw	high STR_8
  4330   001CFE  6E04               	movwf	(clcd_print@data+1)^0,c
  4331   001D00  0EC0               	movlw	192
  4332   001D02  6E05               	movwf	clcd_print@addr^0,c
  4333   001D04  EC9D  F002         	call	_clcd_print	;wreg free
  4334   001D08                     
  4335                           ;login.c: 110:             clcd_putch(('0' + (i / 100)), (0xC0 + (8)));
  4336   001D08  0EC8               	movlw	200
  4337   001D0A  6E0F               	movwf	clcd_putch@addr^0,c
  4338   001D0C  C017  F001         	movff	login@i,___lwdiv@dividend
  4339   001D10  C018  F002         	movff	login@i+1,___lwdiv@dividend+1
  4340   001D14  0E00               	movlw	0
  4341   001D16  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4342   001D18  0E64               	movlw	100
  4343   001D1A  6E03               	movwf	___lwdiv@divisor^0,c
  4344   001D1C  ECD3  F002         	call	___lwdiv	;wreg free
  4345   001D20  5001               	movf	?___lwdiv^0,w,c
  4346   001D22  0F30               	addlw	48
  4347   001D24  ECE7  F000         	call	_clcd_putch
  4348   001D28                     
  4349                           ;login.c: 111:             clcd_putch(('0' + (i / 10) % 10), (0xC0 + (9)));
  4350   001D28  0EC9               	movlw	201
  4351   001D2A  6E0F               	movwf	clcd_putch@addr^0,c
  4352   001D2C  0E00               	movlw	0
  4353   001D2E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4354   001D30  0E0A               	movlw	10
  4355   001D32  6E03               	movwf	___lwdiv@divisor^0,c
  4356   001D34  C017  F001         	movff	login@i,___lwdiv@dividend
  4357   001D38  C018  F002         	movff	login@i+1,___lwdiv@dividend+1
  4358   001D3C  ECD3  F002         	call	___lwdiv	;wreg free
  4359   001D40  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  4360   001D44  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  4361   001D48  0E00               	movlw	0
  4362   001D4A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4363   001D4C  0E0A               	movlw	10
  4364   001D4E  6E0A               	movwf	___lwmod@divisor^0,c
  4365   001D50  EC6B  F002         	call	___lwmod	;wreg free
  4366   001D54  5008               	movf	?___lwmod^0,w,c
  4367   001D56  0F30               	addlw	48
  4368   001D58  ECE7  F000         	call	_clcd_putch
  4369   001D5C                     
  4370                           ;login.c: 112:             clcd_putch(('0' + (i % 10)), (0xC0 + (10)));
  4371   001D5C  0ECA               	movlw	202
  4372   001D5E  6E0F               	movwf	clcd_putch@addr^0,c
  4373   001D60  C017  F008         	movff	login@i,___lwmod@dividend
  4374   001D64  C018  F009         	movff	login@i+1,___lwmod@dividend+1
  4375   001D68  0E00               	movlw	0
  4376   001D6A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4377   001D6C  0E0A               	movlw	10
  4378   001D6E  6E0A               	movwf	___lwmod@divisor^0,c
  4379   001D70  EC6B  F002         	call	___lwmod	;wreg free
  4380   001D74  5008               	movf	?___lwmod^0,w,c
  4381   001D76  0F30               	addlw	48
  4382   001D78  ECE7  F000         	call	_clcd_putch
  4383   001D7C                     
  4384                           ;login.c: 113:             clcd_print("Sec...", (0xC0 + (11)));
  4385   001D7C  0EEF               	movlw	low STR_9
  4386   001D7E  6E03               	movwf	clcd_print@data^0,c
  4387   001D80  0E2F               	movlw	high STR_9
  4388   001D82  6E04               	movwf	(clcd_print@data+1)^0,c
  4389   001D84  0ECB               	movlw	203
  4390   001D86  6E05               	movwf	clcd_print@addr^0,c
  4391   001D88  EC9D  F002         	call	_clcd_print	;wreg free
  4392   001D8C                     
  4393                           ;login.c: 114:             for (unsigned long j = 500000; j; j--);
  4394   001D8C  0E20               	movlw	32
  4395   001D8E  6E13               	movwf	login@j^0,c
  4396   001D90  0EA1               	movlw	161
  4397   001D92  6E14               	movwf	(login@j+1)^0,c
  4398   001D94  0E07               	movlw	7
  4399   001D96  6E15               	movwf	(login@j+2)^0,c
  4400   001D98  0E00               	movlw	0
  4401   001D9A  6E16               	movwf	(login@j+3)^0,c
  4402   001D9C  EFD5  F00E         	goto	l292
  4403   001DA0                     l3843:
  4404   001DA0  0613               	decf	login@j^0,f,c
  4405   001DA2  0E00               	movlw	0
  4406   001DA4  5A14               	subwfb	(login@j+1)^0,f,c
  4407   001DA6  5A15               	subwfb	(login@j+2)^0,f,c
  4408   001DA8  5A16               	subwfb	(login@j+3)^0,f,c
  4409   001DAA                     l292:
  4410   001DAA  5013               	movf	login@j^0,w,c
  4411   001DAC  1014               	iorwf	(login@j+1)^0,w,c
  4412   001DAE  1015               	iorwf	(login@j+2)^0,w,c
  4413   001DB0  1016               	iorwf	(login@j+3)^0,w,c
  4414   001DB2  A4D8               	btfss	status,2,c
  4415   001DB4  EFDE  F00E         	goto	u3321
  4416   001DB8  EFE0  F00E         	goto	u3320
  4417   001DBC                     u3321:
  4418   001DBC  EFD0  F00E         	goto	l3843
  4419   001DC0                     u3320:
  4420   001DC0                     
  4421                           ;login.c: 115:             i--;
  4422   001DC0  0617               	decf	login@i^0,f,c
  4423   001DC2  A0D8               	btfss	status,0,c
  4424   001DC4  0618               	decf	(login@i+1)^0,f,c
  4425   001DC6                     l3847:
  4426                           
  4427                           ;login.c: 105:         while (i) {
  4428   001DC6  5017               	movf	login@i^0,w,c
  4429   001DC8  1018               	iorwf	(login@i+1)^0,w,c
  4430   001DCA  A4D8               	btfss	status,2,c
  4431   001DCC  EFEA  F00E         	goto	u3331
  4432   001DD0  EFEC  F00E         	goto	u3330
  4433   001DD4                     u3331:
  4434   001DD4  EF6A  F00E         	goto	l3825
  4435   001DD8                     u3330:
  4436   001DD8                     
  4437                           ;login.c: 117:         left = 3;
  4438   001DD8  0E00               	movlw	0
  4439   001DDA  0100               	movlb	0	; () banked
  4440   001DDC  6FA4               	movwf	(login@left+1)& (0+255),b
  4441   001DDE  0E03               	movlw	3
  4442   001DE0  6FA3               	movwf	login@left& (0+255),b
  4443                           
  4444                           ;login.c: 118:         shift = 0;
  4445   001DE2  0E00               	movlw	0
  4446   001DE4  6E5B               	movwf	(_shift+1)^0,c
  4447   001DE6  0E00               	movlw	0
  4448   001DE8  6E5A               	movwf	_shift^0,c
  4449   001DEA                     
  4450                           ; BSR set to: 0
  4451                           ;login.c: 119:         clcd_write(0x01, 0);
  4452   001DEA  0E00               	movlw	0
  4453   001DEC  6E01               	movwf	clcd_write@control_bit^0,c
  4454   001DEE  0E01               	movlw	1
  4455   001DF0  EC65  F001         	call	_clcd_write
  4456   001DF4                     l276:
  4457   001DF4  0012               	return		;funcret
  4458   001DF6                     __end_of_login:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function ___lwmod *****************
  4462 ;; Defined at:
  4463 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  dividend        2    7[COMRAM] unsigned int 
  4466 ;;  divisor         2    9[COMRAM] unsigned int 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  counter         1   11[COMRAM] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    7[COMRAM] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4478 ;;      Params:         4       0       0       0       0       0       0
  4479 ;;      Locals:         1       0       0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0
  4481 ;;      Totals:         5       0       0       0       0       0       0
  4482 ;;Total ram usage:        5 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_login
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text5
  4492   0004D6                     __ptext5:
  4493                           	callstack 0
  4494   0004D6                     ___lwmod:
  4495                           	callstack 29
  4496   0004D6  500A               	movf	___lwmod@divisor^0,w,c
  4497   0004D8  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4498   0004DA  B4D8               	btfsc	status,2,c
  4499   0004DC  EF72  F002         	goto	u3001
  4500   0004E0  EF74  F002         	goto	u3000
  4501   0004E4                     u3001:
  4502   0004E4  EF98  F002         	goto	l1311
  4503   0004E8                     u3000:
  4504   0004E8  0E01               	movlw	1
  4505   0004EA  6E0C               	movwf	___lwmod@counter^0,c
  4506   0004EC  EF7C  F002         	goto	l3611
  4507   0004F0                     l3609:
  4508   0004F0  90D8               	bcf	status,0,c
  4509   0004F2  360A               	rlcf	___lwmod@divisor^0,f,c
  4510   0004F4  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  4511   0004F6  2A0C               	incf	___lwmod@counter^0,f,c
  4512   0004F8                     l3611:
  4513   0004F8  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  4514   0004FA  EF81  F002         	goto	u3011
  4515   0004FE  EF83  F002         	goto	u3010
  4516   000502                     u3011:
  4517   000502  EF78  F002         	goto	l3609
  4518   000506                     u3010:
  4519   000506                     l3613:
  4520   000506  500A               	movf	___lwmod@divisor^0,w,c
  4521   000508  5C08               	subwf	___lwmod@dividend^0,w,c
  4522   00050A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4523   00050C  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  4524   00050E  A0D8               	btfss	status,0,c
  4525   000510  EF8C  F002         	goto	u3021
  4526   000514  EF8E  F002         	goto	u3020
  4527   000518                     u3021:
  4528   000518  EF92  F002         	goto	l3617
  4529   00051C                     u3020:
  4530   00051C  500A               	movf	___lwmod@divisor^0,w,c
  4531   00051E  5E08               	subwf	___lwmod@dividend^0,f,c
  4532   000520  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4533   000522  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  4534   000524                     l3617:
  4535   000524  90D8               	bcf	status,0,c
  4536   000526  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4537   000528  320A               	rrcf	___lwmod@divisor^0,f,c
  4538   00052A  2E0C               	decfsz	___lwmod@counter^0,f,c
  4539   00052C  EF83  F002         	goto	l3613
  4540   000530                     l1311:
  4541   000530  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4542   000534  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4543   000538  0012               	return		;funcret
  4544   00053A                     __end_of___lwmod:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function ___lwdiv *****************
  4548 ;; Defined at:
  4549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dividend        2    0[COMRAM] unsigned int 
  4552 ;;  divisor         2    2[COMRAM] unsigned int 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  quotient        2    4[COMRAM] unsigned int 
  4555 ;;  counter         1    6[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    0[COMRAM] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4565 ;;      Params:         4       0       0       0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0
  4568 ;;      Totals:         7       0       0       0       0       0       0
  4569 ;;Total ram usage:        7 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_login
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text6
  4579   0005A6                     __ptext6:
  4580                           	callstack 0
  4581   0005A6                     ___lwdiv:
  4582                           	callstack 29
  4583   0005A6  0E00               	movlw	0
  4584   0005A8  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4585   0005AA  0E00               	movlw	0
  4586   0005AC  6E05               	movwf	___lwdiv@quotient^0,c
  4587   0005AE  5003               	movf	___lwdiv@divisor^0,w,c
  4588   0005B0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4589   0005B2  B4D8               	btfsc	status,2,c
  4590   0005B4  EFDE  F002         	goto	u2971
  4591   0005B8  EFE0  F002         	goto	u2970
  4592   0005BC                     u2971:
  4593   0005BC  EF08  F003         	goto	l1301
  4594   0005C0                     u2970:
  4595   0005C0  0E01               	movlw	1
  4596   0005C2  6E07               	movwf	___lwdiv@counter^0,c
  4597   0005C4  EFE8  F002         	goto	l3591
  4598   0005C8                     l3589:
  4599   0005C8  90D8               	bcf	status,0,c
  4600   0005CA  3603               	rlcf	___lwdiv@divisor^0,f,c
  4601   0005CC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4602   0005CE  2A07               	incf	___lwdiv@counter^0,f,c
  4603   0005D0                     l3591:
  4604   0005D0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4605   0005D2  EFED  F002         	goto	u2981
  4606   0005D6  EFEF  F002         	goto	u2980
  4607   0005DA                     u2981:
  4608   0005DA  EFE4  F002         	goto	l3589
  4609   0005DE                     u2980:
  4610   0005DE                     l3593:
  4611   0005DE  90D8               	bcf	status,0,c
  4612   0005E0  3605               	rlcf	___lwdiv@quotient^0,f,c
  4613   0005E2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4614   0005E4  5003               	movf	___lwdiv@divisor^0,w,c
  4615   0005E6  5C01               	subwf	___lwdiv@dividend^0,w,c
  4616   0005E8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4617   0005EA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4618   0005EC  A0D8               	btfss	status,0,c
  4619   0005EE  EFFB  F002         	goto	u2991
  4620   0005F2  EFFD  F002         	goto	u2990
  4621   0005F6                     u2991:
  4622   0005F6  EF02  F003         	goto	l3601
  4623   0005FA                     u2990:
  4624   0005FA  5003               	movf	___lwdiv@divisor^0,w,c
  4625   0005FC  5E01               	subwf	___lwdiv@dividend^0,f,c
  4626   0005FE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4627   000600  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4628   000602  8005               	bsf	___lwdiv@quotient^0,0,c
  4629   000604                     l3601:
  4630   000604  90D8               	bcf	status,0,c
  4631   000606  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4632   000608  3203               	rrcf	___lwdiv@divisor^0,f,c
  4633   00060A  2E07               	decfsz	___lwdiv@counter^0,f,c
  4634   00060C  EFEF  F002         	goto	l3593
  4635   000610                     l1301:
  4636   000610  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4637   000614  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4638   000618  0012               	return		;funcret
  4639   00061A                     __end_of___lwdiv:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _init_config *****************
  4643 ;; Defined at:
  4644 ;;		line 17 in file "main.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4658 ;;      Params:         0       0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 5
  4665 ;; This function calls:
  4666 ;;		_init_adc
  4667 ;;		_init_clcd
  4668 ;;		_init_ds1307
  4669 ;;		_init_i2c
  4670 ;;		_init_matrix_keypad
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text7
  4677   0001B8                     __ptext7:
  4678                           	callstack 0
  4679   0001B8                     _init_config:
  4680                           	callstack 25
  4681   0001B8                     
  4682                           ;main.c: 18:     init_clcd();
  4683   0001B8  EC12  F004         	call	_init_clcd	;wreg free
  4684                           
  4685                           ;main.c: 19:     init_matrix_keypad();
  4686   0001BC  ECBD  F000         	call	_init_matrix_keypad	;wreg free
  4687   0001C0                     
  4688                           ;main.c: 20:     init_adc();
  4689   0001C0  EC02  F001         	call	_init_adc	;wreg free
  4690   0001C4                     
  4691                           ;main.c: 21:     init_i2c();
  4692   0001C4  ECD1  F000         	call	_init_i2c	;wreg free
  4693                           
  4694                           ;main.c: 22:     init_ds1307();
  4695   0001C8  ECC5  F001         	call	_init_ds1307	;wreg free
  4696   0001CC  0012               	return		;funcret
  4697   0001CE                     __end_of_init_config:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _init_matrix_keypad *****************
  4701 ;; Defined at:
  4702 ;;		line 4 in file "mkp.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4716 ;;      Params:         0       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used: 1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_init_config
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text8
  4730   00017A                     __ptext8:
  4731                           	callstack 0
  4732   00017A                     _init_matrix_keypad:
  4733                           	callstack 29
  4734   00017A                     
  4735                           ;mkp.c: 7:  ADCON1 = 0x0F;
  4736   00017A  0E0F               	movlw	15
  4737   00017C  6EC1               	movwf	193,c	;volatile
  4738                           
  4739                           ;mkp.c: 10:  TRISB = 0x1E;
  4740   00017E  0E1E               	movlw	30
  4741   000180  6E93               	movwf	147,c	;volatile
  4742   000182                     
  4743                           ;mkp.c: 13:  RBPU = 0;
  4744   000182  9EF1               	bcf	4081,7,c	;volatile
  4745   000184                     
  4746                           ;mkp.c: 15:  PORTB = PORTB | 0xE0;
  4747   000184  5081               	movf	129,w,c	;volatile
  4748   000186  09E0               	iorlw	224
  4749   000188  6E81               	movwf	129,c	;volatile
  4750   00018A  0012               	return		;funcret
  4751   00018C                     __end_of_init_matrix_keypad:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _init_i2c *****************
  4755 ;; Defined at:
  4756 ;;		line 6 in file "i2c.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4770 ;;      Params:         0       0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_init_config
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text9
  4784   0001A2                     __ptext9:
  4785                           	callstack 0
  4786   0001A2                     _init_i2c:
  4787                           	callstack 29
  4788   0001A2                     
  4789                           ;i2c.c: 9:  TRISC3 = 1;
  4790   0001A2  8694               	bsf	3988,3,c	;volatile
  4791                           
  4792                           ;i2c.c: 10:  TRISC4 = 1;
  4793   0001A4  8894               	bsf	3988,4,c	;volatile
  4794   0001A6                     
  4795                           ;i2c.c: 12:  SSPCON1 = 0x28;
  4796   0001A6  0E28               	movlw	40
  4797   0001A8  6EC6               	movwf	198,c	;volatile
  4798                           
  4799                           ;i2c.c: 14:  SSPADD = 0x31;
  4800   0001AA  0E31               	movlw	49
  4801   0001AC  6EC8               	movwf	200,c	;volatile
  4802   0001AE                     
  4803                           ;i2c.c: 16:  CKE = 0;
  4804   0001AE  9CC7               	bcf	4039,6,c	;volatile
  4805   0001B0                     
  4806                           ;i2c.c: 18:  SMP = 1;
  4807   0001B0  8EC7               	bsf	4039,7,c	;volatile
  4808   0001B2                     
  4809                           ;i2c.c: 20:  SSPIF = 0;
  4810   0001B2  969E               	bcf	3998,3,c	;volatile
  4811   0001B4                     
  4812                           ;i2c.c: 22:  BCLIF = 0;
  4813   0001B4  96A1               	bcf	4001,3,c	;volatile
  4814   0001B6  0012               	return		;funcret
  4815   0001B8                     __end_of_init_i2c:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _init_ds1307 *****************
  4819 ;; Defined at:
  4820 ;;		line 13 in file "ds1307.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  dummy           1    3[COMRAM] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4834 ;;      Params:         0       0       0       0       0       0       0
  4835 ;;      Locals:         1       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0
  4837 ;;      Totals:         1       0       0       0       0       0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 4
  4841 ;; This function calls:
  4842 ;;		_read_ds1307
  4843 ;;		_write_ds1307
  4844 ;; This function is called by:
  4845 ;;		_init_config
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text10
  4850   00038A                     __ptext10:
  4851                           	callstack 0
  4852   00038A                     _init_ds1307:
  4853                           	callstack 25
  4854   00038A                     
  4855                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  4856   00038A  0E00               	movlw	0
  4857   00038C  EC26  F001         	call	_read_ds1307
  4858   000390  6E04               	movwf	init_ds1307@dummy^0,c
  4859   000392                     
  4860                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  4861   000392  5004               	movf	init_ds1307@dummy^0,w,c
  4862   000394  0980               	iorlw	128
  4863   000396  6E02               	movwf	write_ds1307@data^0,c
  4864   000398  0E00               	movlw	0
  4865   00039A  ECF3  F000         	call	_write_ds1307
  4866   00039E                     
  4867                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  4868   00039E  0E02               	movlw	2
  4869   0003A0  EC26  F001         	call	_read_ds1307
  4870   0003A4  6E04               	movwf	init_ds1307@dummy^0,c
  4871                           
  4872                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  4873   0003A6  5004               	movf	init_ds1307@dummy^0,w,c
  4874   0003A8  0940               	iorlw	64
  4875   0003AA  6E02               	movwf	write_ds1307@data^0,c
  4876   0003AC  0E02               	movlw	2
  4877   0003AE  ECF3  F000         	call	_write_ds1307
  4878   0003B2                     
  4879                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  4880   0003B2  0E93               	movlw	147
  4881   0003B4  6E02               	movwf	write_ds1307@data^0,c
  4882   0003B6  0E07               	movlw	7
  4883   0003B8  ECF3  F000         	call	_write_ds1307
  4884   0003BC                     
  4885                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  4886   0003BC  0E00               	movlw	0
  4887   0003BE  EC26  F001         	call	_read_ds1307
  4888   0003C2  6E04               	movwf	init_ds1307@dummy^0,c
  4889                           
  4890                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  4891   0003C4  5004               	movf	init_ds1307@dummy^0,w,c
  4892   0003C6  0B7F               	andlw	127
  4893   0003C8  6E02               	movwf	write_ds1307@data^0,c
  4894   0003CA  0E00               	movlw	0
  4895   0003CC  ECF3  F000         	call	_write_ds1307
  4896   0003D0  0012               	return		;funcret
  4897   0003D2                     __end_of_init_ds1307:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function _write_ds1307 *****************
  4901 ;; Defined at:
  4902 ;;		line 46 in file "ds1307.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  address         1    wreg     unsigned char 
  4905 ;;  data            1    1[COMRAM] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  address         1    2[COMRAM] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4917 ;;      Params:         1       0       0       0       0       0       0
  4918 ;;      Locals:         1       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0
  4920 ;;      Totals:         2       0       0       0       0       0       0
  4921 ;;Total ram usage:        2 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 2
  4924 ;; This function calls:
  4925 ;;		_i2c_start
  4926 ;;		_i2c_stop
  4927 ;;		_i2c_write
  4928 ;; This function is called by:
  4929 ;;		_init_ds1307
  4930 ;;		_set_time
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text11
  4935   0001E6                     __ptext11:
  4936                           	callstack 0
  4937   0001E6                     _write_ds1307:
  4938                           	callstack 27
  4939                           
  4940                           ;incstack = 0
  4941                           ;write_ds1307@address stored from wreg
  4942   0001E6  6E03               	movwf	write_ds1307@address^0,c
  4943   0001E8                     
  4944                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  4945   0001E8  EC90  F000         	call	_i2c_start	;wreg free
  4946   0001EC                     
  4947                           ;ds1307.c: 49:  i2c_write(0xD0);
  4948   0001EC  0ED0               	movlw	208
  4949   0001EE  ECA0  F000         	call	_i2c_write
  4950   0001F2                     
  4951                           ;ds1307.c: 50:  i2c_write(address);
  4952   0001F2  5003               	movf	write_ds1307@address^0,w,c
  4953   0001F4  ECA0  F000         	call	_i2c_write
  4954   0001F8                     
  4955                           ;ds1307.c: 51:  i2c_write(data);
  4956   0001F8  5002               	movf	write_ds1307@data^0,w,c
  4957   0001FA  ECA0  F000         	call	_i2c_write
  4958   0001FE                     
  4959                           ;ds1307.c: 52:  i2c_stop();
  4960   0001FE  EC94  F000         	call	_i2c_stop	;wreg free
  4961   000202  0012               	return		;funcret
  4962   000204                     __end_of_write_ds1307:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _init_clcd *****************
  4966 ;; Defined at:
  4967 ;;		line 29 in file "clcd.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4981 ;;      Params:         0       0       0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0
  4983 ;;      Temps:          1       0       0       0       0       0       0
  4984 ;;      Totals:         1       0       0       0       0       0       0
  4985 ;;Total ram usage:        1 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 1
  4988 ;; This function calls:
  4989 ;;		_clcd_write
  4990 ;; This function is called by:
  4991 ;;		_init_config
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text12
  4996   000824                     __ptext12:
  4997                           	callstack 0
  4998   000824                     _init_clcd:
  4999                           	callstack 28
  5000   000824                     
  5001                           ;clcd.c: 32:  TRISD = 0x00;
  5002   000824  0E00               	movlw	0
  5003   000826  6E95               	movwf	149,c	;volatile
  5004   000828                     
  5005                           ;clcd.c: 34:  TRISC = TRISC & 0xF8;
  5006   000828  5094               	movf	148,w,c	;volatile
  5007   00082A  0BF8               	andlw	248
  5008   00082C  6E94               	movwf	148,c	;volatile
  5009   00082E                     
  5010                           ;clcd.c: 36:  RC0 = 0;
  5011   00082E  9082               	bcf	3970,0,c	;volatile
  5012   000830                     
  5013                           ;clcd.c: 39:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5014   000830  0EC3               	movlw	195
  5015   000832  6E03               	movwf	??_init_clcd^0,c
  5016   000834  0ECD               	movlw	205
  5017   000836                     u4557:
  5018   000836  2EE8               	decfsz	wreg,f,c
  5019   000838  D7FE               	bra	u4557
  5020   00083A  2E03               	decfsz	??_init_clcd^0,f,c
  5021   00083C  D7FC               	bra	u4557
  5022   00083E  0000               	nop	
  5023   000840                     
  5024                           ;clcd.c: 42:     clcd_write(0x33, 0 );
  5025   000840  0E00               	movlw	0
  5026   000842  6E01               	movwf	clcd_write@control_bit^0,c
  5027   000844  0E33               	movlw	51
  5028   000846  EC65  F001         	call	_clcd_write
  5029   00084A                     
  5030                           ;clcd.c: 43:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5031   00084A  0E1B               	movlw	27
  5032   00084C  6E03               	movwf	??_init_clcd^0,c
  5033   00084E  0E9E               	movlw	158
  5034   000850                     u4567:
  5035   000850  2EE8               	decfsz	wreg,f,c
  5036   000852  D7FE               	bra	u4567
  5037   000854  2E03               	decfsz	??_init_clcd^0,f,c
  5038   000856  D7FC               	bra	u4567
  5039   000858  D000               	nop2	
  5040   00085A                     
  5041                           ;clcd.c: 44:     clcd_write(0x33, 0 );
  5042   00085A  0E00               	movlw	0
  5043   00085C  6E01               	movwf	clcd_write@control_bit^0,c
  5044   00085E  0E33               	movlw	51
  5045   000860  EC65  F001         	call	_clcd_write
  5046   000864                     
  5047                           ;clcd.c: 45:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5048   000864  0EA6               	movlw	166
  5049   000866                     u4577:
  5050   000866  2EE8               	decfsz	wreg,f,c
  5051   000868  D7FE               	bra	u4577
  5052   00086A  D000               	nop2	
  5053   00086C                     
  5054                           ;clcd.c: 46:     clcd_write(0x33, 0 );
  5055   00086C  0E00               	movlw	0
  5056   00086E  6E01               	movwf	clcd_write@control_bit^0,c
  5057   000870  0E33               	movlw	51
  5058   000872  EC65  F001         	call	_clcd_write
  5059   000876                     
  5060                           ;clcd.c: 47:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5061   000876  D000               	nop2		;2 cycle nop
  5062   000878  D000               	nop2		;2 cycle nop
  5063   00087A  0000               	nop	
  5064   00087C                     
  5065                           ;clcd.c: 49:     clcd_write(0x02, 0);
  5066   00087C  0E00               	movlw	0
  5067   00087E  6E01               	movwf	clcd_write@control_bit^0,c
  5068   000880  0E02               	movlw	2
  5069   000882  EC65  F001         	call	_clcd_write
  5070   000886                     
  5071                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5072   000886  0EA6               	movlw	166
  5073   000888                     u4587:
  5074   000888  2EE8               	decfsz	wreg,f,c
  5075   00088A  D7FE               	bra	u4587
  5076   00088C  D000               	nop2	
  5077   00088E                     
  5078                           ;clcd.c: 51:     clcd_write(0x38, 0);
  5079   00088E  0E00               	movlw	0
  5080   000890  6E01               	movwf	clcd_write@control_bit^0,c
  5081   000892  0E38               	movlw	56
  5082   000894  EC65  F001         	call	_clcd_write
  5083   000898                     
  5084                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5085   000898  0EA6               	movlw	166
  5086   00089A                     u4597:
  5087   00089A  2EE8               	decfsz	wreg,f,c
  5088   00089C  D7FE               	bra	u4597
  5089   00089E  D000               	nop2	
  5090   0008A0                     
  5091                           ;clcd.c: 53:     clcd_write(0x01, 0);
  5092   0008A0  0E00               	movlw	0
  5093   0008A2  6E01               	movwf	clcd_write@control_bit^0,c
  5094   0008A4  0E01               	movlw	1
  5095   0008A6  EC65  F001         	call	_clcd_write
  5096   0008AA                     
  5097                           ;clcd.c: 54:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5098   0008AA  0E04               	movlw	4
  5099   0008AC  6E03               	movwf	??_init_clcd^0,c
  5100   0008AE  0E3E               	movlw	62
  5101   0008B0                     u4607:
  5102   0008B0  2EE8               	decfsz	wreg,f,c
  5103   0008B2  D7FE               	bra	u4607
  5104   0008B4  2E03               	decfsz	??_init_clcd^0,f,c
  5105   0008B6  D7FC               	bra	u4607
  5106   0008B8                     
  5107                           ;clcd.c: 55:     clcd_write(0x0C, 0);
  5108   0008B8  0E00               	movlw	0
  5109   0008BA  6E01               	movwf	clcd_write@control_bit^0,c
  5110   0008BC  0E0C               	movlw	12
  5111   0008BE  EC65  F001         	call	_clcd_write
  5112   0008C2                     
  5113                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5114   0008C2  0EA6               	movlw	166
  5115   0008C4                     u4617:
  5116   0008C4  2EE8               	decfsz	wreg,f,c
  5117   0008C6  D7FE               	bra	u4617
  5118   0008C8  D000               	nop2	
  5119   0008CA  0012               	return		;funcret
  5120   0008CC                     __end_of_init_clcd:
  5121                           	callstack 0
  5122                           
  5123 ;; *************** function _init_adc *****************
  5124 ;; Defined at:
  5125 ;;		line 4 in file "adc.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5139 ;;      Params:         0       0       0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0
  5142 ;;      Totals:         0       0       0       0       0       0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used: 1
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_init_config
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text13
  5153   000204                     __ptext13:
  5154                           	callstack 0
  5155   000204                     _init_adc:
  5156                           	callstack 29
  5157   000204                     
  5158                           ;adc.c: 7:  ADFM = 1;
  5159   000204  8EC0               	bsf	4032,7,c	;volatile
  5160                           
  5161                           ;adc.c: 13:  ACQT2 = 0;
  5162   000206  9AC0               	bcf	4032,5,c	;volatile
  5163                           
  5164                           ;adc.c: 14:  ACQT1 = 1;
  5165   000208  88C0               	bsf	4032,4,c	;volatile
  5166                           
  5167                           ;adc.c: 15:  ACQT0 = 0;
  5168   00020A  96C0               	bcf	4032,3,c	;volatile
  5169                           
  5170                           ;adc.c: 21:  ADCS0 = 0;
  5171   00020C  90C0               	bcf	4032,0,c	;volatile
  5172                           
  5173                           ;adc.c: 22:  ADCS1 = 1;
  5174   00020E  82C0               	bsf	4032,1,c	;volatile
  5175                           
  5176                           ;adc.c: 23:  ADCS2 = 0;
  5177   000210  94C0               	bcf	4032,2,c	;volatile
  5178                           
  5179                           ;adc.c: 26:  GODONE = 0;
  5180   000212  92C2               	bcf	4034,1,c	;volatile
  5181                           
  5182                           ;adc.c: 31:  VCFG1 = 0;
  5183   000214  9AC1               	bcf	4033,5,c	;volatile
  5184                           
  5185                           ;adc.c: 33:  VCFG0 = 0;
  5186   000216  98C1               	bcf	4033,4,c	;volatile
  5187   000218                     
  5188                           ;adc.c: 36:  ADRESH = 0;
  5189   000218  0E00               	movlw	0
  5190   00021A  6EC4               	movwf	196,c	;volatile
  5191                           
  5192                           ;adc.c: 37:  ADRESL = 0;
  5193   00021C  0E00               	movlw	0
  5194   00021E  6EC3               	movwf	195,c	;volatile
  5195   000220                     
  5196                           ;adc.c: 40:  ADON = 1;
  5197   000220  80C2               	bsf	4034,0,c	;volatile
  5198   000222  0012               	return		;funcret
  5199   000224                     __end_of_init_adc:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _download_log *****************
  5203 ;; Defined at:
  5204 ;;		line 30 in file "download_log.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  j               2   11[COMRAM] int 
  5209 ;;  i               2    9[COMRAM] int 
  5210 ;;  onetime         2    0        int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5220 ;;      Params:         0       0       0       0       0       0       0
  5221 ;;      Locals:         4       0       0       0       0       0       0
  5222 ;;      Temps:          4       0       0       0       0       0       0
  5223 ;;      Totals:         8       0       0       0       0       0       0
  5224 ;;Total ram usage:        8 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 4
  5227 ;; This function calls:
  5228 ;;		_clcd_print
  5229 ;;		_clcd_write
  5230 ;;		_init_uart
  5231 ;;		_puts
  5232 ;;		_read_external_eeprom
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text14
  5239   0010D2                     __ptext14:
  5240                           	callstack 0
  5241   0010D2                     _download_log:
  5242                           	callstack 26
  5243   0010D2                     
  5244                           ;download_log.c: 31:     init_uart();
  5245   0010D2  EC3B  F001         	call	_init_uart	;wreg free
  5246   0010D6                     
  5247                           ;download_log.c: 32:     if (clear_flag == 0 && event_count > 0) {
  5248   0010D6  0100               	movlb	0	; () banked
  5249   0010D8  5190               	movf	_clear_flag& (0+255),w,b
  5250   0010DA  1191               	iorwf	(_clear_flag+1)& (0+255),w,b
  5251   0010DC  A4D8               	btfss	status,2,c
  5252   0010DE  EF73  F008         	goto	u3801
  5253   0010E2  EF75  F008         	goto	u3800
  5254   0010E6                     u3801:
  5255   0010E6  EF54  F009         	goto	l4137
  5256   0010EA                     u3800:
  5257   0010EA                     
  5258                           ; BSR set to: 0
  5259   0010EA  BE45               	btfsc	(_event_count+1)^0,7,c
  5260   0010EC  EF80  F008         	goto	u3811
  5261   0010F0  5045               	movf	(_event_count+1)^0,w,c
  5262   0010F2  E108               	bnz	u3810
  5263   0010F4  0444               	decf	_event_count^0,w,c
  5264   0010F6  A0D8               	btfss	status,0,c
  5265   0010F8  EF80  F008         	goto	u3811
  5266   0010FC  EF82  F008         	goto	u3810
  5267   001100                     u3811:
  5268   001100  EF54  F009         	goto	l4137
  5269   001104                     u3810:
  5270   001104                     
  5271                           ; BSR set to: 0
  5272                           ;download_log.c: 33:         clcd_print(" downloading...", (0x80 + (0)));
  5273   001104  0E29               	movlw	low STR_20
  5274   001106  6E03               	movwf	clcd_print@data^0,c
  5275   001108  0E2F               	movlw	high STR_20
  5276   00110A  6E04               	movwf	(clcd_print@data+1)^0,c
  5277   00110C  0E80               	movlw	128
  5278   00110E  6E05               	movwf	clcd_print@addr^0,c
  5279   001110  EC9D  F002         	call	_clcd_print	;wreg free
  5280   001114                     
  5281                           ;download_log.c: 34:         _delay((unsigned long)((500)*(20000000/4000.0)));
  5282   001114  0E0D               	movlw	13
  5283   001116  6E07               	movwf	(??_download_log+1)^0,c
  5284   001118  0EAF               	movlw	175
  5285   00111A  6E06               	movwf	??_download_log^0,c
  5286   00111C  0EB6               	movlw	182
  5287   00111E                     u4627:
  5288   00111E  2EE8               	decfsz	wreg,f,c
  5289   001120  D7FE               	bra	u4627
  5290   001122  2E06               	decfsz	??_download_log^0,f,c
  5291   001124  D7FC               	bra	u4627
  5292   001126  2E07               	decfsz	(??_download_log+1)^0,f,c
  5293   001128  D7FA               	bra	u4627
  5294   00112A  D000               	nop2	
  5295   00112C                     
  5296                           ;download_log.c: 35:         puts("     DOWNLOAD LOG     \n \r");
  5297   00112C  0EB5               	movlw	low STR_21
  5298   00112E  6E02               	movwf	puts@s^0,c
  5299   001130  0E2E               	movlw	high STR_21
  5300   001132  6E03               	movwf	(puts@s+1)^0,c
  5301   001134  EC3C  F002         	call	_puts	;wreg free
  5302   001138                     
  5303                           ;download_log.c: 36:         puts("#  TIME    EV SP\n \r");
  5304   001138  0ECF               	movlw	low STR_22
  5305   00113A  6E02               	movwf	puts@s^0,c
  5306   00113C  0E2E               	movlw	high STR_22
  5307   00113E  6E03               	movwf	(puts@s+1)^0,c
  5308   001140  EC3C  F002         	call	_puts	;wreg free
  5309   001144                     
  5310                           ;download_log.c: 39:             for (int i = 0; i < event_count; i++) {
  5311   001144  0E00               	movlw	0
  5312   001146  6E0B               	movwf	(download_log@i+1)^0,c
  5313   001148  0E00               	movlw	0
  5314   00114A  6E0A               	movwf	download_log@i^0,c
  5315   00114C  EF2B  F009         	goto	l4123
  5316   001150                     l4099:
  5317                           
  5318                           ;download_log.c: 40:                 for (int j = 0; j < 14; j++) {
  5319   001150  0E00               	movlw	0
  5320   001152  6E0D               	movwf	(download_log@j+1)^0,c
  5321   001154  0E00               	movlw	0
  5322   001156  6E0C               	movwf	download_log@j^0,c
  5323   001158                     l4105:
  5324                           
  5325                           ;download_log.c: 41:                     if (j == 8 || j == 11) {
  5326   001158  0E08               	movlw	8
  5327   00115A  180C               	xorwf	download_log@j^0,w,c
  5328   00115C  100D               	iorwf	(download_log@j+1)^0,w,c
  5329   00115E  B4D8               	btfsc	status,2,c
  5330   001160  EFB4  F008         	goto	u3821
  5331   001164  EFB6  F008         	goto	u3820
  5332   001168                     u3821:
  5333   001168  EFC0  F008         	goto	l4109
  5334   00116C                     u3820:
  5335   00116C  0E0B               	movlw	11
  5336   00116E  180C               	xorwf	download_log@j^0,w,c
  5337   001170  100D               	iorwf	(download_log@j+1)^0,w,c
  5338   001172  A4D8               	btfss	status,2,c
  5339   001174  EFBE  F008         	goto	u3831
  5340   001178  EFC0  F008         	goto	u3830
  5341   00117C                     u3831:
  5342   00117C  EFDD  F008         	goto	l4111
  5343   001180                     u3830:
  5344   001180                     l4109:
  5345                           
  5346                           ;download_log.c: 42:                         array1[i][j] = ' ';
  5347   001180  C00A  F006         	movff	download_log@i,??_download_log
  5348   001184  C00B  F007         	movff	download_log@i+1,??_download_log+1
  5349   001188  3A06               	swapf	??_download_log^0,f,c
  5350   00118A  3A07               	swapf	(??_download_log+1)^0,f,c
  5351   00118C  0EF0               	movlw	240
  5352   00118E  1607               	andwf	(??_download_log+1)^0,f,c
  5353   001190  5006               	movf	??_download_log^0,w,c
  5354   001192  0B0F               	andlw	15
  5355   001194  1207               	iorwf	(??_download_log+1)^0,f,c
  5356   001196  0EF0               	movlw	240
  5357   001198  1606               	andwf	??_download_log^0,f,c
  5358   00119A  0E00               	movlw	low _array1
  5359   00119C  2406               	addwf	??_download_log^0,w,c
  5360   00119E  6E08               	movwf	(??_download_log+2)^0,c
  5361   0011A0  0E01               	movlw	high _array1
  5362   0011A2  2007               	addwfc	(??_download_log+1)^0,w,c
  5363   0011A4  6E09               	movwf	(??_download_log+3)^0,c
  5364   0011A6  500C               	movf	download_log@j^0,w,c
  5365   0011A8  2408               	addwf	(??_download_log+2)^0,w,c
  5366   0011AA  6ED9               	movwf	fsr2l,c
  5367   0011AC  500D               	movf	(download_log@j+1)^0,w,c
  5368   0011AE  2009               	addwfc	(??_download_log+3)^0,w,c
  5369   0011B0  6EDA               	movwf	fsr2h,c
  5370   0011B2  0E20               	movlw	32
  5371   0011B4  6EDF               	movwf	indf2,c
  5372                           
  5373                           ;download_log.c: 43:                     } else {
  5374   0011B6  EFFE  F008         	goto	l4115
  5375   0011BA                     l4111:
  5376                           
  5377                           ;download_log.c: 44:                         array1[i][j] = read_external_eeprom(address
      +                          ++);
  5378   0011BA  C00A  F006         	movff	download_log@i,??_download_log
  5379   0011BE  C00B  F007         	movff	download_log@i+1,??_download_log+1
  5380   0011C2  3A06               	swapf	??_download_log^0,f,c
  5381   0011C4  3A07               	swapf	(??_download_log+1)^0,f,c
  5382   0011C6  0EF0               	movlw	240
  5383   0011C8  1607               	andwf	(??_download_log+1)^0,f,c
  5384   0011CA  5006               	movf	??_download_log^0,w,c
  5385   0011CC  0B0F               	andlw	15
  5386   0011CE  1207               	iorwf	(??_download_log+1)^0,f,c
  5387   0011D0  0EF0               	movlw	240
  5388   0011D2  1606               	andwf	??_download_log^0,f,c
  5389   0011D4  0E00               	movlw	low _array1
  5390   0011D6  2406               	addwf	??_download_log^0,w,c
  5391   0011D8  6E08               	movwf	(??_download_log+2)^0,c
  5392   0011DA  0E01               	movlw	high _array1
  5393   0011DC  2007               	addwfc	(??_download_log+1)^0,w,c
  5394   0011DE  6E09               	movwf	(??_download_log+3)^0,c
  5395   0011E0  500C               	movf	download_log@j^0,w,c
  5396   0011E2  2408               	addwf	(??_download_log+2)^0,w,c
  5397   0011E4  6ED9               	movwf	fsr2l,c
  5398   0011E6  500D               	movf	(download_log@j+1)^0,w,c
  5399   0011E8  2009               	addwfc	(??_download_log+3)^0,w,c
  5400   0011EA  6EDA               	movwf	fsr2h,c
  5401   0011EC  0100               	movlb	0	; () banked
  5402   0011EE  517C               	movf	_address& (0+255),w,b
  5403   0011F0  EC50  F001         	call	_read_external_eeprom
  5404   0011F4  6EDF               	movwf	indf2,c
  5405   0011F6  0100               	movlb	0	; () banked
  5406   0011F8  4B7C               	infsnz	_address& (0+255),f,b
  5407   0011FA  2B7D               	incf	(_address+1)& (0+255),f,b
  5408   0011FC                     l4115:
  5409                           
  5410                           ;download_log.c: 46:                 }
  5411   0011FC  4A0C               	infsnz	download_log@j^0,f,c
  5412   0011FE  2A0D               	incf	(download_log@j+1)^0,f,c
  5413   001200  BE0D               	btfsc	(download_log@j+1)^0,7,c
  5414   001202  EF0C  F009         	goto	u3841
  5415   001206  500D               	movf	(download_log@j+1)^0,w,c
  5416   001208  E109               	bnz	u3840
  5417   00120A  0E0E               	movlw	14
  5418   00120C  5C0C               	subwf	download_log@j^0,w,c
  5419   00120E  A0D8               	btfss	status,0,c
  5420   001210  EF0C  F009         	goto	u3841
  5421   001214  EF0E  F009         	goto	u3840
  5422   001218                     u3841:
  5423   001218  EFAC  F008         	goto	l4105
  5424   00121C                     u3840:
  5425   00121C                     
  5426                           ;download_log.c: 47:                 puts(array1[i]);
  5427   00121C  C00A  F006         	movff	download_log@i,??_download_log
  5428   001220  C00B  F007         	movff	download_log@i+1,??_download_log+1
  5429   001224  3A06               	swapf	??_download_log^0,f,c
  5430   001226  3A07               	swapf	(??_download_log+1)^0,f,c
  5431   001228  0EF0               	movlw	240
  5432   00122A  1607               	andwf	(??_download_log+1)^0,f,c
  5433   00122C  5006               	movf	??_download_log^0,w,c
  5434   00122E  0B0F               	andlw	15
  5435   001230  1207               	iorwf	(??_download_log+1)^0,f,c
  5436   001232  0EF0               	movlw	240
  5437   001234  1606               	andwf	??_download_log^0,f,c
  5438   001236  0E00               	movlw	low _array1
  5439   001238  2406               	addwf	??_download_log^0,w,c
  5440   00123A  6E02               	movwf	puts@s^0,c
  5441   00123C  0E01               	movlw	high _array1
  5442   00123E  2007               	addwfc	(??_download_log+1)^0,w,c
  5443   001240  6E03               	movwf	(puts@s+1)^0,c
  5444   001242  EC3C  F002         	call	_puts	;wreg free
  5445                           
  5446                           ;download_log.c: 48:                 puts("\n\r");
  5447   001246  0EFC               	movlw	low STR_23
  5448   001248  6E02               	movwf	puts@s^0,c
  5449   00124A  0E2F               	movlw	high STR_23
  5450   00124C  6E03               	movwf	(puts@s+1)^0,c
  5451   00124E  EC3C  F002         	call	_puts	;wreg free
  5452   001252                     
  5453                           ;download_log.c: 49:             }
  5454   001252  4A0A               	infsnz	download_log@i^0,f,c
  5455   001254  2A0B               	incf	(download_log@i+1)^0,f,c
  5456   001256                     l4123:
  5457   001256  5044               	movf	_event_count^0,w,c
  5458   001258  5C0A               	subwf	download_log@i^0,w,c
  5459   00125A  500B               	movf	(download_log@i+1)^0,w,c
  5460   00125C  0A80               	xorlw	128
  5461   00125E  6E06               	movwf	??_download_log^0,c
  5462   001260  5045               	movf	(_event_count+1)^0,w,c
  5463   001262  0A80               	xorlw	128
  5464   001264  5806               	subwfb	??_download_log^0,w,c
  5465   001266  A0D8               	btfss	status,0,c
  5466   001268  EF38  F009         	goto	u3851
  5467   00126C  EF3A  F009         	goto	u3850
  5468   001270                     u3851:
  5469   001270  EFA8  F008         	goto	l4099
  5470   001274                     u3850:
  5471   001274                     
  5472                           ;download_log.c: 52:         if (address == 0x78) {
  5473   001274  0E78               	movlw	120
  5474   001276  0100               	movlb	0	; () banked
  5475   001278  197C               	xorwf	_address& (0+255),w,b
  5476   00127A  117D               	iorwf	(_address+1)& (0+255),w,b
  5477   00127C  A4D8               	btfss	status,2,c
  5478   00127E  EF43  F009         	goto	u3861
  5479   001282  EF45  F009         	goto	u3860
  5480   001286                     u3861:
  5481   001286  EF49  F009         	goto	l750
  5482   00128A                     u3860:
  5483   00128A                     
  5484                           ; BSR set to: 0
  5485                           ;download_log.c: 53:             address = 0x00;
  5486   00128A  0E00               	movlw	0
  5487   00128C  6F7D               	movwf	(_address+1)& (0+255),b
  5488   00128E  0E00               	movlw	0
  5489   001290  6F7C               	movwf	_address& (0+255),b
  5490   001292                     l750:
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;download_log.c: 55:         shift = 2;
  5494   001292  0E00               	movlw	0
  5495   001294  6E5B               	movwf	(_shift+1)^0,c
  5496   001296  0E02               	movlw	2
  5497   001298  6E5A               	movwf	_shift^0,c
  5498   00129A                     
  5499                           ; BSR set to: 0
  5500                           ;download_log.c: 56:         clcd_write(0x01, 0);
  5501   00129A  0E00               	movlw	0
  5502   00129C  6E01               	movwf	clcd_write@control_bit^0,c
  5503   00129E  0E01               	movlw	1
  5504   0012A0  EC65  F001         	call	_clcd_write
  5505   0012A4  EF7D  F009         	goto	l751
  5506   0012A8                     l4137:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;download_log.c: 60:         clcd_print("NO LOGS PRESENT", (0x80 + (0)));
  5510   0012A8  0E39               	movlw	low STR_24
  5511   0012AA  6E03               	movwf	clcd_print@data^0,c
  5512   0012AC  0E2F               	movlw	high STR_24
  5513   0012AE  6E04               	movwf	(clcd_print@data+1)^0,c
  5514   0012B0  0E80               	movlw	128
  5515   0012B2  6E05               	movwf	clcd_print@addr^0,c
  5516   0012B4  EC9D  F002         	call	_clcd_print	;wreg free
  5517   0012B8                     
  5518                           ;download_log.c: 61:         _delay((unsigned long)((500)*(20000000/4000.0)));
  5519   0012B8  0E0D               	movlw	13
  5520   0012BA  6E07               	movwf	(??_download_log+1)^0,c
  5521   0012BC  0EAF               	movlw	175
  5522   0012BE  6E06               	movwf	??_download_log^0,c
  5523   0012C0  0EB6               	movlw	182
  5524   0012C2                     u4637:
  5525   0012C2  2EE8               	decfsz	wreg,f,c
  5526   0012C4  D7FE               	bra	u4637
  5527   0012C6  2E06               	decfsz	??_download_log^0,f,c
  5528   0012C8  D7FC               	bra	u4637
  5529   0012CA  2E07               	decfsz	(??_download_log+1)^0,f,c
  5530   0012CC  D7FA               	bra	u4637
  5531   0012CE  D000               	nop2	
  5532   0012D0                     
  5533                           ;download_log.c: 62:         shift = 2;
  5534   0012D0  0E00               	movlw	0
  5535   0012D2  6E5B               	movwf	(_shift+1)^0,c
  5536   0012D4  0E02               	movlw	2
  5537   0012D6  6E5A               	movwf	_shift^0,c
  5538   0012D8                     
  5539                           ;download_log.c: 63:         puts("NO LOGS PRESENT\n \r");
  5540   0012D8  0EE3               	movlw	low STR_25
  5541   0012DA  6E02               	movwf	puts@s^0,c
  5542   0012DC  0E2E               	movlw	high STR_25
  5543   0012DE  6E03               	movwf	(puts@s+1)^0,c
  5544   0012E0  EC3C  F002         	call	_puts	;wreg free
  5545   0012E4                     
  5546                           ;download_log.c: 64:         puts("\n\r");
  5547   0012E4  0EFC               	movlw	low STR_23
  5548   0012E6  6E02               	movwf	puts@s^0,c
  5549   0012E8  0E2F               	movlw	high STR_23
  5550   0012EA  6E03               	movwf	(puts@s+1)^0,c
  5551   0012EC  EC3C  F002         	call	_puts	;wreg free
  5552   0012F0                     
  5553                           ;download_log.c: 65:         clcd_write(0x01, 0);
  5554   0012F0  0E00               	movlw	0
  5555   0012F2  6E01               	movwf	clcd_write@control_bit^0,c
  5556   0012F4  0E01               	movlw	1
  5557   0012F6  EC65  F001         	call	_clcd_write
  5558   0012FA                     l751:
  5559   0012FA  0012               	return		;funcret
  5560   0012FC                     __end_of_download_log:
  5561                           	callstack 0
  5562                           
  5563 ;; *************** function _read_external_eeprom *****************
  5564 ;; Defined at:
  5565 ;;		line 32 in file "ext_eeprom.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  address1        1    wreg     unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  address1        1    1[COMRAM] unsigned char 
  5570 ;;  data            1    2[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      unsigned char 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5580 ;;      Params:         0       0       0       0       0       0       0
  5581 ;;      Locals:         2       0       0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0
  5583 ;;      Totals:         2       0       0       0       0       0       0
  5584 ;;Total ram usage:        2 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 3
  5587 ;; This function calls:
  5588 ;;		_i2c_read
  5589 ;;		_i2c_rep_start
  5590 ;;		_i2c_start
  5591 ;;		_i2c_stop
  5592 ;;		_i2c_write
  5593 ;; This function is called by:
  5594 ;;		_login
  5595 ;;		_view_log
  5596 ;;		_download_log
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text15
  5601   0002A0                     __ptext15:
  5602                           	callstack 0
  5603   0002A0                     _read_external_eeprom:
  5604                           	callstack 26
  5605                           
  5606                           ;incstack = 0
  5607                           ;read_external_eeprom@address1 stored from wreg
  5608   0002A0  6E02               	movwf	read_external_eeprom@address1^0,c
  5609   0002A2                     
  5610                           ;ext_eeprom.c: 32: unsigned char read_external_eeprom(unsigned char address1);ext_eeprom
      +                          .c: 33: {;ext_eeprom.c: 34:  unsigned char data;;ext_eeprom.c: 36:  i2c_start();
  5611   0002A2  EC90  F000         	call	_i2c_start	;wreg free
  5612   0002A6                     
  5613                           ;ext_eeprom.c: 37:  i2c_write(0xA0);
  5614   0002A6  0EA0               	movlw	160
  5615   0002A8  ECA0  F000         	call	_i2c_write
  5616   0002AC                     
  5617                           ;ext_eeprom.c: 38:  i2c_write(address1);
  5618   0002AC  5002               	movf	read_external_eeprom@address1^0,w,c
  5619   0002AE  ECA0  F000         	call	_i2c_write
  5620   0002B2                     
  5621                           ;ext_eeprom.c: 39:  i2c_rep_start();
  5622   0002B2  EC9C  F000         	call	_i2c_rep_start	;wreg free
  5623   0002B6                     
  5624                           ;ext_eeprom.c: 40:  i2c_write(0xA1);
  5625   0002B6  0EA1               	movlw	161
  5626   0002B8  ECA0  F000         	call	_i2c_write
  5627                           
  5628                           ;ext_eeprom.c: 41:  data = i2c_read();
  5629   0002BC  ECA6  F000         	call	_i2c_read	;wreg free
  5630   0002C0  6E03               	movwf	read_external_eeprom@data^0,c
  5631   0002C2                     
  5632                           ;ext_eeprom.c: 42:  i2c_stop();
  5633   0002C2  EC94  F000         	call	_i2c_stop	;wreg free
  5634                           
  5635                           ;ext_eeprom.c: 44:  return data;
  5636   0002C6  5003               	movf	read_external_eeprom@data^0,w,c
  5637   0002C8  0012               	return		;funcret
  5638   0002CA                     __end_of_read_external_eeprom:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function _puts *****************
  5642 ;; Defined at:
  5643 ;;		line 79 in file "u_art.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5646 ;;		 -> STR_26(3), STR_25(19), STR_23(3), array1(160), 
  5647 ;;		 -> STR_22(20), STR_21(26), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2    1[COMRAM] int 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5659 ;;      Params:         2       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0
  5662 ;;      Totals:         2       0       0       0       0       0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 1
  5666 ;; This function calls:
  5667 ;;		_putch
  5668 ;; This function is called by:
  5669 ;;		_download_log
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text16
  5674   000478                     __ptext16:
  5675                           	callstack 0
  5676   000478                     _puts:
  5677                           	callstack 28
  5678   000478                     
  5679                           ;u_art.c: 79: int puts(const char *s);u_art.c: 80: {;u_art.c: 81:  while(*s)
  5680   000478  EF52  F002         	goto	l3399
  5681   00047C                     l3395:
  5682                           
  5683                           ;u_art.c: 82:  {;u_art.c: 83:   putch(*s++);
  5684   00047C  C002  FFF6         	movff	puts@s,tblptrl
  5685   000480  C003  FFF7         	movff	puts@s+1,tblptrh
  5686   000484  6AF8               	clrf	tblptru,c
  5687   000486  0E05               	movlw	(high __ramtop+-1)
  5688   000488  64F7               	cpfsgt	tblptrh,c
  5689   00048A  D003               	bra	u2647
  5690   00048C  0008               	tblrd		*
  5691   00048E  50F5               	movf	tablat,w,c
  5692   000490  D005               	bra	u2640
  5693   000492                     u2647:
  5694   000492  CFF6 FFE9          	movff	tblptrl,fsr0l
  5695   000496  CFF7 FFEA          	movff	tblptrh,fsr0h
  5696   00049A  50EF               	movf	indf0,w,c
  5697   00049C                     u2640:
  5698   00049C  ECC6  F000         	call	_putch
  5699   0004A0  4A02               	infsnz	puts@s^0,f,c
  5700   0004A2  2A03               	incf	(puts@s+1)^0,f,c
  5701   0004A4                     l3399:
  5702                           
  5703                           ;u_art.c: 81:  while(*s)
  5704   0004A4  C002  FFF6         	movff	puts@s,tblptrl
  5705   0004A8  C003  FFF7         	movff	puts@s+1,tblptrh
  5706   0004AC  6AF8               	clrf	tblptru,c
  5707   0004AE  0E05               	movlw	(high __ramtop+-1)
  5708   0004B0  64F7               	cpfsgt	tblptrh,c
  5709   0004B2  D003               	bra	u2657
  5710   0004B4  0008               	tblrd		*
  5711   0004B6  50F5               	movf	tablat,w,c
  5712   0004B8  D005               	bra	u2650
  5713   0004BA                     u2657:
  5714   0004BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5715   0004BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5716   0004C2  50EF               	movf	indf0,w,c
  5717   0004C4                     u2650:
  5718   0004C4  0900               	iorlw	0
  5719   0004C6  A4D8               	btfss	status,2,c
  5720   0004C8  EF68  F002         	goto	u2661
  5721   0004CC  EF6A  F002         	goto	u2660
  5722   0004D0                     u2661:
  5723   0004D0  EF3E  F002         	goto	l3395
  5724   0004D4                     u2660:
  5725   0004D4  0012               	return		;funcret
  5726   0004D6                     __end_of_puts:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function _putch *****************
  5730 ;; Defined at:
  5731 ;;		line 68 in file "u_art.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  byte            1    wreg     unsigned char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  byte            1    0[COMRAM] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5745 ;;      Params:         0       0       0       0       0       0       0
  5746 ;;      Locals:         1       0       0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0
  5748 ;;      Totals:         1       0       0       0       0       0       0
  5749 ;;Total ram usage:        1 bytes
  5750 ;; Hardware stack levels used: 1
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_puts
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text17
  5759   00018C                     __ptext17:
  5760                           	callstack 0
  5761   00018C                     _putch:
  5762                           	callstack 28
  5763                           
  5764                           ;incstack = 0
  5765                           ;putch@byte stored from wreg
  5766   00018C  6E01               	movwf	putch@byte^0,c
  5767   00018E                     l798:
  5768                           
  5769                           ;u_art.c: 72:  while(!TXIF)
  5770   00018E  A89E               	btfss	3998,4,c	;volatile
  5771   000190  EFCC  F000         	goto	u2401
  5772   000194  EFCE  F000         	goto	u2400
  5773   000198                     u2401:
  5774   000198  EFC7  F000         	goto	l798
  5775   00019C                     u2400:
  5776   00019C                     
  5777                           ;u_art.c: 76:  TXREG = byte;
  5778   00019C  C001  FFAD         	movff	putch@byte,4013	;volatile
  5779   0001A0  0012               	return		;funcret
  5780   0001A2                     __end_of_putch:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _init_uart *****************
  5784 ;; Defined at:
  5785 ;;		line 13 in file "u_art.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5799 ;;      Params:         0       0       0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_download_log
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text18
  5813   000276                     __ptext18:
  5814                           	callstack 0
  5815   000276                     _init_uart:
  5816                           	callstack 29
  5817   000276                     
  5818                           ;u_art.c: 16:  TRISC7 = 1;
  5819   000276  8E94               	bsf	3988,7,c	;volatile
  5820                           
  5821                           ;u_art.c: 17:  TRISC6 = 0;
  5822   000278  9C94               	bcf	3988,6,c	;volatile
  5823                           
  5824                           ;u_art.c: 21:  TX9 = 0;
  5825   00027A  9CAC               	bcf	4012,6,c	;volatile
  5826                           
  5827                           ;u_art.c: 23:  TXEN = 1;
  5828   00027C  8AAC               	bsf	4012,5,c	;volatile
  5829                           
  5830                           ;u_art.c: 26:  SYNC = 0;
  5831   00027E  98AC               	bcf	4012,4,c	;volatile
  5832                           
  5833                           ;u_art.c: 28:  SENDB = 0;
  5834   000280  96AC               	bcf	4012,3,c	;volatile
  5835                           
  5836                           ;u_art.c: 31:  BRGH = 1;
  5837   000282  84AC               	bsf	4012,2,c	;volatile
  5838                           
  5839                           ;u_art.c: 35:  SPEN = 1;
  5840   000284  8EAB               	bsf	4011,7,c	;volatile
  5841                           
  5842                           ;u_art.c: 37:  RX9 = 0;
  5843   000286  9CAB               	bcf	4011,6,c	;volatile
  5844                           
  5845                           ;u_art.c: 39:  CREN = 1;
  5846   000288  88AB               	bsf	4011,4,c	;volatile
  5847                           
  5848                           ;u_art.c: 43:  ABDOVF = 0;
  5849   00028A  9EB8               	bcf	4024,7,c	;volatile
  5850                           
  5851                           ;u_art.c: 45:  BRG16 = 0;
  5852   00028C  96B8               	bcf	4024,3,c	;volatile
  5853                           
  5854                           ;u_art.c: 47:  WUE = 0;
  5855   00028E  92B8               	bcf	4024,1,c	;volatile
  5856                           
  5857                           ;u_art.c: 49:  ABDEN = 0;
  5858   000290  90B8               	bcf	4024,0,c	;volatile
  5859   000292                     
  5860                           ;u_art.c: 53:  SPBRG = 129;
  5861   000292  0E81               	movlw	129
  5862   000294  6EAF               	movwf	175,c	;volatile
  5863   000296                     
  5864                           ;u_art.c: 57:  TXIE = 1;
  5865   000296  889D               	bsf	3997,4,c	;volatile
  5866   000298                     
  5867                           ;u_art.c: 59:  TXIF = 0;
  5868   000298  989E               	bcf	3998,4,c	;volatile
  5869   00029A                     
  5870                           ;u_art.c: 61:  RCIE = 1;
  5871   00029A  8A9D               	bsf	3997,5,c	;volatile
  5872   00029C                     
  5873                           ;u_art.c: 63:  RCIF = 0;
  5874   00029C  9A9E               	bcf	3998,5,c	;volatile
  5875   00029E  0012               	return		;funcret
  5876   0002A0                     __end_of_init_uart:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function _dash_board *****************
  5880 ;; Defined at:
  5881 ;;		line 30 in file "dash_board.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  key             2   52[COMRAM] int 
  5886 ;;  var             2   50[COMRAM] short 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5896 ;;      Params:         0       0       0       0       0       0       0
  5897 ;;      Locals:         4       0       0       0       0       0       0
  5898 ;;      Temps:          1       0       0       0       0       0       0
  5899 ;;      Totals:         5       0       0       0       0       0       0
  5900 ;;Total ram usage:        5 bytes
  5901 ;; Hardware stack levels used: 1
  5902 ;; Hardware stack levels required when called: 5
  5903 ;; This function calls:
  5904 ;;		___awdiv
  5905 ;;		___awmod
  5906 ;;		___fldiv
  5907 ;;		___fltol
  5908 ;;		___xxtofl
  5909 ;;		_clcd_print
  5910 ;;		_clcd_putch
  5911 ;;		_clcd_write
  5912 ;;		_display_time
  5913 ;;		_e_store
  5914 ;;		_get_time
  5915 ;;		_read_adc
  5916 ;;		_read_switches
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text19
  5923   000EF4                     __ptext19:
  5924                           	callstack 0
  5925   000EF4                     _dash_board:
  5926                           	callstack 25
  5927   000EF4                     
  5928                           ;dash_board.c: 31:     short var = read_adc(0x04);
  5929   000EF4  0E04               	movlw	4
  5930   000EF6  ECA2  F001         	call	_read_adc
  5931   000EFA  C001  F033         	movff	?_read_adc,dash_board@var
  5932   000EFE  C002  F034         	movff	?_read_adc+1,dash_board@var+1
  5933                           
  5934                           ;dash_board.c: 32:     val = var / 10.24;
  5935   000F02  0E0A               	movlw	10
  5936   000F04  6E13               	movwf	___fldiv@a^0,c
  5937   000F06  0ED7               	movlw	215
  5938   000F08  6E14               	movwf	(___fldiv@a+1)^0,c
  5939   000F0A  0E23               	movlw	35
  5940   000F0C  6E15               	movwf	(___fldiv@a+2)^0,c
  5941   000F0E  0E41               	movlw	65
  5942   000F10  6E16               	movwf	(___fldiv@a+3)^0,c
  5943   000F12  C033  F001         	movff	dash_board@var,___xxtofl@val
  5944   000F16  C034  F002         	movff	dash_board@var+1,___xxtofl@val+1
  5945   000F1A  0E00               	movlw	0
  5946   000F1C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5947   000F1E  0EFF               	movlw	-1
  5948   000F20  6E03               	movwf	(___xxtofl@val+2)^0,c
  5949   000F22  6E04               	movwf	(___xxtofl@val+3)^0,c
  5950   000F24  0E01               	movlw	1
  5951   000F26  ECA0  F006         	call	___xxtofl
  5952   000F2A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5953   000F2E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5954   000F32  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5955   000F36  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5956   000F3A  EC20  F00B         	call	___fldiv	;wreg free
  5957   000F3E  C00F  F028         	movff	?___fldiv,___fltol@f1
  5958   000F42  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  5959   000F46  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  5960   000F4A  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  5961   000F4E  EC94  F005         	call	___fltol	;wreg free
  5962   000F52  C028  F056         	movff	?___fltol,_val
  5963   000F56  C029  F057         	movff	?___fltol+1,_val+1
  5964                           
  5965                           ;dash_board.c: 33:     clcd_putch(val % 10 + 48, (0xC0 + (14)));
  5966   000F5A  0ECE               	movlw	206
  5967   000F5C  6E0F               	movwf	clcd_putch@addr^0,c
  5968   000F5E  C056  F009         	movff	_val,___awmod@dividend
  5969   000F62  C057  F00A         	movff	_val+1,___awmod@dividend+1
  5970   000F66  0E00               	movlw	0
  5971   000F68  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5972   000F6A  0E0A               	movlw	10
  5973   000F6C  6E0B               	movwf	___awmod@divisor^0,c
  5974   000F6E  EC66  F004         	call	___awmod	;wreg free
  5975   000F72  5009               	movf	?___awmod^0,w,c
  5976   000F74  0F30               	addlw	48
  5977   000F76  ECE7  F000         	call	_clcd_putch
  5978                           
  5979                           ;dash_board.c: 34:     clcd_putch((val / 10) % 10 + 48, (0xC0 + (13)));
  5980   000F7A  0ECD               	movlw	205
  5981   000F7C  6E0F               	movwf	clcd_putch@addr^0,c
  5982   000F7E  0E00               	movlw	0
  5983   000F80  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5984   000F82  0E0A               	movlw	10
  5985   000F84  6E03               	movwf	___awdiv@divisor^0,c
  5986   000F86  C056  F001         	movff	_val,___awdiv@dividend
  5987   000F8A  C057  F002         	movff	_val+1,___awdiv@dividend+1
  5988   000F8E  ECBE  F004         	call	___awdiv	;wreg free
  5989   000F92  C001  F009         	movff	?___awdiv,___awmod@dividend
  5990   000F96  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  5991   000F9A  0E00               	movlw	0
  5992   000F9C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  5993   000F9E  0E0A               	movlw	10
  5994   000FA0  6E0B               	movwf	___awmod@divisor^0,c
  5995   000FA2  EC66  F004         	call	___awmod	;wreg free
  5996   000FA6  5009               	movf	?___awmod^0,w,c
  5997   000FA8  0F30               	addlw	48
  5998   000FAA  ECE7  F000         	call	_clcd_putch
  5999   000FAE                     
  6000                           ;dash_board.c: 36:     clcd_print("  TIME   EVT SPD", (0x80 + (0)));
  6001   000FAE  0E18               	movlw	low STR_1
  6002   000FB0  6E03               	movwf	clcd_print@data^0,c
  6003   000FB2  0E2F               	movlw	high STR_1
  6004   000FB4  6E04               	movwf	(clcd_print@data+1)^0,c
  6005   000FB6  0E80               	movlw	128
  6006   000FB8  6E05               	movwf	clcd_print@addr^0,c
  6007   000FBA  EC9D  F002         	call	_clcd_print	;wreg free
  6008   000FBE                     
  6009                           ;dash_board.c: 37:     int key = read_switches(1);
  6010   000FBE  0E01               	movlw	1
  6011   000FC0  EC0D  F003         	call	_read_switches
  6012   000FC4  6E32               	movwf	??_dash_board^0,c
  6013   000FC6  5032               	movf	??_dash_board^0,w,c
  6014   000FC8  6E35               	movwf	dash_board@key^0,c
  6015   000FCA  6A36               	clrf	(dash_board@key+1)^0,c
  6016   000FCC                     
  6017                           ;dash_board.c: 39:     if (2 == key) {
  6018   000FCC  0E02               	movlw	2
  6019   000FCE  1835               	xorwf	dash_board@key^0,w,c
  6020   000FD0  1036               	iorwf	(dash_board@key+1)^0,w,c
  6021   000FD2  A4D8               	btfss	status,2,c
  6022   000FD4  EFEE  F007         	goto	u3131
  6023   000FD8  EFF0  F007         	goto	u3130
  6024   000FDC                     u3131:
  6025   000FDC  EF08  F008         	goto	l3689
  6026   000FE0                     u3130:
  6027   000FE0                     
  6028                           ;dash_board.c: 40:         event++;
  6029   000FE0  4A54               	infsnz	_event^0,f,c
  6030   000FE2  2A55               	incf	(_event+1)^0,f,c
  6031   000FE4                     
  6032                           ;dash_board.c: 41:         if (event >= 6)
  6033   000FE4  BE55               	btfsc	(_event+1)^0,7,c
  6034   000FE6  EFFE  F007         	goto	u3141
  6035   000FEA  5055               	movf	(_event+1)^0,w,c
  6036   000FEC  E109               	bnz	u3140
  6037   000FEE  0E06               	movlw	6
  6038   000FF0  5C54               	subwf	_event^0,w,c
  6039   000FF2  A0D8               	btfss	status,0,c
  6040   000FF4  EFFE  F007         	goto	u3141
  6041   000FF8  EF00  F008         	goto	u3140
  6042   000FFC                     u3141:
  6043   000FFC  EF04  F008         	goto	l3687
  6044   001000                     u3140:
  6045   001000                     
  6046                           ;dash_board.c: 42:             event = 6;
  6047   001000  0E00               	movlw	0
  6048   001002  6E55               	movwf	(_event+1)^0,c
  6049   001004  0E06               	movlw	6
  6050   001006  6E54               	movwf	_event^0,c
  6051   001008                     l3687:
  6052                           
  6053                           ;dash_board.c: 43:         e_store();
  6054   001008  EC17  F006         	call	_e_store	;wreg free
  6055                           
  6056                           ;dash_board.c: 44:     } else if (3 == key) {
  6057   00100C  EF38  F008         	goto	l3705
  6058   001010                     l3689:
  6059   001010  0E03               	movlw	3
  6060   001012  1835               	xorwf	dash_board@key^0,w,c
  6061   001014  1036               	iorwf	(dash_board@key+1)^0,w,c
  6062   001016  A4D8               	btfss	status,2,c
  6063   001018  EF10  F008         	goto	u3151
  6064   00101C  EF12  F008         	goto	u3150
  6065   001020                     u3151:
  6066   001020  EF29  F008         	goto	l3699
  6067   001024                     u3150:
  6068   001024                     
  6069                           ;dash_board.c: 45:         event--;
  6070   001024  0654               	decf	_event^0,f,c
  6071   001026  A0D8               	btfss	status,0,c
  6072   001028  0655               	decf	(_event+1)^0,f,c
  6073   00102A                     
  6074                           ;dash_board.c: 46:         if (event <= 1)
  6075   00102A  BE55               	btfsc	(_event+1)^0,7,c
  6076   00102C  EF23  F008         	goto	u3160
  6077   001030  5055               	movf	(_event+1)^0,w,c
  6078   001032  E107               	bnz	u3161
  6079   001034  0E02               	movlw	2
  6080   001036  5C54               	subwf	_event^0,w,c
  6081   001038  B0D8               	btfsc	status,0,c
  6082   00103A  EF21  F008         	goto	u3161
  6083   00103E  EF23  F008         	goto	u3160
  6084   001042                     u3161:
  6085   001042  EF04  F008         	goto	l3687
  6086   001046                     u3160:
  6087   001046                     
  6088                           ;dash_board.c: 47:             event = 1;
  6089   001046  0E00               	movlw	0
  6090   001048  6E55               	movwf	(_event+1)^0,c
  6091   00104A  0E01               	movlw	1
  6092   00104C  6E54               	movwf	_event^0,c
  6093   00104E  EF04  F008         	goto	l3687
  6094   001052                     l3699:
  6095   001052  0435               	decf	dash_board@key^0,w,c
  6096   001054  1036               	iorwf	(dash_board@key+1)^0,w,c
  6097   001056  A4D8               	btfss	status,2,c
  6098   001058  EF30  F008         	goto	u3171
  6099   00105C  EF32  F008         	goto	u3170
  6100   001060                     u3171:
  6101   001060  EF38  F008         	goto	l3705
  6102   001064                     u3170:
  6103   001064                     
  6104                           ;dash_board.c: 50:         event = 7;
  6105   001064  0E00               	movlw	0
  6106   001066  6E55               	movwf	(_event+1)^0,c
  6107   001068  0E07               	movlw	7
  6108   00106A  6E54               	movwf	_event^0,c
  6109   00106C  EF04  F008         	goto	l3687
  6110   001070                     l3705:
  6111                           
  6112                           ;dash_board.c: 53:     clcd_print(str[event], (0xC0 + (9)));
  6113   001070  5054               	movf	_event^0,w,c
  6114   001072  0D03               	mullw	3
  6115   001074  50F3               	movf	243,w,c
  6116   001076  0FAD               	addlw	low _str
  6117   001078  6E32               	movwf	??_dash_board^0,c
  6118   00107A  C032  F003         	movff	??_dash_board,clcd_print@data
  6119   00107E  6A04               	clrf	(clcd_print@data+1)^0,c
  6120   001080  0EC9               	movlw	201
  6121   001082  6E05               	movwf	clcd_print@addr^0,c
  6122   001084  EC9D  F002         	call	_clcd_print	;wreg free
  6123   001088                     
  6124                           ;dash_board.c: 54:     get_time();
  6125   001088  EC86  F003         	call	_get_time	;wreg free
  6126   00108C                     
  6127                           ;dash_board.c: 55:     display_time();
  6128   00108C  ECAC  F000         	call	_display_time	;wreg free
  6129   001090                     
  6130                           ;dash_board.c: 58:     if (11 == key) {
  6131   001090  0E0B               	movlw	11
  6132   001092  1835               	xorwf	dash_board@key^0,w,c
  6133   001094  1036               	iorwf	(dash_board@key+1)^0,w,c
  6134   001096  A4D8               	btfss	status,2,c
  6135   001098  EF50  F008         	goto	u3181
  6136   00109C  EF52  F008         	goto	u3180
  6137   0010A0                     u3181:
  6138   0010A0  EF68  F008         	goto	l219
  6139   0010A4                     u3180:
  6140   0010A4                     
  6141                           ;dash_board.c: 59:         shift = 1;
  6142   0010A4  0E00               	movlw	0
  6143   0010A6  6E5B               	movwf	(_shift+1)^0,c
  6144   0010A8  0E01               	movlw	1
  6145   0010AA  6E5A               	movwf	_shift^0,c
  6146                           
  6147                           ;dash_board.c: 60:          clear_flag=0;
  6148   0010AC  0E00               	movlw	0
  6149   0010AE  0100               	movlb	0	; () banked
  6150   0010B0  6F91               	movwf	(_clear_flag+1)& (0+255),b
  6151   0010B2  0E00               	movlw	0
  6152   0010B4  6F90               	movwf	_clear_flag& (0+255),b
  6153                           
  6154                           ;dash_board.c: 61:         i = 0;
  6155   0010B6  0E00               	movlw	0
  6156   0010B8  6E59               	movwf	(_i+1)^0,c
  6157   0010BA  0E00               	movlw	0
  6158   0010BC  6E58               	movwf	_i^0,c
  6159                           
  6160                           ;dash_board.c: 62:         count1 = 4;
  6161   0010BE  0E00               	movlw	0
  6162   0010C0  6F8F               	movwf	(_count1+1)& (0+255),b
  6163   0010C2  0E04               	movlw	4
  6164   0010C4  6F8E               	movwf	_count1& (0+255),b
  6165   0010C6                     
  6166                           ; BSR set to: 0
  6167                           ;dash_board.c: 63:         clcd_write(0x01, 0);
  6168   0010C6  0E00               	movlw	0
  6169   0010C8  6E01               	movwf	clcd_write@control_bit^0,c
  6170   0010CA  0E01               	movlw	1
  6171   0010CC  EC65  F001         	call	_clcd_write
  6172   0010D0                     l219:
  6173   0010D0  0012               	return		;funcret
  6174   0010D2                     __end_of_dash_board:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function _read_adc *****************
  6178 ;; Defined at:
  6179 ;;		line 43 in file "adc.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  channel         1    wreg     unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  channel         1    6[COMRAM] unsigned char 
  6184 ;;  reg_val         2    4[COMRAM] unsigned short 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    0[COMRAM] unsigned short 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6194 ;;      Params:         2       0       0       0       0       0       0
  6195 ;;      Locals:         3       0       0       0       0       0       0
  6196 ;;      Temps:          2       0       0       0       0       0       0
  6197 ;;      Totals:         7       0       0       0       0       0       0
  6198 ;;Total ram usage:        7 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_dash_board
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text20
  6208   000344                     __ptext20:
  6209                           	callstack 0
  6210   000344                     _read_adc:
  6211                           	callstack 29
  6212                           
  6213                           ;incstack = 0
  6214                           ;read_adc@channel stored from wreg
  6215   000344  6E07               	movwf	read_adc@channel^0,c
  6216   000346                     
  6217                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  6218   000346  C007  F003         	movff	read_adc@channel,??_read_adc
  6219   00034A  90D8               	bcf	status,0,c
  6220   00034C  3603               	rlcf	??_read_adc^0,f,c
  6221   00034E  90D8               	bcf	status,0,c
  6222   000350  3603               	rlcf	??_read_adc^0,f,c
  6223   000352  50C2               	movf	194,w,c	;volatile
  6224   000354  0BC3               	andlw	195
  6225   000356  1003               	iorwf	??_read_adc^0,w,c
  6226   000358  6EC2               	movwf	194,c	;volatile
  6227   00035A                     
  6228                           ;adc.c: 51:  GO = 1;
  6229   00035A  82C2               	bsf	4034,1,c	;volatile
  6230   00035C                     l165:
  6231   00035C  B2C2               	btfsc	4034,1,c	;volatile
  6232   00035E  EFB3  F001         	goto	u2581
  6233   000362  EFB5  F001         	goto	u2580
  6234   000366                     u2581:
  6235   000366  EFAE  F001         	goto	l165
  6236   00036A                     u2580:
  6237   00036A                     
  6238                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  6239   00036A  50C3               	movf	195,w,c	;volatile
  6240   00036C  CFC4 F003          	movff	4036,??_read_adc	;volatile
  6241   000370  6A04               	clrf	(??_read_adc+1)^0,c
  6242   000372  C003  F004         	movff	??_read_adc,??_read_adc+1
  6243   000376  6A03               	clrf	??_read_adc^0,c
  6244   000378  1003               	iorwf	??_read_adc^0,w,c
  6245   00037A  6E05               	movwf	read_adc@reg_val^0,c
  6246   00037C  5004               	movf	(??_read_adc+1)^0,w,c
  6247   00037E  6E06               	movwf	(read_adc@reg_val+1)^0,c
  6248   000380                     
  6249                           ;adc.c: 55:  return reg_val;
  6250   000380  C005  F001         	movff	read_adc@reg_val,?_read_adc
  6251   000384  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  6252   000388  0012               	return		;funcret
  6253   00038A                     __end_of_read_adc:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _get_time *****************
  6257 ;; Defined at:
  6258 ;;		line 72 in file "dash_board.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6272 ;;      Params:         0       0       0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 4
  6279 ;; This function calls:
  6280 ;;		_read_ds1307
  6281 ;; This function is called by:
  6282 ;;		_dash_board
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text21
  6287   00070C                     __ptext21:
  6288                           	callstack 0
  6289   00070C                     _get_time:
  6290                           	callstack 25
  6291   00070C                     
  6292                           ;dash_board.c: 74:     clock_reg[0] = read_ds1307(0x02);
  6293   00070C  0E02               	movlw	2
  6294   00070E  EC26  F001         	call	_read_ds1307
  6295   000712  6E37               	movwf	_clock_reg^0,c
  6296                           
  6297                           ;dash_board.c: 75:     clock_reg[1] = read_ds1307(0x01);
  6298   000714  0E01               	movlw	1
  6299   000716  EC26  F001         	call	_read_ds1307
  6300   00071A  6E38               	movwf	(_clock_reg+1)^0,c
  6301                           
  6302                           ;dash_board.c: 76:     clock_reg[2] = read_ds1307(0x00);
  6303   00071C  0E00               	movlw	0
  6304   00071E  EC26  F001         	call	_read_ds1307
  6305   000722  6E39               	movwf	(_clock_reg+2)^0,c
  6306   000724                     
  6307                           ;dash_board.c: 78:     if (clock_reg[0] & 0x40) {
  6308   000724  AC37               	btfss	_clock_reg^0,6,c
  6309   000726  EF97  F003         	goto	u2631
  6310   00072A  EF99  F003         	goto	u2630
  6311   00072E                     u2631:
  6312   00072E  EFA5  F003         	goto	l3353
  6313   000732                     u2630:
  6314   000732                     
  6315                           ;dash_board.c: 79:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  6316   000732  3837               	swapf	_clock_reg^0,w,c
  6317   000734  0B0F               	andlw	15
  6318   000736  0B01               	andlw	1
  6319   000738  0F30               	addlw	48
  6320   00073A  0100               	movlb	0	; () banked
  6321   00073C  6F94               	movwf	_time& (0+255),b
  6322                           
  6323                           ;dash_board.c: 80:         time[1] = '0' + (clock_reg[0] & 0x0F);
  6324   00073E  5037               	movf	_clock_reg^0,w,c
  6325   000740  0B0F               	andlw	15
  6326   000742  0F30               	addlw	48
  6327   000744  6F95               	movwf	(_time+1)& (0+255),b
  6328                           
  6329                           ;dash_board.c: 81:     }
  6330   000746  EFAF  F003         	goto	l3355
  6331   00074A                     l3353:
  6332                           
  6333                           ;dash_board.c: 83:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  6334   00074A  3837               	swapf	_clock_reg^0,w,c
  6335   00074C  0B0F               	andlw	15
  6336   00074E  0B03               	andlw	3
  6337   000750  0F30               	addlw	48
  6338   000752  0100               	movlb	0	; () banked
  6339   000754  6F94               	movwf	_time& (0+255),b
  6340                           
  6341                           ;dash_board.c: 84:         time[1] = '0' + (clock_reg[0] & 0x0F);
  6342   000756  5037               	movf	_clock_reg^0,w,c
  6343   000758  0B0F               	andlw	15
  6344   00075A  0F30               	addlw	48
  6345   00075C  6F95               	movwf	(_time+1)& (0+255),b
  6346   00075E                     l3355:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;dash_board.c: 86:     time[2] = ':';
  6350   00075E  0E3A               	movlw	58
  6351   000760  6F96               	movwf	(_time+2)& (0+255),b
  6352   000762                     
  6353                           ; BSR set to: 0
  6354                           ;dash_board.c: 87:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  6355   000762  3838               	swapf	(_clock_reg+1)^0,w,c
  6356   000764  0B0F               	andlw	15
  6357   000766  0B0F               	andlw	15
  6358   000768  0F30               	addlw	48
  6359   00076A  6F97               	movwf	(_time+3)& (0+255),b
  6360   00076C                     
  6361                           ; BSR set to: 0
  6362                           ;dash_board.c: 88:     time[4] = '0' + (clock_reg[1] & 0x0F);
  6363   00076C  5038               	movf	(_clock_reg+1)^0,w,c
  6364   00076E  0B0F               	andlw	15
  6365   000770  0F30               	addlw	48
  6366   000772  6F98               	movwf	(_time+4)& (0+255),b
  6367   000774                     
  6368                           ; BSR set to: 0
  6369                           ;dash_board.c: 89:     time[5] = ':';
  6370   000774  0E3A               	movlw	58
  6371   000776  6F99               	movwf	(_time+5)& (0+255),b
  6372                           
  6373                           ;dash_board.c: 90:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  6374   000778  3839               	swapf	(_clock_reg+2)^0,w,c
  6375   00077A  0B0F               	andlw	15
  6376   00077C  0B0F               	andlw	15
  6377   00077E  0F30               	addlw	48
  6378   000780  6F9A               	movwf	(_time+6)& (0+255),b
  6379                           
  6380                           ;dash_board.c: 91:     time[7] = '0' + (clock_reg[2] & 0x0F);
  6381   000782  5039               	movf	(_clock_reg+2)^0,w,c
  6382   000784  0B0F               	andlw	15
  6383   000786  0F30               	addlw	48
  6384   000788  6F9B               	movwf	(_time+7)& (0+255),b
  6385   00078A                     
  6386                           ; BSR set to: 0
  6387                           ;dash_board.c: 92:     time[8] = '\0';
  6388   00078A  0E00               	movlw	0
  6389   00078C  6F9C               	movwf	(_time+8)& (0+255),b
  6390   00078E                     
  6391                           ; BSR set to: 0
  6392   00078E  0012               	return		;funcret
  6393   000790                     __end_of_get_time:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _read_ds1307 *****************
  6397 ;; Defined at:
  6398 ;;		line 55 in file "ds1307.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  address         1    wreg     unsigned char 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  address         1    1[COMRAM] unsigned char 
  6403 ;;  data            1    2[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      unsigned char 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6413 ;;      Params:         0       0       0       0       0       0       0
  6414 ;;      Locals:         2       0       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0
  6416 ;;      Totals:         2       0       0       0       0       0       0
  6417 ;;Total ram usage:        2 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 3
  6420 ;; This function calls:
  6421 ;;		_i2c_read
  6422 ;;		_i2c_rep_start
  6423 ;;		_i2c_start
  6424 ;;		_i2c_stop
  6425 ;;		_i2c_write
  6426 ;; This function is called by:
  6427 ;;		_get_time
  6428 ;;		_init_ds1307
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text22
  6433   00024C                     __ptext22:
  6434                           	callstack 0
  6435   00024C                     _read_ds1307:
  6436                           	callstack 25
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;incstack = 0
  6440                           ;read_ds1307@address stored from wreg
  6441   00024C  6E02               	movwf	read_ds1307@address^0,c
  6442   00024E                     
  6443                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  6444   00024E  EC90  F000         	call	_i2c_start	;wreg free
  6445   000252                     
  6446                           ;ds1307.c: 60:  i2c_write(0xD0);
  6447   000252  0ED0               	movlw	208
  6448   000254  ECA0  F000         	call	_i2c_write
  6449   000258                     
  6450                           ;ds1307.c: 61:  i2c_write(address);
  6451   000258  5002               	movf	read_ds1307@address^0,w,c
  6452   00025A  ECA0  F000         	call	_i2c_write
  6453   00025E                     
  6454                           ;ds1307.c: 62:  i2c_rep_start();
  6455   00025E  EC9C  F000         	call	_i2c_rep_start	;wreg free
  6456   000262                     
  6457                           ;ds1307.c: 63:  i2c_write(0xD1);
  6458   000262  0ED1               	movlw	209
  6459   000264  ECA0  F000         	call	_i2c_write
  6460                           
  6461                           ;ds1307.c: 64:  data = i2c_read();
  6462   000268  ECA6  F000         	call	_i2c_read	;wreg free
  6463   00026C  6E03               	movwf	read_ds1307@data^0,c
  6464   00026E                     
  6465                           ;ds1307.c: 65:  i2c_stop();
  6466   00026E  EC94  F000         	call	_i2c_stop	;wreg free
  6467                           
  6468                           ;ds1307.c: 67:  return data;
  6469   000272  5003               	movf	read_ds1307@data^0,w,c
  6470   000274  0012               	return		;funcret
  6471   000276                     __end_of_read_ds1307:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function _i2c_rep_start *****************
  6475 ;; Defined at:
  6476 ;;		line 43 in file "i2c.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6490 ;;      Params:         0       0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 1
  6497 ;; This function calls:
  6498 ;;		_i2c_idle
  6499 ;; This function is called by:
  6500 ;;		_read_ds1307
  6501 ;;		_read_external_eeprom
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text23
  6506   000138                     __ptext23:
  6507                           	callstack 0
  6508   000138                     _i2c_rep_start:
  6509                           	callstack 27
  6510   000138                     
  6511                           ;i2c.c: 45:  RSEN = 1;
  6512   000138  82C5               	bsf	4037,1,c	;volatile
  6513   00013A                     
  6514                           ;i2c.c: 46:  i2c_idle();
  6515   00013A  ECB4  F000         	call	_i2c_idle	;wreg free
  6516   00013E  0012               	return		;funcret
  6517   000140                     __end_of_i2c_rep_start:
  6518                           	callstack 0
  6519                           
  6520 ;; *************** function _i2c_read *****************
  6521 ;; Defined at:
  6522 ;;		line 67 in file "i2c.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      unsigned char 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6536 ;;      Params:         0       0       0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0
  6539 ;;      Totals:         0       0       0       0       0       0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 2
  6543 ;; This function calls:
  6544 ;;		_i2c_no_ack
  6545 ;;		_i2c_rx_mode
  6546 ;; This function is called by:
  6547 ;;		_read_ds1307
  6548 ;;		_read_external_eeprom
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text24
  6553   00014C                     __ptext24:
  6554                           	callstack 0
  6555   00014C                     _i2c_read:
  6556                           	callstack 26
  6557   00014C                     
  6558                           ;i2c.c: 69:  i2c_rx_mode();
  6559   00014C  EC98  F000         	call	_i2c_rx_mode	;wreg free
  6560                           
  6561                           ;i2c.c: 70:  i2c_no_ack();
  6562   000150  EC8D  F000         	call	_i2c_no_ack	;wreg free
  6563   000154                     
  6564                           ;i2c.c: 72:  return SSPBUF;
  6565   000154  50C9               	movf	201,w,c	;volatile
  6566   000156  0012               	return		;funcret
  6567   000158                     __end_of_i2c_read:
  6568                           	callstack 0
  6569                           
  6570 ;; *************** function _i2c_rx_mode *****************
  6571 ;; Defined at:
  6572 ;;		line 55 in file "i2c.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;		None
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6586 ;;      Params:         0       0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0
  6589 ;;      Totals:         0       0       0       0       0       0       0
  6590 ;;Total ram usage:        0 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 1
  6593 ;; This function calls:
  6594 ;;		_i2c_idle
  6595 ;; This function is called by:
  6596 ;;		_i2c_read
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text25
  6601   000130                     __ptext25:
  6602                           	callstack 0
  6603   000130                     _i2c_rx_mode:
  6604                           	callstack 26
  6605   000130                     
  6606                           ;i2c.c: 57:  RCEN = 1;
  6607   000130  86C5               	bsf	4037,3,c	;volatile
  6608   000132                     
  6609                           ;i2c.c: 58:  i2c_idle();
  6610   000132  ECB4  F000         	call	_i2c_idle	;wreg free
  6611   000136  0012               	return		;funcret
  6612   000138                     __end_of_i2c_rx_mode:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _i2c_no_ack *****************
  6616 ;; Defined at:
  6617 ;;		line 61 in file "i2c.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		None
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6631 ;;      Params:         0       0       0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_i2c_read
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text26
  6645   00011A                     __ptext26:
  6646                           	callstack 0
  6647   00011A                     _i2c_no_ack:
  6648                           	callstack 27
  6649   00011A                     
  6650                           ;i2c.c: 63:  ACKDT = 1;
  6651   00011A  8AC5               	bsf	4037,5,c	;volatile
  6652                           
  6653                           ;i2c.c: 64:  ACKEN = 1;
  6654   00011C  88C5               	bsf	4037,4,c	;volatile
  6655   00011E  0012               	return		;funcret
  6656   000120                     __end_of_i2c_no_ack:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _e_store *****************
  6660 ;; Defined at:
  6661 ;;		line 17 in file "e_store.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  j               2   20[COMRAM] int 
  6666 ;;  i               2   18[COMRAM] int 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6676 ;;      Params:         0       0       0       0       0       0       0
  6677 ;;      Locals:         4       0       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0
  6679 ;;      Totals:         4       0       0       0       0       0       0
  6680 ;;Total ram usage:        4 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 3
  6683 ;; This function calls:
  6684 ;;		___awdiv
  6685 ;;		___awmod
  6686 ;;		_write_external_eeprom
  6687 ;; This function is called by:
  6688 ;;		_dash_board
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text27
  6693   000C2E                     __ptext27:
  6694                           	callstack 0
  6695   000C2E                     _e_store:
  6696                           	callstack 26
  6697   000C2E                     
  6698                           ;e_store.c: 18:     if (event_count < 10) {
  6699   000C2E  BE45               	btfsc	(_event_count+1)^0,7,c
  6700   000C30  EF25  F006         	goto	u2590
  6701   000C34  5045               	movf	(_event_count+1)^0,w,c
  6702   000C36  E107               	bnz	u2591
  6703   000C38  0E0A               	movlw	10
  6704   000C3A  5C44               	subwf	_event_count^0,w,c
  6705   000C3C  B0D8               	btfsc	status,0,c
  6706   000C3E  EF23  F006         	goto	u2591
  6707   000C42  EF25  F006         	goto	u2590
  6708   000C46                     u2591:
  6709   000C46  EF27  F006         	goto	l3309
  6710   000C4A                     u2590:
  6711   000C4A                     
  6712                           ;e_store.c: 19:         event_count++;
  6713   000C4A  4A44               	infsnz	_event_count^0,f,c
  6714   000C4C  2A45               	incf	(_event_count+1)^0,f,c
  6715   000C4E                     l3309:
  6716                           
  6717                           ;e_store.c: 22:     static int address = 0x00;;e_store.c: 24:     for (int i = 0; i < 8;
      +                           i++) {
  6718   000C4E  0E00               	movlw	0
  6719   000C50  6E14               	movwf	(e_store@i+1)^0,c
  6720   000C52  0E00               	movlw	0
  6721   000C54  6E13               	movwf	e_store@i^0,c
  6722   000C56                     l3315:
  6723                           
  6724                           ;e_store.c: 25:         write_external_eeprom(address++, time[i]);
  6725   000C56  5013               	movf	e_store@i^0,w,c
  6726   000C58  0F94               	addlw	low _time
  6727   000C5A  6ED9               	movwf	fsr2l,c
  6728   000C5C  6ADA               	clrf	fsr2h,c
  6729   000C5E  50DF               	movf	indf2,w,c
  6730   000C60  6E0F               	movwf	write_external_eeprom@data^0,c
  6731   000C62  5042               	movf	e_store@address^0,w,c
  6732   000C64  EC82  F001         	call	_write_external_eeprom
  6733   000C68  4A42               	infsnz	e_store@address^0,f,c
  6734   000C6A  2A43               	incf	(e_store@address+1)^0,f,c
  6735   000C6C                     
  6736                           ;e_store.c: 26:     }
  6737   000C6C  4A13               	infsnz	e_store@i^0,f,c
  6738   000C6E  2A14               	incf	(e_store@i+1)^0,f,c
  6739   000C70  BE14               	btfsc	(e_store@i+1)^0,7,c
  6740   000C72  EF44  F006         	goto	u2601
  6741   000C76  5014               	movf	(e_store@i+1)^0,w,c
  6742   000C78  E109               	bnz	u2600
  6743   000C7A  0E08               	movlw	8
  6744   000C7C  5C13               	subwf	e_store@i^0,w,c
  6745   000C7E  A0D8               	btfss	status,0,c
  6746   000C80  EF44  F006         	goto	u2601
  6747   000C84  EF46  F006         	goto	u2600
  6748   000C88                     u2601:
  6749   000C88  EF2B  F006         	goto	l3315
  6750   000C8C                     u2600:
  6751   000C8C                     
  6752                           ;e_store.c: 28:     for (int j = 0; j < 2; j++) {
  6753   000C8C  0E00               	movlw	0
  6754   000C8E  6E16               	movwf	(e_store@j+1)^0,c
  6755   000C90  0E00               	movlw	0
  6756   000C92  6E15               	movwf	e_store@j^0,c
  6757   000C94                     l3329:
  6758                           
  6759                           ;e_store.c: 29:         write_external_eeprom(address++, str[event][j]);
  6760   000C94  5054               	movf	_event^0,w,c
  6761   000C96  0D03               	mullw	3
  6762   000C98  50F3               	movf	243,w,c
  6763   000C9A  0FAD               	addlw	low _str
  6764   000C9C  2415               	addwf	e_store@j^0,w,c
  6765   000C9E  6ED9               	movwf	fsr2l,c
  6766   000CA0  6ADA               	clrf	fsr2h,c
  6767   000CA2  50DF               	movf	indf2,w,c
  6768   000CA4  6E0F               	movwf	write_external_eeprom@data^0,c
  6769   000CA6  5042               	movf	e_store@address^0,w,c
  6770   000CA8  EC82  F001         	call	_write_external_eeprom
  6771   000CAC  4A42               	infsnz	e_store@address^0,f,c
  6772   000CAE  2A43               	incf	(e_store@address+1)^0,f,c
  6773   000CB0                     
  6774                           ;e_store.c: 30:     }
  6775   000CB0  4A15               	infsnz	e_store@j^0,f,c
  6776   000CB2  2A16               	incf	(e_store@j+1)^0,f,c
  6777   000CB4  BE16               	btfsc	(e_store@j+1)^0,7,c
  6778   000CB6  EF66  F006         	goto	u2611
  6779   000CBA  5016               	movf	(e_store@j+1)^0,w,c
  6780   000CBC  E109               	bnz	u2610
  6781   000CBE  0E02               	movlw	2
  6782   000CC0  5C15               	subwf	e_store@j^0,w,c
  6783   000CC2  A0D8               	btfss	status,0,c
  6784   000CC4  EF66  F006         	goto	u2611
  6785   000CC8  EF68  F006         	goto	u2610
  6786   000CCC                     u2611:
  6787   000CCC  EF4A  F006         	goto	l3329
  6788   000CD0                     u2610:
  6789   000CD0                     
  6790                           ;e_store.c: 32:     write_external_eeprom(address++, val / 10 + 48);
  6791   000CD0  C056  F001         	movff	_val,___awdiv@dividend
  6792   000CD4  C057  F002         	movff	_val+1,___awdiv@dividend+1
  6793   000CD8  0E00               	movlw	0
  6794   000CDA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6795   000CDC  0E0A               	movlw	10
  6796   000CDE  6E03               	movwf	___awdiv@divisor^0,c
  6797   000CE0  ECBE  F004         	call	___awdiv	;wreg free
  6798   000CE4  5001               	movf	?___awdiv^0,w,c
  6799   000CE6  0F30               	addlw	48
  6800   000CE8  6E0F               	movwf	write_external_eeprom@data^0,c
  6801   000CEA  5042               	movf	e_store@address^0,w,c
  6802   000CEC  EC82  F001         	call	_write_external_eeprom
  6803   000CF0  4A42               	infsnz	e_store@address^0,f,c
  6804   000CF2  2A43               	incf	(e_store@address+1)^0,f,c
  6805   000CF4                     
  6806                           ;e_store.c: 33:     write_external_eeprom(address++, val % 10 + 48);
  6807   000CF4  C056  F009         	movff	_val,___awmod@dividend
  6808   000CF8  C057  F00A         	movff	_val+1,___awmod@dividend+1
  6809   000CFC  0E00               	movlw	0
  6810   000CFE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  6811   000D00  0E0A               	movlw	10
  6812   000D02  6E0B               	movwf	___awmod@divisor^0,c
  6813   000D04  EC66  F004         	call	___awmod	;wreg free
  6814   000D08  5009               	movf	?___awmod^0,w,c
  6815   000D0A  0F30               	addlw	48
  6816   000D0C  6E0F               	movwf	write_external_eeprom@data^0,c
  6817   000D0E  5042               	movf	e_store@address^0,w,c
  6818   000D10  EC82  F001         	call	_write_external_eeprom
  6819   000D14  4A42               	infsnz	e_store@address^0,f,c
  6820   000D16  2A43               	incf	(e_store@address+1)^0,f,c
  6821   000D18                     
  6822                           ;e_store.c: 35:     if (address == 0x78) {
  6823   000D18  0E78               	movlw	120
  6824   000D1A  1842               	xorwf	e_store@address^0,w,c
  6825   000D1C  1043               	iorwf	(e_store@address+1)^0,w,c
  6826   000D1E  A4D8               	btfss	status,2,c
  6827   000D20  EF94  F006         	goto	u2621
  6828   000D24  EF96  F006         	goto	u2620
  6829   000D28                     u2621:
  6830   000D28  EF9F  F006         	goto	l541
  6831   000D2C                     u2620:
  6832   000D2C                     
  6833                           ;e_store.c: 36:         address = 0x00;
  6834   000D2C  0E00               	movlw	0
  6835   000D2E  6E43               	movwf	(e_store@address+1)^0,c
  6836   000D30  0E00               	movlw	0
  6837   000D32  6E42               	movwf	e_store@address^0,c
  6838                           
  6839                           ;e_store.c: 37:         e_flag = 1;
  6840   000D34  0E00               	movlw	0
  6841   000D36  0100               	movlb	0	; () banked
  6842   000D38  6F83               	movwf	(_e_flag+1)& (0+255),b
  6843   000D3A  0E01               	movlw	1
  6844   000D3C  6F82               	movwf	_e_flag& (0+255),b
  6845   000D3E                     l541:
  6846   000D3E  0012               	return		;funcret
  6847   000D40                     __end_of_e_store:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function ___awmod *****************
  6851 ;; Defined at:
  6852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  dividend        2    8[COMRAM] int 
  6855 ;;  divisor         2   10[COMRAM] int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  sign            1   13[COMRAM] unsigned char 
  6858 ;;  counter         1   12[COMRAM] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2    8[COMRAM] int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6868 ;;      Params:         4       0       0       0       0       0       0
  6869 ;;      Locals:         2       0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0
  6871 ;;      Totals:         6       0       0       0       0       0       0
  6872 ;;Total ram usage:        6 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_dash_board
  6878 ;;		_e_store
  6879 ;;		_set_time
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text28
  6884   0008CC                     __ptext28:
  6885                           	callstack 0
  6886   0008CC                     ___awmod:
  6887                           	callstack 29
  6888   0008CC  0E00               	movlw	0
  6889   0008CE  6E0E               	movwf	___awmod@sign^0,c
  6890   0008D0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  6891   0008D2  EF6F  F004         	goto	u2470
  6892   0008D6  EF6D  F004         	goto	u2471
  6893   0008DA                     u2471:
  6894   0008DA  EF75  F004         	goto	l3191
  6895   0008DE                     u2470:
  6896   0008DE  6C09               	negf	___awmod@dividend^0,c
  6897   0008E0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6898   0008E2  B0D8               	btfsc	status,0,c
  6899   0008E4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6900   0008E6  0E01               	movlw	1
  6901   0008E8  6E0E               	movwf	___awmod@sign^0,c
  6902   0008EA                     l3191:
  6903   0008EA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  6904   0008EC  EF7C  F004         	goto	u2480
  6905   0008F0  EF7A  F004         	goto	u2481
  6906   0008F4                     u2481:
  6907   0008F4  EF80  F004         	goto	l3195
  6908   0008F8                     u2480:
  6909   0008F8  6C0B               	negf	___awmod@divisor^0,c
  6910   0008FA  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  6911   0008FC  B0D8               	btfsc	status,0,c
  6912   0008FE  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  6913   000900                     l3195:
  6914   000900  500B               	movf	___awmod@divisor^0,w,c
  6915   000902  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  6916   000904  B4D8               	btfsc	status,2,c
  6917   000906  EF87  F004         	goto	u2491
  6918   00090A  EF89  F004         	goto	u2490
  6919   00090E                     u2491:
  6920   00090E  EFAD  F004         	goto	l3211
  6921   000912                     u2490:
  6922   000912  0E01               	movlw	1
  6923   000914  6E0D               	movwf	___awmod@counter^0,c
  6924   000916  EF91  F004         	goto	l3201
  6925   00091A                     l3199:
  6926   00091A  90D8               	bcf	status,0,c
  6927   00091C  360B               	rlcf	___awmod@divisor^0,f,c
  6928   00091E  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  6929   000920  2A0D               	incf	___awmod@counter^0,f,c
  6930   000922                     l3201:
  6931   000922  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  6932   000924  EF96  F004         	goto	u2501
  6933   000928  EF98  F004         	goto	u2500
  6934   00092C                     u2501:
  6935   00092C  EF8D  F004         	goto	l3199
  6936   000930                     u2500:
  6937   000930                     l3203:
  6938   000930  500B               	movf	___awmod@divisor^0,w,c
  6939   000932  5C09               	subwf	___awmod@dividend^0,w,c
  6940   000934  500C               	movf	(___awmod@divisor+1)^0,w,c
  6941   000936  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  6942   000938  A0D8               	btfss	status,0,c
  6943   00093A  EFA1  F004         	goto	u2511
  6944   00093E  EFA3  F004         	goto	u2510
  6945   000942                     u2511:
  6946   000942  EFA7  F004         	goto	l3207
  6947   000946                     u2510:
  6948   000946  500B               	movf	___awmod@divisor^0,w,c
  6949   000948  5E09               	subwf	___awmod@dividend^0,f,c
  6950   00094A  500C               	movf	(___awmod@divisor+1)^0,w,c
  6951   00094C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  6952   00094E                     l3207:
  6953   00094E  90D8               	bcf	status,0,c
  6954   000950  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  6955   000952  320B               	rrcf	___awmod@divisor^0,f,c
  6956   000954  2E0D               	decfsz	___awmod@counter^0,f,c
  6957   000956  EF98  F004         	goto	l3203
  6958   00095A                     l3211:
  6959   00095A  500E               	movf	___awmod@sign^0,w,c
  6960   00095C  B4D8               	btfsc	status,2,c
  6961   00095E  EFB3  F004         	goto	u2521
  6962   000962  EFB5  F004         	goto	u2520
  6963   000966                     u2521:
  6964   000966  EFB9  F004         	goto	l3215
  6965   00096A                     u2520:
  6966   00096A  6C09               	negf	___awmod@dividend^0,c
  6967   00096C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6968   00096E  B0D8               	btfsc	status,0,c
  6969   000970  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6970   000972                     l3215:
  6971   000972  C009  F009         	movff	___awmod@dividend,?___awmod
  6972   000976  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  6973   00097A  0012               	return		;funcret
  6974   00097C                     __end_of___awmod:
  6975                           	callstack 0
  6976                           
  6977 ;; *************** function ___awdiv *****************
  6978 ;; Defined at:
  6979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  dividend        2    0[COMRAM] int 
  6982 ;;  divisor         2    2[COMRAM] int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  quotient        2    6[COMRAM] int 
  6985 ;;  sign            1    5[COMRAM] unsigned char 
  6986 ;;  counter         1    4[COMRAM] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2    0[COMRAM] int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6996 ;;      Params:         4       0       0       0       0       0       0
  6997 ;;      Locals:         4       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0
  6999 ;;      Totals:         8       0       0       0       0       0       0
  7000 ;;Total ram usage:        8 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_dash_board
  7006 ;;		_e_store
  7007 ;;		_set_time
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text29
  7012   00097C                     __ptext29:
  7013                           	callstack 0
  7014   00097C                     ___awdiv:
  7015                           	callstack 29
  7016   00097C  0E00               	movlw	0
  7017   00097E  6E06               	movwf	___awdiv@sign^0,c
  7018   000980  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7019   000982  EFC7  F004         	goto	u2410
  7020   000986  EFC5  F004         	goto	u2411
  7021   00098A                     u2411:
  7022   00098A  EFCD  F004         	goto	l3147
  7023   00098E                     u2410:
  7024   00098E  6C03               	negf	___awdiv@divisor^0,c
  7025   000990  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7026   000992  B0D8               	btfsc	status,0,c
  7027   000994  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7028   000996  0E01               	movlw	1
  7029   000998  6E06               	movwf	___awdiv@sign^0,c
  7030   00099A                     l3147:
  7031   00099A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7032   00099C  EFD4  F004         	goto	u2420
  7033   0009A0  EFD2  F004         	goto	u2421
  7034   0009A4                     u2421:
  7035   0009A4  EFDA  F004         	goto	l3153
  7036   0009A8                     u2420:
  7037   0009A8  6C01               	negf	___awdiv@dividend^0,c
  7038   0009AA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7039   0009AC  B0D8               	btfsc	status,0,c
  7040   0009AE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7041   0009B0  0E01               	movlw	1
  7042   0009B2  1A06               	xorwf	___awdiv@sign^0,f,c
  7043   0009B4                     l3153:
  7044   0009B4  0E00               	movlw	0
  7045   0009B6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7046   0009B8  0E00               	movlw	0
  7047   0009BA  6E07               	movwf	___awdiv@quotient^0,c
  7048   0009BC  5003               	movf	___awdiv@divisor^0,w,c
  7049   0009BE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7050   0009C0  B4D8               	btfsc	status,2,c
  7051   0009C2  EFE5  F004         	goto	u2431
  7052   0009C6  EFE7  F004         	goto	u2430
  7053   0009CA                     u2431:
  7054   0009CA  EF0F  F005         	goto	l3175
  7055   0009CE                     u2430:
  7056   0009CE  0E01               	movlw	1
  7057   0009D0  6E05               	movwf	___awdiv@counter^0,c
  7058   0009D2  EFEF  F004         	goto	l3161
  7059   0009D6                     l3159:
  7060   0009D6  90D8               	bcf	status,0,c
  7061   0009D8  3603               	rlcf	___awdiv@divisor^0,f,c
  7062   0009DA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7063   0009DC  2A05               	incf	___awdiv@counter^0,f,c
  7064   0009DE                     l3161:
  7065   0009DE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7066   0009E0  EFF4  F004         	goto	u2441
  7067   0009E4  EFF6  F004         	goto	u2440
  7068   0009E8                     u2441:
  7069   0009E8  EFEB  F004         	goto	l3159
  7070   0009EC                     u2440:
  7071   0009EC                     l3163:
  7072   0009EC  90D8               	bcf	status,0,c
  7073   0009EE  3607               	rlcf	___awdiv@quotient^0,f,c
  7074   0009F0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7075   0009F2  5003               	movf	___awdiv@divisor^0,w,c
  7076   0009F4  5C01               	subwf	___awdiv@dividend^0,w,c
  7077   0009F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7078   0009F8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7079   0009FA  A0D8               	btfss	status,0,c
  7080   0009FC  EF02  F005         	goto	u2451
  7081   000A00  EF04  F005         	goto	u2450
  7082   000A04                     u2451:
  7083   000A04  EF09  F005         	goto	l3171
  7084   000A08                     u2450:
  7085   000A08  5003               	movf	___awdiv@divisor^0,w,c
  7086   000A0A  5E01               	subwf	___awdiv@dividend^0,f,c
  7087   000A0C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7088   000A0E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7089   000A10  8007               	bsf	___awdiv@quotient^0,0,c
  7090   000A12                     l3171:
  7091   000A12  90D8               	bcf	status,0,c
  7092   000A14  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7093   000A16  3203               	rrcf	___awdiv@divisor^0,f,c
  7094   000A18  2E05               	decfsz	___awdiv@counter^0,f,c
  7095   000A1A  EFF6  F004         	goto	l3163
  7096   000A1E                     l3175:
  7097   000A1E  5006               	movf	___awdiv@sign^0,w,c
  7098   000A20  B4D8               	btfsc	status,2,c
  7099   000A22  EF15  F005         	goto	u2461
  7100   000A26  EF17  F005         	goto	u2460
  7101   000A2A                     u2461:
  7102   000A2A  EF1B  F005         	goto	l3179
  7103   000A2E                     u2460:
  7104   000A2E  6C07               	negf	___awdiv@quotient^0,c
  7105   000A30  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7106   000A32  B0D8               	btfsc	status,0,c
  7107   000A34  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7108   000A36                     l3179:
  7109   000A36  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7110   000A3A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7111   000A3E  0012               	return		;funcret
  7112   000A40                     __end_of___awdiv:
  7113                           	callstack 0
  7114                           
  7115 ;; *************** function _display_time *****************
  7116 ;; Defined at:
  7117 ;;		line 67 in file "dash_board.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7131 ;;      Params:         0       0       0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used: 1
  7137 ;; Hardware stack levels required when called: 2
  7138 ;; This function calls:
  7139 ;;		_clcd_print
  7140 ;; This function is called by:
  7141 ;;		_dash_board
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text30
  7146   000158                     __ptext30:
  7147                           	callstack 0
  7148   000158                     _display_time:
  7149                           	callstack 27
  7150   000158                     
  7151                           ;dash_board.c: 69:     clcd_print(time, (0xC0 + (0)));
  7152   000158  0E94               	movlw	low _time
  7153   00015A  6E03               	movwf	clcd_print@data^0,c
  7154   00015C  6A04               	clrf	(clcd_print@data+1)^0,c
  7155   00015E  0EC0               	movlw	192
  7156   000160  6E05               	movwf	clcd_print@addr^0,c
  7157   000162  EC9D  F002         	call	_clcd_print	;wreg free
  7158   000166  0012               	return		;funcret
  7159   000168                     __end_of_display_time:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function ___xxtofl *****************
  7163 ;; Defined at:
  7164 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  sign            1    wreg     unsigned char 
  7167 ;;  val             4    0[COMRAM] long 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  sign            1    8[COMRAM] unsigned char 
  7170 ;;  arg             4   10[COMRAM] unsigned long 
  7171 ;;  exp             1    9[COMRAM] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  4    0[COMRAM] unsigned char 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7181 ;;      Params:         4       0       0       0       0       0       0
  7182 ;;      Locals:         6       0       0       0       0       0       0
  7183 ;;      Temps:          4       0       0       0       0       0       0
  7184 ;;      Totals:        14       0       0       0       0       0       0
  7185 ;;Total ram usage:       14 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_dash_board
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text31
  7195   000D40                     __ptext31:
  7196                           	callstack 0
  7197   000D40                     ___xxtofl:
  7198                           	callstack 29
  7199                           
  7200                           ;incstack = 0
  7201                           ;___xxtofl@sign stored from wreg
  7202   000D40  6E09               	movwf	___xxtofl@sign^0,c
  7203   000D42  5009               	movf	___xxtofl@sign^0,w,c
  7204   000D44  B4D8               	btfsc	status,2,c
  7205   000D46  EFA7  F006         	goto	u3031
  7206   000D4A  EFA9  F006         	goto	u3030
  7207   000D4E                     u3031:
  7208   000D4E  EFCB  F006         	goto	l1465
  7209   000D52                     u3030:
  7210   000D52  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7211   000D54  EFB0  F006         	goto	u3040
  7212   000D58  EFAE  F006         	goto	u3041
  7213   000D5C                     u3041:
  7214   000D5C  EFCB  F006         	goto	l1465
  7215   000D60                     u3040:
  7216   000D60  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7217   000D64  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7218   000D68  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7219   000D6C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7220   000D70  1E05               	comf	??___xxtofl^0,f,c
  7221   000D72  1E06               	comf	(??___xxtofl+1)^0,f,c
  7222   000D74  1E07               	comf	(??___xxtofl+2)^0,f,c
  7223   000D76  1E08               	comf	(??___xxtofl+3)^0,f,c
  7224   000D78  2A05               	incf	??___xxtofl^0,f,c
  7225   000D7A  0E00               	movlw	0
  7226   000D7C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7227   000D7E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7228   000D80  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7229   000D82  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7230   000D86  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7231   000D8A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7232   000D8E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7233   000D92  EFD3  F006         	goto	l3627
  7234   000D96                     l1465:
  7235   000D96  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7236   000D9A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7237   000D9E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7238   000DA2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7239   000DA6                     l3627:
  7240   000DA6  5001               	movf	___xxtofl@val^0,w,c
  7241   000DA8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7242   000DAA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7243   000DAC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7244   000DAE  A4D8               	btfss	status,2,c
  7245   000DB0  EFDC  F006         	goto	u3051
  7246   000DB4  EFDE  F006         	goto	u3050
  7247   000DB8                     u3051:
  7248   000DB8  EFE8  F006         	goto	l3633
  7249   000DBC                     u3050:
  7250   000DBC  0E00               	movlw	0
  7251   000DBE  6E01               	movwf	?___xxtofl^0,c
  7252   000DC0  0E00               	movlw	0
  7253   000DC2  6E02               	movwf	(?___xxtofl+1)^0,c
  7254   000DC4  0E00               	movlw	0
  7255   000DC6  6E03               	movwf	(?___xxtofl+2)^0,c
  7256   000DC8  0E00               	movlw	0
  7257   000DCA  6E04               	movwf	(?___xxtofl+3)^0,c
  7258   000DCC  EF79  F007         	goto	l1468
  7259   000DD0                     l3633:
  7260   000DD0  0E96               	movlw	150
  7261   000DD2  6E0A               	movwf	___xxtofl@exp^0,c
  7262   000DD4  EFF2  F006         	goto	l3637
  7263   000DD8                     l3635:
  7264   000DD8  2A0A               	incf	___xxtofl@exp^0,f,c
  7265   000DDA  90D8               	bcf	status,0,c
  7266   000DDC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7267   000DDE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7268   000DE0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7269   000DE2  320B               	rrcf	___xxtofl@arg^0,f,c
  7270   000DE4                     l3637:
  7271   000DE4  0E00               	movlw	0
  7272   000DE6  140B               	andwf	___xxtofl@arg^0,w,c
  7273   000DE8  6E05               	movwf	??___xxtofl^0,c
  7274   000DEA  0E00               	movlw	0
  7275   000DEC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7276   000DEE  6E06               	movwf	(??___xxtofl+1)^0,c
  7277   000DF0  0E00               	movlw	0
  7278   000DF2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7279   000DF4  6E07               	movwf	(??___xxtofl+2)^0,c
  7280   000DF6  0EFE               	movlw	254
  7281   000DF8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7282   000DFA  6E08               	movwf	(??___xxtofl+3)^0,c
  7283   000DFC  5005               	movf	??___xxtofl^0,w,c
  7284   000DFE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7285   000E00  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7286   000E02  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7287   000E04  A4D8               	btfss	status,2,c
  7288   000E06  EF07  F007         	goto	u3061
  7289   000E0A  EF09  F007         	goto	u3060
  7290   000E0E                     u3061:
  7291   000E0E  EFEC  F006         	goto	l3635
  7292   000E12                     u3060:
  7293   000E12  EF17  F007         	goto	l1472
  7294   000E16                     l3639:
  7295   000E16  2A0A               	incf	___xxtofl@exp^0,f,c
  7296   000E18  0E01               	movlw	1
  7297   000E1A  260B               	addwf	___xxtofl@arg^0,f,c
  7298   000E1C  0E00               	movlw	0
  7299   000E1E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7300   000E20  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7301   000E22  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7302   000E24  90D8               	bcf	status,0,c
  7303   000E26  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7304   000E28  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7305   000E2A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7306   000E2C  320B               	rrcf	___xxtofl@arg^0,f,c
  7307   000E2E                     l1472:
  7308   000E2E  0E00               	movlw	0
  7309   000E30  140B               	andwf	___xxtofl@arg^0,w,c
  7310   000E32  6E05               	movwf	??___xxtofl^0,c
  7311   000E34  0E00               	movlw	0
  7312   000E36  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7313   000E38  6E06               	movwf	(??___xxtofl+1)^0,c
  7314   000E3A  0E00               	movlw	0
  7315   000E3C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7316   000E3E  6E07               	movwf	(??___xxtofl+2)^0,c
  7317   000E40  0EFF               	movlw	255
  7318   000E42  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7319   000E44  6E08               	movwf	(??___xxtofl+3)^0,c
  7320   000E46  5005               	movf	??___xxtofl^0,w,c
  7321   000E48  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7322   000E4A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7323   000E4C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7324   000E4E  A4D8               	btfss	status,2,c
  7325   000E50  EF2C  F007         	goto	u3071
  7326   000E54  EF2E  F007         	goto	u3070
  7327   000E58                     u3071:
  7328   000E58  EF0B  F007         	goto	l3639
  7329   000E5C                     u3070:
  7330   000E5C  EF36  F007         	goto	l3647
  7331   000E60                     l3645:
  7332   000E60  060A               	decf	___xxtofl@exp^0,f,c
  7333   000E62  90D8               	bcf	status,0,c
  7334   000E64  360B               	rlcf	___xxtofl@arg^0,f,c
  7335   000E66  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7336   000E68  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7337   000E6A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7338   000E6C                     l3647:
  7339   000E6C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7340   000E6E  EF3B  F007         	goto	u3081
  7341   000E72  EF3D  F007         	goto	u3080
  7342   000E76                     u3081:
  7343   000E76  EF45  F007         	goto	l1479
  7344   000E7A                     u3080:
  7345   000E7A  0E02               	movlw	2
  7346   000E7C  600A               	cpfslt	___xxtofl@exp^0,c
  7347   000E7E  EF43  F007         	goto	u3091
  7348   000E82  EF45  F007         	goto	u3090
  7349   000E86                     u3091:
  7350   000E86  EF30  F007         	goto	l3645
  7351   000E8A                     u3090:
  7352   000E8A                     l1479:
  7353   000E8A  B00A               	btfsc	___xxtofl@exp^0,0,c
  7354   000E8C  EF4A  F007         	goto	u3101
  7355   000E90  EF4C  F007         	goto	u3100
  7356   000E94                     u3101:
  7357   000E94  EF4D  F007         	goto	l3653
  7358   000E98                     u3100:
  7359   000E98  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7360   000E9A                     l3653:
  7361   000E9A  90D8               	bcf	status,0,c
  7362   000E9C  320A               	rrcf	___xxtofl@exp^0,f,c
  7363   000E9E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7364   000EA2  6A06               	clrf	(??___xxtofl+1)^0,c
  7365   000EA4  6A07               	clrf	(??___xxtofl+2)^0,c
  7366   000EA6  6A08               	clrf	(??___xxtofl+3)^0,c
  7367   000EA8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7368   000EAC  6A07               	clrf	(??___xxtofl+2)^0,c
  7369   000EAE  6A06               	clrf	(??___xxtofl+1)^0,c
  7370   000EB0  6A05               	clrf	??___xxtofl^0,c
  7371   000EB2  5005               	movf	??___xxtofl^0,w,c
  7372   000EB4  120B               	iorwf	___xxtofl@arg^0,f,c
  7373   000EB6  5006               	movf	(??___xxtofl+1)^0,w,c
  7374   000EB8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7375   000EBA  5007               	movf	(??___xxtofl+2)^0,w,c
  7376   000EBC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7377   000EBE  5008               	movf	(??___xxtofl+3)^0,w,c
  7378   000EC0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7379   000EC2  5009               	movf	___xxtofl@sign^0,w,c
  7380   000EC4  B4D8               	btfsc	status,2,c
  7381   000EC6  EF67  F007         	goto	u3111
  7382   000ECA  EF69  F007         	goto	u3110
  7383   000ECE                     u3111:
  7384   000ECE  EF71  F007         	goto	l3663
  7385   000ED2                     u3110:
  7386   000ED2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7387   000ED4  EF70  F007         	goto	u3120
  7388   000ED8  EF6E  F007         	goto	u3121
  7389   000EDC                     u3121:
  7390   000EDC  EF71  F007         	goto	l3663
  7391   000EE0                     u3120:
  7392   000EE0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7393   000EE2                     l3663:
  7394   000EE2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7395   000EE6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7396   000EEA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7397   000EEE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7398   000EF2                     l1468:
  7399   000EF2  0012               	return		;funcret
  7400   000EF4                     __end_of___xxtofl:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___fltol *****************
  7404 ;; Defined at:
  7405 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  f1              4   39[COMRAM] unsigned char 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  exp1            1   48[COMRAM] unsigned char 
  7410 ;;  sign1           1   47[COMRAM] unsigned char 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  4   39[COMRAM] long 
  7413 ;; Registers used:
  7414 ;;		wreg, status,2, status,0
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7420 ;;      Params:         4       0       0       0       0       0       0
  7421 ;;      Locals:         2       0       0       0       0       0       0
  7422 ;;      Temps:          4       0       0       0       0       0       0
  7423 ;;      Totals:        10       0       0       0       0       0       0
  7424 ;;Total ram usage:       10 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_dash_board
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text32
  7434   000B28                     __ptext32:
  7435                           	callstack 0
  7436   000B28                     ___fltol:
  7437                           	callstack 29
  7438   000B28  342A               	rlcf	(___fltol@f1+2)^0,w,c
  7439   000B2A  342B               	rlcf	(___fltol@f1+3)^0,w,c
  7440   000B2C  6E31               	movwf	___fltol@exp1^0,c
  7441   000B2E  5031               	movf	___fltol@exp1^0,w,c
  7442   000B30  A4D8               	btfss	status,2,c
  7443   000B32  EF9D  F005         	goto	u2901
  7444   000B36  EF9F  F005         	goto	u2900
  7445   000B3A                     u2901:
  7446   000B3A  EFA9  F005         	goto	l3545
  7447   000B3E                     u2900:
  7448   000B3E                     l3541:
  7449   000B3E  0E00               	movlw	0
  7450   000B40  6E28               	movwf	?___fltol^0,c
  7451   000B42  0E00               	movlw	0
  7452   000B44  6E29               	movwf	(?___fltol+1)^0,c
  7453   000B46  0E00               	movlw	0
  7454   000B48  6E2A               	movwf	(?___fltol+2)^0,c
  7455   000B4A  0E00               	movlw	0
  7456   000B4C  6E2B               	movwf	(?___fltol+3)^0,c
  7457   000B4E  EF16  F006         	goto	l1107
  7458   000B52                     l3545:
  7459   000B52  C028  F02C         	movff	___fltol@f1,??___fltol
  7460   000B56  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  7461   000B5A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  7462   000B5E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  7463   000B62  0E20               	movlw	32
  7464   000B64  EFB9  F005         	goto	u2910
  7465   000B68                     u2915:
  7466   000B68  90D8               	bcf	status,0,c
  7467   000B6A  322F               	rrcf	(??___fltol+3)^0,f,c
  7468   000B6C  322E               	rrcf	(??___fltol+2)^0,f,c
  7469   000B6E  322D               	rrcf	(??___fltol+1)^0,f,c
  7470   000B70  322C               	rrcf	??___fltol^0,f,c
  7471   000B72                     u2910:
  7472   000B72  2EE8               	decfsz	wreg,f,c
  7473   000B74  EFB4  F005         	goto	u2915
  7474   000B78  502C               	movf	??___fltol^0,w,c
  7475   000B7A  6E30               	movwf	___fltol@sign1^0,c
  7476   000B7C  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  7477   000B7E  0EFF               	movlw	255
  7478   000B80  1628               	andwf	___fltol@f1^0,f,c
  7479   000B82  0EFF               	movlw	255
  7480   000B84  1629               	andwf	(___fltol@f1+1)^0,f,c
  7481   000B86  0EFF               	movlw	255
  7482   000B88  162A               	andwf	(___fltol@f1+2)^0,f,c
  7483   000B8A  0E00               	movlw	0
  7484   000B8C  162B               	andwf	(___fltol@f1+3)^0,f,c
  7485   000B8E  0E96               	movlw	150
  7486   000B90  5E31               	subwf	___fltol@exp1^0,f,c
  7487   000B92  BE31               	btfsc	___fltol@exp1^0,7,c
  7488   000B94  EFD0  F005         	goto	u2920
  7489   000B98  EFCE  F005         	goto	u2921
  7490   000B9C                     u2921:
  7491   000B9C  EFE6  F005         	goto	l3565
  7492   000BA0                     u2920:
  7493   000BA0  5031               	movf	___fltol@exp1^0,w,c
  7494   000BA2  0A80               	xorlw	128
  7495   000BA4  0F97               	addlw	151
  7496   000BA6  B0D8               	btfsc	status,0,c
  7497   000BA8  EFD8  F005         	goto	u2931
  7498   000BAC  EFDA  F005         	goto	u2930
  7499   000BB0                     u2931:
  7500   000BB0  EFDC  F005         	goto	l3561
  7501   000BB4                     u2930:
  7502   000BB4  EF9F  F005         	goto	l3541
  7503   000BB8                     l3561:
  7504   000BB8  90D8               	bcf	status,0,c
  7505   000BBA  322B               	rrcf	(___fltol@f1+3)^0,f,c
  7506   000BBC  322A               	rrcf	(___fltol@f1+2)^0,f,c
  7507   000BBE  3229               	rrcf	(___fltol@f1+1)^0,f,c
  7508   000BC0  3228               	rrcf	___fltol@f1^0,f,c
  7509   000BC2  3E31               	incfsz	___fltol@exp1^0,f,c
  7510   000BC4  EFDC  F005         	goto	l3561
  7511   000BC8  EFFE  F005         	goto	l3575
  7512   000BCC                     l3565:
  7513   000BCC  0E1F               	movlw	31
  7514   000BCE  6431               	cpfsgt	___fltol@exp1^0,c
  7515   000BD0  EFEC  F005         	goto	u2941
  7516   000BD4  EFEE  F005         	goto	u2940
  7517   000BD8                     u2941:
  7518   000BD8  EFF6  F005         	goto	l3573
  7519   000BDC                     u2940:
  7520   000BDC  EF9F  F005         	goto	l3541
  7521   000BE0                     l3571:
  7522   000BE0  90D8               	bcf	status,0,c
  7523   000BE2  3628               	rlcf	___fltol@f1^0,f,c
  7524   000BE4  3629               	rlcf	(___fltol@f1+1)^0,f,c
  7525   000BE6  362A               	rlcf	(___fltol@f1+2)^0,f,c
  7526   000BE8  362B               	rlcf	(___fltol@f1+3)^0,f,c
  7527   000BEA  0631               	decf	___fltol@exp1^0,f,c
  7528   000BEC                     l3573:
  7529   000BEC  5031               	movf	___fltol@exp1^0,w,c
  7530   000BEE  A4D8               	btfss	status,2,c
  7531   000BF0  EFFC  F005         	goto	u2951
  7532   000BF4  EFFE  F005         	goto	u2950
  7533   000BF8                     u2951:
  7534   000BF8  EFF0  F005         	goto	l3571
  7535   000BFC                     u2950:
  7536   000BFC                     l3575:
  7537   000BFC  5030               	movf	___fltol@sign1^0,w,c
  7538   000BFE  B4D8               	btfsc	status,2,c
  7539   000C00  EF04  F006         	goto	u2961
  7540   000C04  EF06  F006         	goto	u2960
  7541   000C08                     u2961:
  7542   000C08  EF0E  F006         	goto	l3579
  7543   000C0C                     u2960:
  7544   000C0C  1E2B               	comf	(___fltol@f1+3)^0,f,c
  7545   000C0E  1E2A               	comf	(___fltol@f1+2)^0,f,c
  7546   000C10  1E29               	comf	(___fltol@f1+1)^0,f,c
  7547   000C12  6C28               	negf	___fltol@f1^0,c
  7548   000C14  0E00               	movlw	0
  7549   000C16  2229               	addwfc	(___fltol@f1+1)^0,f,c
  7550   000C18  222A               	addwfc	(___fltol@f1+2)^0,f,c
  7551   000C1A  222B               	addwfc	(___fltol@f1+3)^0,f,c
  7552   000C1C                     l3579:
  7553   000C1C  C028  F028         	movff	___fltol@f1,?___fltol
  7554   000C20  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  7555   000C24  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  7556   000C28  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  7557   000C2C                     l1107:
  7558   000C2C  0012               	return		;funcret
  7559   000C2E                     __end_of___fltol:
  7560                           	callstack 0
  7561                           
  7562 ;; *************** function ___fldiv *****************
  7563 ;; Defined at:
  7564 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  b               4   14[COMRAM] long 
  7567 ;;  a               4   18[COMRAM] long 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  grs             4   33[COMRAM] unsigned long 
  7570 ;;  rem             4   26[COMRAM] unsigned long 
  7571 ;;  new_exp         2   31[COMRAM] short 
  7572 ;;  aexp            1   38[COMRAM] unsigned char 
  7573 ;;  bexp            1   37[COMRAM] unsigned char 
  7574 ;;  sign            1   30[COMRAM] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  4   14[COMRAM] unsigned char 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7584 ;;      Params:         8       0       0       0       0       0       0
  7585 ;;      Locals:        13       0       0       0       0       0       0
  7586 ;;      Temps:          4       0       0       0       0       0       0
  7587 ;;      Totals:        25       0       0       0       0       0       0
  7588 ;;Total ram usage:       25 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_dash_board
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text33
  7598   001640                     __ptext33:
  7599                           	callstack 0
  7600   001640                     ___fldiv:
  7601                           	callstack 29
  7602   001640  5012               	movf	(___fldiv@b+3)^0,w,c
  7603   001642  0B80               	andlw	128
  7604   001644  6E1F               	movwf	___fldiv@sign^0,c
  7605   001646  5012               	movf	(___fldiv@b+3)^0,w,c
  7606   001648  2412               	addwf	(___fldiv@b+3)^0,w,c
  7607   00164A  6E26               	movwf	___fldiv@bexp^0,c
  7608   00164C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7609   00164E  EF2B  F00B         	goto	u2671
  7610   001652  EF2D  F00B         	goto	u2670
  7611   001656                     u2671:
  7612   001656  EF2E  F00B         	goto	l3407
  7613   00165A                     u2670:
  7614   00165A  8026               	bsf	___fldiv@bexp^0,0,c
  7615   00165C                     l3407:
  7616   00165C  5026               	movf	___fldiv@bexp^0,w,c
  7617   00165E  B4D8               	btfsc	status,2,c
  7618   001660  EF34  F00B         	goto	u2681
  7619   001664  EF36  F00B         	goto	u2680
  7620   001668                     u2681:
  7621   001668  EF4B  F00B         	goto	l3417
  7622   00166C                     u2680:
  7623   00166C  2826               	incf	___fldiv@bexp^0,w,c
  7624   00166E  A4D8               	btfss	status,2,c
  7625   001670  EF3C  F00B         	goto	u2691
  7626   001674  EF3E  F00B         	goto	u2690
  7627   001678                     u2691:
  7628   001678  EF46  F00B         	goto	l3413
  7629   00167C                     u2690:
  7630   00167C  0E00               	movlw	0
  7631   00167E  6E0F               	movwf	___fldiv@b^0,c
  7632   001680  0E00               	movlw	0
  7633   001682  6E10               	movwf	(___fldiv@b+1)^0,c
  7634   001684  0E00               	movlw	0
  7635   001686  6E11               	movwf	(___fldiv@b+2)^0,c
  7636   001688  0E00               	movlw	0
  7637   00168A  6E12               	movwf	(___fldiv@b+3)^0,c
  7638   00168C                     l3413:
  7639   00168C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7640   00168E  0E00               	movlw	0
  7641   001690  6E12               	movwf	(___fldiv@b+3)^0,c
  7642   001692  EF53  F00B         	goto	l3419
  7643   001696                     l3417:
  7644   001696  0E00               	movlw	0
  7645   001698  6E0F               	movwf	___fldiv@b^0,c
  7646   00169A  0E00               	movlw	0
  7647   00169C  6E10               	movwf	(___fldiv@b+1)^0,c
  7648   00169E  0E00               	movlw	0
  7649   0016A0  6E11               	movwf	(___fldiv@b+2)^0,c
  7650   0016A2  0E00               	movlw	0
  7651   0016A4  6E12               	movwf	(___fldiv@b+3)^0,c
  7652   0016A6                     l3419:
  7653   0016A6  5016               	movf	(___fldiv@a+3)^0,w,c
  7654   0016A8  0B80               	andlw	128
  7655   0016AA  1A1F               	xorwf	___fldiv@sign^0,f,c
  7656   0016AC  5016               	movf	(___fldiv@a+3)^0,w,c
  7657   0016AE  2416               	addwf	(___fldiv@a+3)^0,w,c
  7658   0016B0  6E27               	movwf	___fldiv@aexp^0,c
  7659   0016B2  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7660   0016B4  EF5E  F00B         	goto	u2701
  7661   0016B8  EF60  F00B         	goto	u2700
  7662   0016BC                     u2701:
  7663   0016BC  EF61  F00B         	goto	l3427
  7664   0016C0                     u2700:
  7665   0016C0  8027               	bsf	___fldiv@aexp^0,0,c
  7666   0016C2                     l3427:
  7667   0016C2  5027               	movf	___fldiv@aexp^0,w,c
  7668   0016C4  B4D8               	btfsc	status,2,c
  7669   0016C6  EF67  F00B         	goto	u2711
  7670   0016CA  EF69  F00B         	goto	u2710
  7671   0016CE                     u2711:
  7672   0016CE  EF7E  F00B         	goto	l3437
  7673   0016D2                     u2710:
  7674   0016D2  2827               	incf	___fldiv@aexp^0,w,c
  7675   0016D4  A4D8               	btfss	status,2,c
  7676   0016D6  EF6F  F00B         	goto	u2721
  7677   0016DA  EF71  F00B         	goto	u2720
  7678   0016DE                     u2721:
  7679   0016DE  EF79  F00B         	goto	l3433
  7680   0016E2                     u2720:
  7681   0016E2  0E00               	movlw	0
  7682   0016E4  6E13               	movwf	___fldiv@a^0,c
  7683   0016E6  0E00               	movlw	0
  7684   0016E8  6E14               	movwf	(___fldiv@a+1)^0,c
  7685   0016EA  0E00               	movlw	0
  7686   0016EC  6E15               	movwf	(___fldiv@a+2)^0,c
  7687   0016EE  0E00               	movlw	0
  7688   0016F0  6E16               	movwf	(___fldiv@a+3)^0,c
  7689   0016F2                     l3433:
  7690   0016F2  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7691   0016F4  0E00               	movlw	0
  7692   0016F6  6E16               	movwf	(___fldiv@a+3)^0,c
  7693   0016F8  EF86  F00B         	goto	l3439
  7694   0016FC                     l3437:
  7695   0016FC  0E00               	movlw	0
  7696   0016FE  6E13               	movwf	___fldiv@a^0,c
  7697   001700  0E00               	movlw	0
  7698   001702  6E14               	movwf	(___fldiv@a+1)^0,c
  7699   001704  0E00               	movlw	0
  7700   001706  6E15               	movwf	(___fldiv@a+2)^0,c
  7701   001708  0E00               	movlw	0
  7702   00170A  6E16               	movwf	(___fldiv@a+3)^0,c
  7703   00170C                     l3439:
  7704   00170C  5013               	movf	___fldiv@a^0,w,c
  7705   00170E  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7706   001710  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7707   001712  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7708   001714  A4D8               	btfss	status,2,c
  7709   001716  EF8F  F00B         	goto	u2731
  7710   00171A  EF91  F00B         	goto	u2730
  7711   00171E                     u2731:
  7712   00171E  EFA9  F00B         	goto	l3451
  7713   001722                     u2730:
  7714   001722  0E00               	movlw	0
  7715   001724  6E0F               	movwf	___fldiv@b^0,c
  7716   001726  0E00               	movlw	0
  7717   001728  6E10               	movwf	(___fldiv@b+1)^0,c
  7718   00172A  0E00               	movlw	0
  7719   00172C  6E11               	movwf	(___fldiv@b+2)^0,c
  7720   00172E  0E00               	movlw	0
  7721   001730  6E12               	movwf	(___fldiv@b+3)^0,c
  7722   001732  0E80               	movlw	128
  7723   001734  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7724   001736  0E7F               	movlw	127
  7725   001738  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7726   00173A                     l3445:
  7727   00173A  501F               	movf	___fldiv@sign^0,w,c
  7728   00173C  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7729   00173E  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7730   001742  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7731   001746  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7732   00174A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7733   00174E  EFEC  F00C         	goto	l1392
  7734   001752                     l3451:
  7735   001752  5026               	movf	___fldiv@bexp^0,w,c
  7736   001754  A4D8               	btfss	status,2,c
  7737   001756  EFAF  F00B         	goto	u2741
  7738   00175A  EFB1  F00B         	goto	u2740
  7739   00175E                     u2741:
  7740   00175E  EFBB  F00B         	goto	l3459
  7741   001762                     u2740:
  7742   001762  0E00               	movlw	0
  7743   001764  6E0F               	movwf	?___fldiv^0,c
  7744   001766  0E00               	movlw	0
  7745   001768  6E10               	movwf	(?___fldiv+1)^0,c
  7746   00176A  0E00               	movlw	0
  7747   00176C  6E11               	movwf	(?___fldiv+2)^0,c
  7748   00176E  0E00               	movlw	0
  7749   001770  6E12               	movwf	(?___fldiv+3)^0,c
  7750   001772  EFEC  F00C         	goto	l1392
  7751   001776                     l3459:
  7752   001776  5027               	movf	___fldiv@aexp^0,w,c
  7753   001778  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7754   00177C  6A18               	clrf	(??___fldiv+1)^0,c
  7755   00177E  5E17               	subwf	??___fldiv^0,f,c
  7756   001780  0E00               	movlw	0
  7757   001782  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7758   001784  0E7F               	movlw	127
  7759   001786  2417               	addwf	??___fldiv^0,w,c
  7760   001788  6E20               	movwf	___fldiv@new_exp^0,c
  7761   00178A  0E00               	movlw	0
  7762   00178C  2018               	addwfc	(??___fldiv+1)^0,w,c
  7763   00178E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7764   001790  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7765   001794  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7766   001798  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7767   00179C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7768   0017A0  0E00               	movlw	0
  7769   0017A2  6E0F               	movwf	___fldiv@b^0,c
  7770   0017A4  0E00               	movlw	0
  7771   0017A6  6E10               	movwf	(___fldiv@b+1)^0,c
  7772   0017A8  0E00               	movlw	0
  7773   0017AA  6E11               	movwf	(___fldiv@b+2)^0,c
  7774   0017AC  0E00               	movlw	0
  7775   0017AE  6E12               	movwf	(___fldiv@b+3)^0,c
  7776   0017B0  0E00               	movlw	0
  7777   0017B2  6E22               	movwf	___fldiv@grs^0,c
  7778   0017B4  0E00               	movlw	0
  7779   0017B6  6E23               	movwf	(___fldiv@grs+1)^0,c
  7780   0017B8  0E00               	movlw	0
  7781   0017BA  6E24               	movwf	(___fldiv@grs+2)^0,c
  7782   0017BC  0E00               	movlw	0
  7783   0017BE  6E25               	movwf	(___fldiv@grs+3)^0,c
  7784   0017C0  0E00               	movlw	0
  7785   0017C2  6E27               	movwf	___fldiv@aexp^0,c
  7786   0017C4  EF1C  F00C         	goto	l1394
  7787   0017C8                     l3469:
  7788   0017C8  5027               	movf	___fldiv@aexp^0,w,c
  7789   0017CA  B4D8               	btfsc	status,2,c
  7790   0017CC  EFEA  F00B         	goto	u2751
  7791   0017D0  EFEC  F00B         	goto	u2750
  7792   0017D4                     u2751:
  7793   0017D4  EF03  F00C         	goto	l3477
  7794   0017D8                     u2750:
  7795   0017D8  90D8               	bcf	status,0,c
  7796   0017DA  361B               	rlcf	___fldiv@rem^0,f,c
  7797   0017DC  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7798   0017DE  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7799   0017E0  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7800   0017E2  90D8               	bcf	status,0,c
  7801   0017E4  360F               	rlcf	___fldiv@b^0,f,c
  7802   0017E6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7803   0017E8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7804   0017EA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7805   0017EC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7806   0017EE  EFFB  F00B         	goto	u2761
  7807   0017F2  EFFD  F00B         	goto	u2760
  7808   0017F6                     u2761:
  7809   0017F6  EFFE  F00B         	goto	l1397
  7810   0017FA                     u2760:
  7811   0017FA  800F               	bsf	___fldiv@b^0,0,c
  7812   0017FC                     l1397:
  7813   0017FC  90D8               	bcf	status,0,c
  7814   0017FE  3622               	rlcf	___fldiv@grs^0,f,c
  7815   001800  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7816   001802  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7817   001804  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7818   001806                     l3477:
  7819   001806  5013               	movf	___fldiv@a^0,w,c
  7820   001808  5C1B               	subwf	___fldiv@rem^0,w,c
  7821   00180A  5014               	movf	(___fldiv@a+1)^0,w,c
  7822   00180C  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7823   00180E  5015               	movf	(___fldiv@a+2)^0,w,c
  7824   001810  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7825   001812  5016               	movf	(___fldiv@a+3)^0,w,c
  7826   001814  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7827   001816  A0D8               	btfss	status,0,c
  7828   001818  EF10  F00C         	goto	u2771
  7829   00181C  EF12  F00C         	goto	u2770
  7830   001820                     u2771:
  7831   001820  EF1B  F00C         	goto	l3483
  7832   001824                     u2770:
  7833   001824  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7834   001826  5013               	movf	___fldiv@a^0,w,c
  7835   001828  5E1B               	subwf	___fldiv@rem^0,f,c
  7836   00182A  5014               	movf	(___fldiv@a+1)^0,w,c
  7837   00182C  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7838   00182E  5015               	movf	(___fldiv@a+2)^0,w,c
  7839   001830  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7840   001832  5016               	movf	(___fldiv@a+3)^0,w,c
  7841   001834  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7842   001836                     l3483:
  7843   001836  2A27               	incf	___fldiv@aexp^0,f,c
  7844   001838                     l1394:
  7845   001838  0E19               	movlw	25
  7846   00183A  6427               	cpfsgt	___fldiv@aexp^0,c
  7847   00183C  EF22  F00C         	goto	u2781
  7848   001840  EF24  F00C         	goto	u2780
  7849   001844                     u2781:
  7850   001844  EFE4  F00B         	goto	l3469
  7851   001848                     u2780:
  7852   001848  501B               	movf	___fldiv@rem^0,w,c
  7853   00184A  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7854   00184C  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7855   00184E  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7856   001850  B4D8               	btfsc	status,2,c
  7857   001852  EF2D  F00C         	goto	u2791
  7858   001856  EF2F  F00C         	goto	u2790
  7859   00185A                     u2791:
  7860   00185A  EF47  F00C         	goto	l3495
  7861   00185E                     u2790:
  7862   00185E  8022               	bsf	___fldiv@grs^0,0,c
  7863   001860  EF47  F00C         	goto	l3495
  7864   001864                     l3489:
  7865   001864  90D8               	bcf	status,0,c
  7866   001866  360F               	rlcf	___fldiv@b^0,f,c
  7867   001868  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7868   00186A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7869   00186C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7870   00186E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7871   001870  EF3C  F00C         	goto	u2801
  7872   001874  EF3E  F00C         	goto	u2800
  7873   001878                     u2801:
  7874   001878  EF3F  F00C         	goto	l1403
  7875   00187C                     u2800:
  7876   00187C  800F               	bsf	___fldiv@b^0,0,c
  7877   00187E                     l1403:
  7878   00187E  90D8               	bcf	status,0,c
  7879   001880  3622               	rlcf	___fldiv@grs^0,f,c
  7880   001882  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7881   001884  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7882   001886  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7883   001888  0620               	decf	___fldiv@new_exp^0,f,c
  7884   00188A  A0D8               	btfss	status,0,c
  7885   00188C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7886   00188E                     l3495:
  7887   00188E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7888   001890  EF4C  F00C         	goto	u2811
  7889   001894  EF4E  F00C         	goto	u2810
  7890   001898                     u2811:
  7891   001898  EF32  F00C         	goto	l3489
  7892   00189C                     u2810:
  7893   00189C  0E00               	movlw	0
  7894   00189E  6E27               	movwf	___fldiv@aexp^0,c
  7895   0018A0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7896   0018A2  EF55  F00C         	goto	u2821
  7897   0018A6  EF57  F00C         	goto	u2820
  7898   0018AA                     u2821:
  7899   0018AA  EF7B  F00C         	goto	l1405
  7900   0018AE                     u2820:
  7901   0018AE  0EFF               	movlw	255
  7902   0018B0  1422               	andwf	___fldiv@grs^0,w,c
  7903   0018B2  6E17               	movwf	??___fldiv^0,c
  7904   0018B4  0EFF               	movlw	255
  7905   0018B6  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7906   0018B8  6E18               	movwf	(??___fldiv+1)^0,c
  7907   0018BA  0EFF               	movlw	255
  7908   0018BC  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7909   0018BE  6E19               	movwf	(??___fldiv+2)^0,c
  7910   0018C0  0E7F               	movlw	127
  7911   0018C2  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7912   0018C4  6E1A               	movwf	(??___fldiv+3)^0,c
  7913   0018C6  5017               	movf	??___fldiv^0,w,c
  7914   0018C8  1018               	iorwf	(??___fldiv+1)^0,w,c
  7915   0018CA  1019               	iorwf	(??___fldiv+2)^0,w,c
  7916   0018CC  101A               	iorwf	(??___fldiv+3)^0,w,c
  7917   0018CE  B4D8               	btfsc	status,2,c
  7918   0018D0  EF6C  F00C         	goto	u2831
  7919   0018D4  EF6E  F00C         	goto	u2830
  7920   0018D8                     u2831:
  7921   0018D8  EF72  F00C         	goto	l1406
  7922   0018DC                     u2830:
  7923   0018DC                     l3503:
  7924   0018DC  0E01               	movlw	1
  7925   0018DE  6E27               	movwf	___fldiv@aexp^0,c
  7926   0018E0  EF7B  F00C         	goto	l1405
  7927   0018E4                     l1406:
  7928   0018E4  A00F               	btfss	___fldiv@b^0,0,c
  7929   0018E6  EF77  F00C         	goto	u2841
  7930   0018EA  EF79  F00C         	goto	u2840
  7931   0018EE                     u2841:
  7932   0018EE  EF7B  F00C         	goto	l1405
  7933   0018F2                     u2840:
  7934   0018F2  EF6E  F00C         	goto	l3503
  7935   0018F6                     l1405:
  7936   0018F6  5027               	movf	___fldiv@aexp^0,w,c
  7937   0018F8  B4D8               	btfsc	status,2,c
  7938   0018FA  EF81  F00C         	goto	u2851
  7939   0018FE  EF83  F00C         	goto	u2850
  7940   001902                     u2851:
  7941   001902  EFA7  F00C         	goto	l3515
  7942   001906                     u2850:
  7943   001906  0E01               	movlw	1
  7944   001908  260F               	addwf	___fldiv@b^0,f,c
  7945   00190A  0E00               	movlw	0
  7946   00190C  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7947   00190E  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7948   001910  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7949   001912  A012               	btfss	(___fldiv@b+3)^0,0,c
  7950   001914  EF8E  F00C         	goto	u2861
  7951   001918  EF90  F00C         	goto	u2860
  7952   00191C                     u2861:
  7953   00191C  EFA7  F00C         	goto	l3515
  7954   001920                     u2860:
  7955   001920  C00F  F017         	movff	___fldiv@b,??___fldiv
  7956   001924  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7957   001928  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7958   00192C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7959   001930  341A               	rlcf	(??___fldiv+3)^0,w,c
  7960   001932  321A               	rrcf	(??___fldiv+3)^0,f,c
  7961   001934  3219               	rrcf	(??___fldiv+2)^0,f,c
  7962   001936  3218               	rrcf	(??___fldiv+1)^0,f,c
  7963   001938  3217               	rrcf	??___fldiv^0,f,c
  7964   00193A  C017  F00F         	movff	??___fldiv,___fldiv@b
  7965   00193E  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7966   001942  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7967   001946  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7968   00194A  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7969   00194C  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7970   00194E                     l3515:
  7971   00194E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7972   001950  EFB2  F00C         	goto	u2871
  7973   001954  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7974   001956  E108               	bnz	u2870
  7975   001958  2820               	incf	___fldiv@new_exp^0,w,c
  7976   00195A  A0D8               	btfss	status,0,c
  7977   00195C  EFB2  F00C         	goto	u2871
  7978   001960  EFB4  F00C         	goto	u2870
  7979   001964                     u2871:
  7980   001964  EFBF  F00C         	goto	l3519
  7981   001968                     u2870:
  7982   001968  0E00               	movlw	0
  7983   00196A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7984   00196C  6820               	setf	___fldiv@new_exp^0,c
  7985   00196E  0E00               	movlw	0
  7986   001970  6E0F               	movwf	___fldiv@b^0,c
  7987   001972  0E00               	movlw	0
  7988   001974  6E10               	movwf	(___fldiv@b+1)^0,c
  7989   001976  0E00               	movlw	0
  7990   001978  6E11               	movwf	(___fldiv@b+2)^0,c
  7991   00197A  0E00               	movlw	0
  7992   00197C  6E12               	movwf	(___fldiv@b+3)^0,c
  7993   00197E                     l3519:
  7994   00197E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7995   001980  EFCC  F00C         	goto	u2880
  7996   001984  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7997   001986  E106               	bnz	u2881
  7998   001988  0420               	decf	___fldiv@new_exp^0,w,c
  7999   00198A  B0D8               	btfsc	status,0,c
  8000   00198C  EFCA  F00C         	goto	u2881
  8001   001990  EFCC  F00C         	goto	u2880
  8002   001994                     u2881:
  8003   001994  EFDA  F00C         	goto	l3523
  8004   001998                     u2880:
  8005   001998  0E00               	movlw	0
  8006   00199A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8007   00199C  0E00               	movlw	0
  8008   00199E  6E20               	movwf	___fldiv@new_exp^0,c
  8009   0019A0  0E00               	movlw	0
  8010   0019A2  6E0F               	movwf	___fldiv@b^0,c
  8011   0019A4  0E00               	movlw	0
  8012   0019A6  6E10               	movwf	(___fldiv@b+1)^0,c
  8013   0019A8  0E00               	movlw	0
  8014   0019AA  6E11               	movwf	(___fldiv@b+2)^0,c
  8015   0019AC  0E00               	movlw	0
  8016   0019AE  6E12               	movwf	(___fldiv@b+3)^0,c
  8017   0019B0  0E00               	movlw	0
  8018   0019B2  6E1F               	movwf	___fldiv@sign^0,c
  8019   0019B4                     l3523:
  8020   0019B4  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8021   0019B8  A026               	btfss	___fldiv@bexp^0,0,c
  8022   0019BA  EFE1  F00C         	goto	u2891
  8023   0019BE  EFE3  F00C         	goto	u2890
  8024   0019C2                     u2891:
  8025   0019C2  EFE6  F00C         	goto	l3529
  8026   0019C6                     u2890:
  8027   0019C6  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8028   0019C8  EFE7  F00C         	goto	l3531
  8029   0019CC                     l3529:
  8030   0019CC  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8031   0019CE                     l3531:
  8032   0019CE  90D8               	bcf	status,0,c
  8033   0019D0  3026               	rrcf	___fldiv@bexp^0,w,c
  8034   0019D2  6E12               	movwf	(___fldiv@b+3)^0,c
  8035   0019D4  EF9D  F00B         	goto	l3445
  8036   0019D8                     l1392:
  8037   0019D8  0012               	return		;funcret
  8038   0019DA                     __end_of___fldiv:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _clear_log *****************
  8042 ;; Defined at:
  8043 ;;		line 20 in file "clear_log.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;		None
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;		None
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8057 ;;      Params:         0       0       0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0       0       0
  8059 ;;      Temps:          2       0       0       0       0       0       0
  8060 ;;      Totals:         2       0       0       0       0       0       0
  8061 ;;Total ram usage:        2 bytes
  8062 ;; Hardware stack levels used: 1
  8063 ;; Hardware stack levels required when called: 2
  8064 ;; This function calls:
  8065 ;;		_clcd_print
  8066 ;;		_clcd_write
  8067 ;; This function is called by:
  8068 ;;		_main
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text34
  8073   000422                     __ptext34:
  8074                           	callstack 0
  8075   000422                     _clear_log:
  8076                           	callstack 28
  8077   000422                     
  8078                           ;clear_log.c: 21:     clcd_print("ALL LOGS CLEARED", (0x80 + (0)));
  8079   000422  0EF6               	movlw	low STR_19
  8080   000424  6E03               	movwf	clcd_print@data^0,c
  8081   000426  0E2E               	movlw	high STR_19
  8082   000428  6E04               	movwf	(clcd_print@data+1)^0,c
  8083   00042A  0E80               	movlw	128
  8084   00042C  6E05               	movwf	clcd_print@addr^0,c
  8085   00042E  EC9D  F002         	call	_clcd_print	;wreg free
  8086   000432                     
  8087                           ;clear_log.c: 22:     _delay((unsigned long)((500)*(20000000/4000.0)));
  8088   000432  0E0D               	movlw	13
  8089   000434  6E07               	movwf	(??_clear_log+1)^0,c
  8090   000436  0EAF               	movlw	175
  8091   000438  6E06               	movwf	??_clear_log^0,c
  8092   00043A  0EB6               	movlw	182
  8093   00043C                     u4647:
  8094   00043C  2EE8               	decfsz	wreg,f,c
  8095   00043E  D7FE               	bra	u4647
  8096   000440  2E06               	decfsz	??_clear_log^0,f,c
  8097   000442  D7FC               	bra	u4647
  8098   000444  2E07               	decfsz	(??_clear_log+1)^0,f,c
  8099   000446  D7FA               	bra	u4647
  8100   000448  D000               	nop2	
  8101   00044A                     
  8102                           ;clear_log.c: 23:     address = 0x00;
  8103   00044A  0E00               	movlw	0
  8104   00044C  0100               	movlb	0	; () banked
  8105   00044E  6F7D               	movwf	(_address+1)& (0+255),b
  8106   000450  0E00               	movlw	0
  8107   000452  6F7C               	movwf	_address& (0+255),b
  8108   000454                     
  8109                           ; BSR set to: 0
  8110                           ;clear_log.c: 24:     clear_flag = 1;
  8111   000454  0E00               	movlw	0
  8112   000456  6F91               	movwf	(_clear_flag+1)& (0+255),b
  8113   000458  0E01               	movlw	1
  8114   00045A  6F90               	movwf	_clear_flag& (0+255),b
  8115   00045C                     
  8116                           ; BSR set to: 0
  8117                           ;clear_log.c: 25:     shift = 2;
  8118   00045C  0E00               	movlw	0
  8119   00045E  6E5B               	movwf	(_shift+1)^0,c
  8120   000460  0E02               	movlw	2
  8121   000462  6E5A               	movwf	_shift^0,c
  8122   000464                     
  8123                           ; BSR set to: 0
  8124                           ;clear_log.c: 26:     event_count=0;
  8125   000464  0E00               	movlw	0
  8126   000466  6E45               	movwf	(_event_count+1)^0,c
  8127   000468  0E00               	movlw	0
  8128   00046A  6E44               	movwf	_event_count^0,c
  8129   00046C                     
  8130                           ; BSR set to: 0
  8131                           ;clear_log.c: 27:     clcd_write(0x01, 0);
  8132   00046C  0E00               	movlw	0
  8133   00046E  6E01               	movwf	clcd_write@control_bit^0,c
  8134   000470  0E01               	movlw	1
  8135   000472  EC65  F001         	call	_clcd_write
  8136   000476  0012               	return		;funcret
  8137   000478                     __end_of_clear_log:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function _change_password *****************
  8141 ;; Defined at:
  8142 ;;		line 26 in file "change_password.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  w               2   24[COMRAM] unsigned int 
  8147 ;;  j               2   22[COMRAM] int 
  8148 ;;  key             2   20[COMRAM] int 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8158 ;;      Params:         0       0       0       0       0       0       0
  8159 ;;      Locals:         6       0       0       0       0       0       0
  8160 ;;      Temps:          2       0       0       0       0       0       0
  8161 ;;      Totals:         8       0       0       0       0       0       0
  8162 ;;Total ram usage:        8 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 3
  8165 ;; This function calls:
  8166 ;;		_clcd_print
  8167 ;;		_clcd_putch
  8168 ;;		_clcd_write
  8169 ;;		_read_switches
  8170 ;;		_write_external_eeprom
  8171 ;; This function is called by:
  8172 ;;		_main
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text35
  8177   00223A                     __ptext35:
  8178                           	callstack 0
  8179   00223A                     _change_password:
  8180                           	callstack 27
  8181   00223A                     
  8182                           ;change_password.c: 27:     static int i = 0, count2 = 4, delay12;;change_password.c: 28
      +                          :     int key = read_switches(0);
  8183   00223A  0E00               	movlw	0
  8184   00223C  EC0D  F003         	call	_read_switches
  8185   002240  6E13               	movwf	??_change_password^0,c
  8186   002242  5013               	movf	??_change_password^0,w,c
  8187   002244  6E15               	movwf	change_password@key^0,c
  8188   002246  6A16               	clrf	(change_password@key+1)^0,c
  8189   002248                     
  8190                           ;change_password.c: 29:     static int flag = 1;;change_password.c: 30:     if (flag == 
      +                          1) {
  8191   002248  0100               	movlb	0	; () banked
  8192   00224A  059F               	decf	change_password@flag& (0+255),w,b
  8193   00224C  11A0               	iorwf	(change_password@flag+1)& (0+255),w,b
  8194   00224E  A4D8               	btfss	status,2,c
  8195   002250  EF2C  F011         	goto	u4211
  8196   002254  EF2E  F011         	goto	u4210
  8197   002258                     u4211:
  8198   002258  EFF2  F011         	goto	l4365
  8199   00225C                     u4210:
  8200   00225C                     
  8201                           ; BSR set to: 0
  8202                           ;change_password.c: 31:         clcd_print("Enter password", (0x80 + (0)));
  8203   00225C  0E09               	movlw	low (STR_11+2)
  8204   00225E  6E03               	movwf	clcd_print@data^0,c
  8205   002260  0E2F               	movlw	high (STR_11+2)
  8206   002262  6E04               	movwf	(clcd_print@data+1)^0,c
  8207   002264  0E80               	movlw	128
  8208   002266  6E05               	movwf	clcd_print@addr^0,c
  8209   002268  EC9D  F002         	call	_clcd_print	;wreg free
  8210   00226C                     
  8211                           ;change_password.c: 32:         if (11 == key) {
  8212   00226C  0E0B               	movlw	11
  8213   00226E  1815               	xorwf	change_password@key^0,w,c
  8214   002270  1016               	iorwf	(change_password@key+1)^0,w,c
  8215   002272  A4D8               	btfss	status,2,c
  8216   002274  EF3E  F011         	goto	u4221
  8217   002278  EF40  F011         	goto	u4220
  8218   00227C                     u4221:
  8219   00227C  EF44  F011         	goto	l4317
  8220   002280                     u4220:
  8221   002280                     
  8222                           ;change_password.c: 33:             delay++;
  8223   002280  4A4E               	infsnz	_delay^0,f,c
  8224   002282  2A4F               	incf	(_delay+1)^0,f,c
  8225                           
  8226                           ;change_password.c: 34:         } else if (delay > 0 && delay < 500) {
  8227   002284  EF7B  F011         	goto	l4333
  8228   002288                     l4317:
  8229   002288  BE4F               	btfsc	(_delay+1)^0,7,c
  8230   00228A  EF4F  F011         	goto	u4231
  8231   00228E  504F               	movf	(_delay+1)^0,w,c
  8232   002290  E108               	bnz	u4230
  8233   002292  044E               	decf	_delay^0,w,c
  8234   002294  A0D8               	btfss	status,0,c
  8235   002296  EF4F  F011         	goto	u4231
  8236   00229A  EF51  F011         	goto	u4230
  8237   00229E                     u4231:
  8238   00229E  EF77  F011         	goto	l4331
  8239   0022A2                     u4230:
  8240   0022A2  BE4F               	btfsc	(_delay+1)^0,7,c
  8241   0022A4  EF5F  F011         	goto	u4240
  8242   0022A8  0EF4               	movlw	244
  8243   0022AA  5C4E               	subwf	_delay^0,w,c
  8244   0022AC  0E01               	movlw	1
  8245   0022AE  584F               	subwfb	(_delay+1)^0,w,c
  8246   0022B0  B0D8               	btfsc	status,0,c
  8247   0022B2  EF5D  F011         	goto	u4241
  8248   0022B6  EF5F  F011         	goto	u4240
  8249   0022BA                     u4241:
  8250   0022BA  EF77  F011         	goto	l4331
  8251   0022BE                     u4240:
  8252   0022BE                     
  8253                           ;change_password.c: 35:             delay = 0;
  8254   0022BE  0E00               	movlw	0
  8255   0022C0  6E4F               	movwf	(_delay+1)^0,c
  8256   0022C2  0E00               	movlw	0
  8257   0022C4  6E4E               	movwf	_delay^0,c
  8258   0022C6                     
  8259                           ;change_password.c: 36:             clcd_putch('*', (0xC0 + (i)));
  8260   0022C6  5048               	movf	change_password@i^0,w,c
  8261   0022C8  0FC0               	addlw	192
  8262   0022CA  6E0F               	movwf	clcd_putch@addr^0,c
  8263   0022CC  0E2A               	movlw	42
  8264   0022CE  ECE7  F000         	call	_clcd_putch
  8265   0022D2                     
  8266                           ;change_password.c: 37:             new[i++] = '1';
  8267   0022D2  5048               	movf	change_password@i^0,w,c
  8268   0022D4  0F64               	addlw	low _new
  8269   0022D6  6ED9               	movwf	fsr2l,c
  8270   0022D8  6ADA               	clrf	fsr2h,c
  8271   0022DA  0E31               	movlw	49
  8272   0022DC  6EDF               	movwf	indf2,c
  8273   0022DE  4A48               	infsnz	change_password@i^0,f,c
  8274   0022E0  2A49               	incf	(change_password@i+1)^0,f,c
  8275   0022E2                     
  8276                           ;change_password.c: 38:             count2--;
  8277   0022E2  0100               	movlb	0	; () banked
  8278   0022E4  07A1               	decf	change_password@count2& (0+255),f,b
  8279   0022E6  A0D8               	btfss	status,0,c
  8280   0022E8  07A2               	decf	(change_password@count2+1)& (0+255),f,b
  8281                           
  8282                           ;change_password.c: 39:         } else {
  8283   0022EA  EF7B  F011         	goto	l4333
  8284   0022EE                     l4331:
  8285                           
  8286                           ;change_password.c: 40:             delay = 0;
  8287   0022EE  0E00               	movlw	0
  8288   0022F0  6E4F               	movwf	(_delay+1)^0,c
  8289   0022F2  0E00               	movlw	0
  8290   0022F4  6E4E               	movwf	_delay^0,c
  8291   0022F6                     l4333:
  8292                           
  8293                           ;change_password.c: 42:         if (12 == key) {
  8294   0022F6  0E0C               	movlw	12
  8295   0022F8  1815               	xorwf	change_password@key^0,w,c
  8296   0022FA  1016               	iorwf	(change_password@key+1)^0,w,c
  8297   0022FC  A4D8               	btfss	status,2,c
  8298   0022FE  EF83  F011         	goto	u4251
  8299   002302  EF85  F011         	goto	u4250
  8300   002306                     u4251:
  8301   002306  EFA4  F011         	goto	l4345
  8302   00230A                     u4250:
  8303   00230A                     
  8304                           ;change_password.c: 43:             delay12++;
  8305   00230A  4A46               	infsnz	change_password@delay12^0,f,c
  8306   00230C  2A47               	incf	(change_password@delay12+1)^0,f,c
  8307   00230E                     
  8308                           ;change_password.c: 44:             if (delay12 > 500) {
  8309   00230E  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8310   002310  EF93  F011         	goto	u4261
  8311   002314  0EF5               	movlw	245
  8312   002316  5C46               	subwf	change_password@delay12^0,w,c
  8313   002318  0E01               	movlw	1
  8314   00231A  5847               	subwfb	(change_password@delay12+1)^0,w,c
  8315   00231C  A0D8               	btfss	status,0,c
  8316   00231E  EF93  F011         	goto	u4261
  8317   002322  EF95  F011         	goto	u4260
  8318   002326                     u4261:
  8319   002326  EFD5  F011         	goto	l4359
  8320   00232A                     u4260:
  8321   00232A                     
  8322                           ;change_password.c: 45:                 delay12 = 0;
  8323   00232A  0E00               	movlw	0
  8324   00232C  6E47               	movwf	(change_password@delay12+1)^0,c
  8325   00232E  0E00               	movlw	0
  8326   002330  6E46               	movwf	change_password@delay12^0,c
  8327                           
  8328                           ;change_password.c: 46:                 shift = 2;
  8329   002332  0E00               	movlw	0
  8330   002334  6E5B               	movwf	(_shift+1)^0,c
  8331   002336  0E02               	movlw	2
  8332   002338  6E5A               	movwf	_shift^0,c
  8333   00233A                     
  8334                           ;change_password.c: 47:                 clcd_write(0x01, 0);
  8335   00233A  0E00               	movlw	0
  8336   00233C  6E01               	movwf	clcd_write@control_bit^0,c
  8337   00233E  0E01               	movlw	1
  8338   002340  EC65  F001         	call	_clcd_write
  8339   002344  EF69  F013         	goto	l473
  8340   002348                     l4345:
  8341   002348  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8342   00234A  EFAF  F011         	goto	u4271
  8343   00234E  5047               	movf	(change_password@delay12+1)^0,w,c
  8344   002350  E108               	bnz	u4270
  8345   002352  0446               	decf	change_password@delay12^0,w,c
  8346   002354  A0D8               	btfss	status,0,c
  8347   002356  EFAF  F011         	goto	u4271
  8348   00235A  EFB1  F011         	goto	u4270
  8349   00235E                     u4271:
  8350   00235E  EFD5  F011         	goto	l4359
  8351   002362                     u4270:
  8352   002362  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8353   002364  EFBF  F011         	goto	u4280
  8354   002368  0EF4               	movlw	244
  8355   00236A  5C46               	subwf	change_password@delay12^0,w,c
  8356   00236C  0E01               	movlw	1
  8357   00236E  5847               	subwfb	(change_password@delay12+1)^0,w,c
  8358   002370  B0D8               	btfsc	status,0,c
  8359   002372  EFBD  F011         	goto	u4281
  8360   002376  EFBF  F011         	goto	u4280
  8361   00237A                     u4281:
  8362   00237A  EFD5  F011         	goto	l4359
  8363   00237E                     u4280:
  8364   00237E                     
  8365                           ;change_password.c: 51:             delay12 = 0;
  8366   00237E  0E00               	movlw	0
  8367   002380  6E47               	movwf	(change_password@delay12+1)^0,c
  8368   002382  0E00               	movlw	0
  8369   002384  6E46               	movwf	change_password@delay12^0,c
  8370   002386                     
  8371                           ;change_password.c: 52:             clcd_putch('*', (0xC0 + (i)));
  8372   002386  5048               	movf	change_password@i^0,w,c
  8373   002388  0FC0               	addlw	192
  8374   00238A  6E0F               	movwf	clcd_putch@addr^0,c
  8375   00238C  0E2A               	movlw	42
  8376   00238E  ECE7  F000         	call	_clcd_putch
  8377   002392                     
  8378                           ;change_password.c: 53:             new[i++] = '0';
  8379   002392  5048               	movf	change_password@i^0,w,c
  8380   002394  0F64               	addlw	low _new
  8381   002396  6ED9               	movwf	fsr2l,c
  8382   002398  6ADA               	clrf	fsr2h,c
  8383   00239A  0E30               	movlw	48
  8384   00239C  6EDF               	movwf	indf2,c
  8385   00239E  4A48               	infsnz	change_password@i^0,f,c
  8386   0023A0  2A49               	incf	(change_password@i+1)^0,f,c
  8387   0023A2                     
  8388                           ;change_password.c: 54:             count2--;
  8389   0023A2  0100               	movlb	0	; () banked
  8390   0023A4  07A1               	decf	change_password@count2& (0+255),f,b
  8391   0023A6  A0D8               	btfss	status,0,c
  8392   0023A8  07A2               	decf	(change_password@count2+1)& (0+255),f,b
  8393   0023AA                     l4359:
  8394                           
  8395                           ;change_password.c: 57:         if (count2 == 0) {
  8396   0023AA  0100               	movlb	0	; () banked
  8397   0023AC  51A1               	movf	change_password@count2& (0+255),w,b
  8398   0023AE  11A2               	iorwf	(change_password@count2+1)& (0+255),w,b
  8399   0023B0  A4D8               	btfss	status,2,c
  8400   0023B2  EFDD  F011         	goto	u4291
  8401   0023B6  EFDF  F011         	goto	u4290
  8402   0023BA                     u4291:
  8403   0023BA  EFCA  F012         	goto	l4423
  8404   0023BE                     u4290:
  8405   0023BE                     
  8406                           ; BSR set to: 0
  8407                           ;change_password.c: 58:             flag = 2;
  8408   0023BE  0E00               	movlw	0
  8409   0023C0  6FA0               	movwf	(change_password@flag+1)& (0+255),b
  8410   0023C2  0E02               	movlw	2
  8411   0023C4  6F9F               	movwf	change_password@flag& (0+255),b
  8412                           
  8413                           ;change_password.c: 59:             i = 0;
  8414   0023C6  0E00               	movlw	0
  8415   0023C8  6E49               	movwf	(change_password@i+1)^0,c
  8416   0023CA  0E00               	movlw	0
  8417   0023CC  6E48               	movwf	change_password@i^0,c
  8418                           
  8419                           ;change_password.c: 60:             count2 = 4;
  8420   0023CE  0E00               	movlw	0
  8421   0023D0  6FA2               	movwf	(change_password@count2+1)& (0+255),b
  8422   0023D2  0E04               	movlw	4
  8423   0023D4  6FA1               	movwf	change_password@count2& (0+255),b
  8424   0023D6                     
  8425                           ; BSR set to: 0
  8426                           ;change_password.c: 61:             clcd_write(0x01, 0);
  8427   0023D6  0E00               	movlw	0
  8428   0023D8  6E01               	movwf	clcd_write@control_bit^0,c
  8429   0023DA  0E01               	movlw	1
  8430   0023DC  EC65  F001         	call	_clcd_write
  8431   0023E0  EFCA  F012         	goto	l4423
  8432   0023E4                     l4365:
  8433                           
  8434                           ; BSR set to: 0
  8435   0023E4  0E02               	movlw	2
  8436   0023E6  199F               	xorwf	change_password@flag& (0+255),w,b
  8437   0023E8  11A0               	iorwf	(change_password@flag+1)& (0+255),w,b
  8438   0023EA  A4D8               	btfss	status,2,c
  8439   0023EC  EFFA  F011         	goto	u4301
  8440   0023F0  EFFC  F011         	goto	u4300
  8441   0023F4                     u4301:
  8442   0023F4  EFCA  F012         	goto	l4423
  8443   0023F8                     u4300:
  8444   0023F8                     
  8445                           ; BSR set to: 0
  8446                           ;change_password.c: 64:         clcd_print("ReEnter password", (0x80 + (0)));
  8447   0023F8  0E07               	movlw	low STR_11
  8448   0023FA  6E03               	movwf	clcd_print@data^0,c
  8449   0023FC  0E2F               	movlw	high STR_11
  8450   0023FE  6E04               	movwf	(clcd_print@data+1)^0,c
  8451   002400  0E80               	movlw	128
  8452   002402  6E05               	movwf	clcd_print@addr^0,c
  8453   002404  EC9D  F002         	call	_clcd_print	;wreg free
  8454   002408                     
  8455                           ;change_password.c: 65:         if (11 == key) {
  8456   002408  0E0B               	movlw	11
  8457   00240A  1815               	xorwf	change_password@key^0,w,c
  8458   00240C  1016               	iorwf	(change_password@key+1)^0,w,c
  8459   00240E  A4D8               	btfss	status,2,c
  8460   002410  EF0C  F012         	goto	u4311
  8461   002414  EF0E  F012         	goto	u4310
  8462   002418                     u4311:
  8463   002418  EF24  F012         	goto	l4377
  8464   00241C                     u4310:
  8465   00241C                     
  8466                           ;change_password.c: 66:             delay++;
  8467   00241C  4A4E               	infsnz	_delay^0,f,c
  8468   00241E  2A4F               	incf	(_delay+1)^0,f,c
  8469   002420                     
  8470                           ;change_password.c: 67:             if (delay > 500) {
  8471   002420  BE4F               	btfsc	(_delay+1)^0,7,c
  8472   002422  EF1C  F012         	goto	u4321
  8473   002426  0EF5               	movlw	245
  8474   002428  5C4E               	subwf	_delay^0,w,c
  8475   00242A  0E01               	movlw	1
  8476   00242C  584F               	subwfb	(_delay+1)^0,w,c
  8477   00242E  A0D8               	btfss	status,0,c
  8478   002430  EF1C  F012         	goto	u4321
  8479   002434  EF1E  F012         	goto	u4320
  8480   002438                     u4321:
  8481   002438  EF55  F012         	goto	l4391
  8482   00243C                     u4320:
  8483   00243C                     
  8484                           ;change_password.c: 68:                 delay = 0;
  8485   00243C  0E00               	movlw	0
  8486   00243E  6E4F               	movwf	(_delay+1)^0,c
  8487   002440  0E00               	movlw	0
  8488   002442  6E4E               	movwf	_delay^0,c
  8489   002444  EF55  F012         	goto	l4391
  8490   002448                     l4377:
  8491   002448  BE4F               	btfsc	(_delay+1)^0,7,c
  8492   00244A  EF2F  F012         	goto	u4331
  8493   00244E  504F               	movf	(_delay+1)^0,w,c
  8494   002450  E108               	bnz	u4330
  8495   002452  044E               	decf	_delay^0,w,c
  8496   002454  A0D8               	btfss	status,0,c
  8497   002456  EF2F  F012         	goto	u4331
  8498   00245A  EF31  F012         	goto	u4330
  8499   00245E                     u4331:
  8500   00245E  EF55  F012         	goto	l4391
  8501   002462                     u4330:
  8502   002462  BE4F               	btfsc	(_delay+1)^0,7,c
  8503   002464  EF3F  F012         	goto	u4340
  8504   002468  0EF4               	movlw	244
  8505   00246A  5C4E               	subwf	_delay^0,w,c
  8506   00246C  0E01               	movlw	1
  8507   00246E  584F               	subwfb	(_delay+1)^0,w,c
  8508   002470  B0D8               	btfsc	status,0,c
  8509   002472  EF3D  F012         	goto	u4341
  8510   002476  EF3F  F012         	goto	u4340
  8511   00247A                     u4341:
  8512   00247A  EF55  F012         	goto	l4391
  8513   00247E                     u4340:
  8514   00247E                     
  8515                           ;change_password.c: 71:             delay = 0;
  8516   00247E  0E00               	movlw	0
  8517   002480  6E4F               	movwf	(_delay+1)^0,c
  8518   002482  0E00               	movlw	0
  8519   002484  6E4E               	movwf	_delay^0,c
  8520   002486                     
  8521                           ;change_password.c: 72:             clcd_putch('*', (0xC0 + (i)));
  8522   002486  5048               	movf	change_password@i^0,w,c
  8523   002488  0FC0               	addlw	192
  8524   00248A  6E0F               	movwf	clcd_putch@addr^0,c
  8525   00248C  0E2A               	movlw	42
  8526   00248E  ECE7  F000         	call	_clcd_putch
  8527   002492                     
  8528                           ;change_password.c: 73:             renew[i++] = '1';
  8529   002492  5048               	movf	change_password@i^0,w,c
  8530   002494  0F60               	addlw	low _renew
  8531   002496  6ED9               	movwf	fsr2l,c
  8532   002498  6ADA               	clrf	fsr2h,c
  8533   00249A  0E31               	movlw	49
  8534   00249C  6EDF               	movwf	indf2,c
  8535   00249E  4A48               	infsnz	change_password@i^0,f,c
  8536   0024A0  2A49               	incf	(change_password@i+1)^0,f,c
  8537   0024A2                     
  8538                           ;change_password.c: 74:             count2--;
  8539   0024A2  0100               	movlb	0	; () banked
  8540   0024A4  07A1               	decf	change_password@count2& (0+255),f,b
  8541   0024A6  A0D8               	btfss	status,0,c
  8542   0024A8  07A2               	decf	(change_password@count2+1)& (0+255),f,b
  8543   0024AA                     l4391:
  8544                           
  8545                           ;change_password.c: 76:         if (12 == key) {
  8546   0024AA  0E0C               	movlw	12
  8547   0024AC  1815               	xorwf	change_password@key^0,w,c
  8548   0024AE  1016               	iorwf	(change_password@key+1)^0,w,c
  8549   0024B0  A4D8               	btfss	status,2,c
  8550   0024B2  EF5D  F012         	goto	u4351
  8551   0024B6  EF5F  F012         	goto	u4350
  8552   0024BA                     u4351:
  8553   0024BA  EF7E  F012         	goto	l4403
  8554   0024BE                     u4350:
  8555   0024BE                     
  8556                           ;change_password.c: 77:             delay12++;
  8557   0024BE  4A46               	infsnz	change_password@delay12^0,f,c
  8558   0024C0  2A47               	incf	(change_password@delay12+1)^0,f,c
  8559   0024C2                     
  8560                           ;change_password.c: 78:             if (delay12 > 500) {
  8561   0024C2  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8562   0024C4  EF6D  F012         	goto	u4361
  8563   0024C8  0EF5               	movlw	245
  8564   0024CA  5C46               	subwf	change_password@delay12^0,w,c
  8565   0024CC  0E01               	movlw	1
  8566   0024CE  5847               	subwfb	(change_password@delay12+1)^0,w,c
  8567   0024D0  A0D8               	btfss	status,0,c
  8568   0024D2  EF6D  F012         	goto	u4361
  8569   0024D6  EF6F  F012         	goto	u4360
  8570   0024DA                     u4361:
  8571   0024DA  EFAF  F012         	goto	l4417
  8572   0024DE                     u4360:
  8573   0024DE                     
  8574                           ;change_password.c: 79:                 delay12 = 0;
  8575   0024DE  0E00               	movlw	0
  8576   0024E0  6E47               	movwf	(change_password@delay12+1)^0,c
  8577   0024E2  0E00               	movlw	0
  8578   0024E4  6E46               	movwf	change_password@delay12^0,c
  8579                           
  8580                           ;change_password.c: 80:                 shift = 2;
  8581   0024E6  0E00               	movlw	0
  8582   0024E8  6E5B               	movwf	(_shift+1)^0,c
  8583   0024EA  0E02               	movlw	2
  8584   0024EC  6E5A               	movwf	_shift^0,c
  8585   0024EE                     
  8586                           ;change_password.c: 81:                 clcd_write(0x01, 0);
  8587   0024EE  0E00               	movlw	0
  8588   0024F0  6E01               	movwf	clcd_write@control_bit^0,c
  8589   0024F2  0E01               	movlw	1
  8590   0024F4  EC65  F001         	call	_clcd_write
  8591   0024F8  EF69  F013         	goto	l473
  8592   0024FC                     l4403:
  8593   0024FC  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8594   0024FE  EF89  F012         	goto	u4371
  8595   002502  5047               	movf	(change_password@delay12+1)^0,w,c
  8596   002504  E108               	bnz	u4370
  8597   002506  0446               	decf	change_password@delay12^0,w,c
  8598   002508  A0D8               	btfss	status,0,c
  8599   00250A  EF89  F012         	goto	u4371
  8600   00250E  EF8B  F012         	goto	u4370
  8601   002512                     u4371:
  8602   002512  EFAF  F012         	goto	l4417
  8603   002516                     u4370:
  8604   002516  BE47               	btfsc	(change_password@delay12+1)^0,7,c
  8605   002518  EF99  F012         	goto	u4380
  8606   00251C  0EF4               	movlw	244
  8607   00251E  5C46               	subwf	change_password@delay12^0,w,c
  8608   002520  0E01               	movlw	1
  8609   002522  5847               	subwfb	(change_password@delay12+1)^0,w,c
  8610   002524  B0D8               	btfsc	status,0,c
  8611   002526  EF97  F012         	goto	u4381
  8612   00252A  EF99  F012         	goto	u4380
  8613   00252E                     u4381:
  8614   00252E  EFAF  F012         	goto	l4417
  8615   002532                     u4380:
  8616   002532                     
  8617                           ;change_password.c: 85:             delay12 = 0;
  8618   002532  0E00               	movlw	0
  8619   002534  6E47               	movwf	(change_password@delay12+1)^0,c
  8620   002536  0E00               	movlw	0
  8621   002538  6E46               	movwf	change_password@delay12^0,c
  8622   00253A                     
  8623                           ;change_password.c: 86:             clcd_putch('*', (0xC0 + (i)));
  8624   00253A  5048               	movf	change_password@i^0,w,c
  8625   00253C  0FC0               	addlw	192
  8626   00253E  6E0F               	movwf	clcd_putch@addr^0,c
  8627   002540  0E2A               	movlw	42
  8628   002542  ECE7  F000         	call	_clcd_putch
  8629   002546                     
  8630                           ;change_password.c: 87:             renew[i++] = '0';
  8631   002546  5048               	movf	change_password@i^0,w,c
  8632   002548  0F60               	addlw	low _renew
  8633   00254A  6ED9               	movwf	fsr2l,c
  8634   00254C  6ADA               	clrf	fsr2h,c
  8635   00254E  0E30               	movlw	48
  8636   002550  6EDF               	movwf	indf2,c
  8637   002552  4A48               	infsnz	change_password@i^0,f,c
  8638   002554  2A49               	incf	(change_password@i+1)^0,f,c
  8639   002556                     
  8640                           ;change_password.c: 88:             count2--;
  8641   002556  0100               	movlb	0	; () banked
  8642   002558  07A1               	decf	change_password@count2& (0+255),f,b
  8643   00255A  A0D8               	btfss	status,0,c
  8644   00255C  07A2               	decf	(change_password@count2+1)& (0+255),f,b
  8645   00255E                     l4417:
  8646                           
  8647                           ;change_password.c: 90:         if (count2 == 0) {
  8648   00255E  0100               	movlb	0	; () banked
  8649   002560  51A1               	movf	change_password@count2& (0+255),w,b
  8650   002562  11A2               	iorwf	(change_password@count2+1)& (0+255),w,b
  8651   002564  A4D8               	btfss	status,2,c
  8652   002566  EFB7  F012         	goto	u4391
  8653   00256A  EFB9  F012         	goto	u4390
  8654   00256E                     u4391:
  8655   00256E  EFCA  F012         	goto	l4423
  8656   002572                     u4390:
  8657   002572                     
  8658                           ; BSR set to: 0
  8659                           ;change_password.c: 91:             flag = 0;
  8660   002572  0E00               	movlw	0
  8661   002574  6FA0               	movwf	(change_password@flag+1)& (0+255),b
  8662   002576  0E00               	movlw	0
  8663   002578  6F9F               	movwf	change_password@flag& (0+255),b
  8664                           
  8665                           ;change_password.c: 92:             i = 0;
  8666   00257A  0E00               	movlw	0
  8667   00257C  6E49               	movwf	(change_password@i+1)^0,c
  8668   00257E  0E00               	movlw	0
  8669   002580  6E48               	movwf	change_password@i^0,c
  8670                           
  8671                           ;change_password.c: 93:             count2 = 4;
  8672   002582  0E00               	movlw	0
  8673   002584  6FA2               	movwf	(change_password@count2+1)& (0+255),b
  8674   002586  0E04               	movlw	4
  8675   002588  6FA1               	movwf	change_password@count2& (0+255),b
  8676   00258A                     
  8677                           ; BSR set to: 0
  8678                           ;change_password.c: 94:             clcd_write(0x01, 0);
  8679   00258A  0E00               	movlw	0
  8680   00258C  6E01               	movwf	clcd_write@control_bit^0,c
  8681   00258E  0E01               	movlw	1
  8682   002590  EC65  F001         	call	_clcd_write
  8683   002594                     l4423:
  8684                           
  8685                           ;change_password.c: 98:     if (flag == 0) {
  8686   002594  0100               	movlb	0	; () banked
  8687   002596  519F               	movf	change_password@flag& (0+255),w,b
  8688   002598  11A0               	iorwf	(change_password@flag+1)& (0+255),w,b
  8689   00259A  A4D8               	btfss	status,2,c
  8690   00259C  EFD2  F012         	goto	u4401
  8691   0025A0  EFD4  F012         	goto	u4400
  8692   0025A4                     u4401:
  8693   0025A4  EF69  F013         	goto	l473
  8694   0025A8                     u4400:
  8695   0025A8                     
  8696                           ; BSR set to: 0
  8697                           ;change_password.c: 99:         for (int j = 0; j < 4; j++) {
  8698   0025A8  0E00               	movlw	0
  8699   0025AA  6E18               	movwf	(change_password@j+1)^0,c
  8700   0025AC  0E00               	movlw	0
  8701   0025AE  6E17               	movwf	change_password@j^0,c
  8702   0025B0                     l4431:
  8703                           
  8704                           ;change_password.c: 100:             if (new[j] != renew[j]) {
  8705   0025B0  5017               	movf	change_password@j^0,w,c
  8706   0025B2  0F60               	addlw	low _renew
  8707   0025B4  6ED9               	movwf	fsr2l,c
  8708   0025B6  6ADA               	clrf	fsr2h,c
  8709   0025B8  5017               	movf	change_password@j^0,w,c
  8710   0025BA  0F64               	addlw	low _new
  8711   0025BC  6EE1               	movwf	fsr1l,c
  8712   0025BE  6AE2               	clrf	fsr1h,c
  8713   0025C0  50DE               	movf	postinc2,w,c
  8714   0025C2  18E6               	xorwf	postinc1,w,c
  8715   0025C4  B4D8               	btfsc	status,2,c
  8716   0025C6  EFE7  F012         	goto	u4411
  8717   0025CA  EFE9  F012         	goto	u4410
  8718   0025CE                     u4411:
  8719   0025CE  EFEE  F012         	goto	l4435
  8720   0025D2                     u4410:
  8721   0025D2                     
  8722                           ;change_password.c: 101:                 worng = 1;
  8723   0025D2  0E00               	movlw	0
  8724   0025D4  0100               	movlb	0	; () banked
  8725   0025D6  6F85               	movwf	(_worng+1)& (0+255),b
  8726   0025D8  0E01               	movlw	1
  8727   0025DA  6F84               	movwf	_worng& (0+255),b
  8728   0025DC                     l4435:
  8729                           
  8730                           ;change_password.c: 103:         }
  8731   0025DC  4A17               	infsnz	change_password@j^0,f,c
  8732   0025DE  2A18               	incf	(change_password@j+1)^0,f,c
  8733   0025E0  BE18               	btfsc	(change_password@j+1)^0,7,c
  8734   0025E2  EFFC  F012         	goto	u4421
  8735   0025E6  5018               	movf	(change_password@j+1)^0,w,c
  8736   0025E8  E109               	bnz	u4420
  8737   0025EA  0E04               	movlw	4
  8738   0025EC  5C17               	subwf	change_password@j^0,w,c
  8739   0025EE  A0D8               	btfss	status,0,c
  8740   0025F0  EFFC  F012         	goto	u4421
  8741   0025F4  EFFE  F012         	goto	u4420
  8742   0025F8                     u4421:
  8743   0025F8  EFD8  F012         	goto	l4431
  8744   0025FC                     u4420:
  8745   0025FC                     
  8746                           ;change_password.c: 104:         if (worng == 0) {
  8747   0025FC  0100               	movlb	0	; () banked
  8748   0025FE  5184               	movf	_worng& (0+255),w,b
  8749   002600  1185               	iorwf	(_worng+1)& (0+255),w,b
  8750   002602  A4D8               	btfss	status,2,c
  8751   002604  EF06  F013         	goto	u4431
  8752   002608  EF08  F013         	goto	u4430
  8753   00260C                     u4431:
  8754   00260C  EF47  F013         	goto	l4463
  8755   002610                     u4430:
  8756   002610                     
  8757                           ; BSR set to: 0
  8758                           ;change_password.c: 105:             clcd_print("SUCCESS", (0x80 + (0)));
  8759   002610  0EE7               	movlw	low STR_12
  8760   002612  6E03               	movwf	clcd_print@data^0,c
  8761   002614  0E2F               	movlw	high STR_12
  8762   002616  6E04               	movwf	(clcd_print@data+1)^0,c
  8763   002618  0E80               	movlw	128
  8764   00261A  6E05               	movwf	clcd_print@addr^0,c
  8765   00261C  EC9D  F002         	call	_clcd_print	;wreg free
  8766   002620                     
  8767                           ;change_password.c: 106:             for (unsigned int w = 0; w < 4; w++) {
  8768   002620  0E00               	movlw	0
  8769   002622  6E1A               	movwf	(change_password@w+1)^0,c
  8770   002624  0E00               	movlw	0
  8771   002626  6E19               	movwf	change_password@w^0,c
  8772   002628                     l4449:
  8773                           
  8774                           ;change_password.c: 107:                 write_external_eeprom(0x80 + w, new[w]);
  8775   002628  5019               	movf	change_password@w^0,w,c
  8776   00262A  0F64               	addlw	low _new
  8777   00262C  6ED9               	movwf	fsr2l,c
  8778   00262E  6ADA               	clrf	fsr2h,c
  8779   002630  50DF               	movf	indf2,w,c
  8780   002632  6E0F               	movwf	write_external_eeprom@data^0,c
  8781   002634  5019               	movf	change_password@w^0,w,c
  8782   002636  0F80               	addlw	128
  8783   002638  EC82  F001         	call	_write_external_eeprom
  8784   00263C                     
  8785                           ;change_password.c: 108:             }
  8786   00263C  4A19               	infsnz	change_password@w^0,f,c
  8787   00263E  2A1A               	incf	(change_password@w+1)^0,f,c
  8788   002640  501A               	movf	(change_password@w+1)^0,w,c
  8789   002642  E109               	bnz	u4440
  8790   002644  0E04               	movlw	4
  8791   002646  5C19               	subwf	change_password@w^0,w,c
  8792   002648  A0D8               	btfss	status,0,c
  8793   00264A  EF29  F013         	goto	u4441
  8794   00264E  EF2B  F013         	goto	u4440
  8795   002652                     u4441:
  8796   002652  EF14  F013         	goto	l4449
  8797   002656                     u4440:
  8798   002656                     
  8799                           ;change_password.c: 109:             _delay((unsigned long)((500)*(20000000/4000.0)));
  8800   002656  0E0D               	movlw	13
  8801   002658  6E14               	movwf	(??_change_password+1)^0,c
  8802   00265A  0EAF               	movlw	175
  8803   00265C  6E13               	movwf	??_change_password^0,c
  8804   00265E  0EB6               	movlw	182
  8805   002660                     u4657:
  8806   002660  2EE8               	decfsz	wreg,f,c
  8807   002662  D7FE               	bra	u4657
  8808   002664  2E13               	decfsz	??_change_password^0,f,c
  8809   002666  D7FC               	bra	u4657
  8810   002668  2E14               	decfsz	(??_change_password+1)^0,f,c
  8811   00266A  D7FA               	bra	u4657
  8812   00266C  D000               	nop2	
  8813   00266E                     
  8814                           ;change_password.c: 110:             shift = 2;
  8815   00266E  0E00               	movlw	0
  8816   002670  6E5B               	movwf	(_shift+1)^0,c
  8817   002672  0E02               	movlw	2
  8818   002674  6E5A               	movwf	_shift^0,c
  8819   002676                     
  8820                           ;change_password.c: 111:             flag = 1;
  8821   002676  0E00               	movlw	0
  8822   002678  0100               	movlb	0	; () banked
  8823   00267A  6FA0               	movwf	(change_password@flag+1)& (0+255),b
  8824   00267C  0E01               	movlw	1
  8825   00267E  6F9F               	movwf	change_password@flag& (0+255),b
  8826   002680                     
  8827                           ; BSR set to: 0
  8828                           ;change_password.c: 112:             clcd_write(0x01, 0);
  8829   002680  0E00               	movlw	0
  8830   002682  6E01               	movwf	clcd_write@control_bit^0,c
  8831   002684  0E01               	movlw	1
  8832   002686  EC65  F001         	call	_clcd_write
  8833                           
  8834                           ;change_password.c: 114:         } else {
  8835   00268A  EF69  F013         	goto	l473
  8836   00268E                     l4463:
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;change_password.c: 115:             clcd_print("WORNG PASSWORD", (0x80 + (0)));
  8840   00268E  0EA7               	movlw	low STR_13
  8841   002690  6E03               	movwf	clcd_print@data^0,c
  8842   002692  0E2F               	movlw	high STR_13
  8843   002694  6E04               	movwf	(clcd_print@data+1)^0,c
  8844   002696  0E80               	movlw	128
  8845   002698  6E05               	movwf	clcd_print@addr^0,c
  8846   00269A  EC9D  F002         	call	_clcd_print	;wreg free
  8847   00269E                     
  8848                           ;change_password.c: 116:             _delay((unsigned long)((500)*(20000000/4000.0)));
  8849   00269E  0E0D               	movlw	13
  8850   0026A0  6E14               	movwf	(??_change_password+1)^0,c
  8851   0026A2  0EAF               	movlw	175
  8852   0026A4  6E13               	movwf	??_change_password^0,c
  8853   0026A6  0EB6               	movlw	182
  8854   0026A8                     u4667:
  8855   0026A8  2EE8               	decfsz	wreg,f,c
  8856   0026AA  D7FE               	bra	u4667
  8857   0026AC  2E13               	decfsz	??_change_password^0,f,c
  8858   0026AE  D7FC               	bra	u4667
  8859   0026B0  2E14               	decfsz	(??_change_password+1)^0,f,c
  8860   0026B2  D7FA               	bra	u4667
  8861   0026B4  D000               	nop2	
  8862   0026B6                     
  8863                           ;change_password.c: 117:             shift = 0;
  8864   0026B6  0E00               	movlw	0
  8865   0026B8  6E5B               	movwf	(_shift+1)^0,c
  8866   0026BA  0E00               	movlw	0
  8867   0026BC  6E5A               	movwf	_shift^0,c
  8868   0026BE                     
  8869                           ;change_password.c: 118:             flag = 1;
  8870   0026BE  0E00               	movlw	0
  8871   0026C0  0100               	movlb	0	; () banked
  8872   0026C2  6FA0               	movwf	(change_password@flag+1)& (0+255),b
  8873   0026C4  0E01               	movlw	1
  8874   0026C6  6F9F               	movwf	change_password@flag& (0+255),b
  8875   0026C8                     
  8876                           ; BSR set to: 0
  8877                           ;change_password.c: 119:             clcd_write(0x01, 0);
  8878   0026C8  0E00               	movlw	0
  8879   0026CA  6E01               	movwf	clcd_write@control_bit^0,c
  8880   0026CC  0E01               	movlw	1
  8881   0026CE  EC65  F001         	call	_clcd_write
  8882   0026D2                     l473:
  8883   0026D2  0012               	return		;funcret
  8884   0026D4                     __end_of_change_password:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function _write_external_eeprom *****************
  8888 ;; Defined at:
  8889 ;;		line 22 in file "ext_eeprom.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  address1        1    wreg     unsigned char 
  8892 ;;  data            1   14[COMRAM] unsigned char 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  address1        1   17[COMRAM] unsigned char 
  8895 ;;  i               2   15[COMRAM] unsigned int 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8905 ;;      Params:         1       0       0       0       0       0       0
  8906 ;;      Locals:         3       0       0       0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0
  8908 ;;      Totals:         4       0       0       0       0       0       0
  8909 ;;Total ram usage:        4 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 2
  8912 ;; This function calls:
  8913 ;;		_i2c_start
  8914 ;;		_i2c_stop
  8915 ;;		_i2c_write
  8916 ;; This function is called by:
  8917 ;;		_change_password
  8918 ;;		_e_store
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text36
  8923   000304                     __ptext36:
  8924                           	callstack 0
  8925   000304                     _write_external_eeprom:
  8926                           	callstack 26
  8927                           
  8928                           ;incstack = 0
  8929                           ;write_external_eeprom@address1 stored from wreg
  8930   000304  6E12               	movwf	write_external_eeprom@address1^0,c
  8931   000306                     
  8932                           ;ext_eeprom.c: 22: void write_external_eeprom(unsigned char address1, unsigned char data
      +                          );ext_eeprom.c: 23: {;ext_eeprom.c: 24:  i2c_start();
  8933   000306  EC90  F000         	call	_i2c_start	;wreg free
  8934   00030A                     
  8935                           ;ext_eeprom.c: 25:  i2c_write(0xA0);
  8936   00030A  0EA0               	movlw	160
  8937   00030C  ECA0  F000         	call	_i2c_write
  8938   000310                     
  8939                           ;ext_eeprom.c: 26:  i2c_write(address1);
  8940   000310  5012               	movf	write_external_eeprom@address1^0,w,c
  8941   000312  ECA0  F000         	call	_i2c_write
  8942   000316                     
  8943                           ;ext_eeprom.c: 27:  i2c_write(data);
  8944   000316  500F               	movf	write_external_eeprom@data^0,w,c
  8945   000318  ECA0  F000         	call	_i2c_write
  8946   00031C                     
  8947                           ;ext_eeprom.c: 28:  i2c_stop();
  8948   00031C  EC94  F000         	call	_i2c_stop	;wreg free
  8949   000320                     
  8950                           ;ext_eeprom.c: 29:  for(unsigned int i = 3000;i--;);
  8951   000320  0E0B               	movlw	11
  8952   000322  6E11               	movwf	(write_external_eeprom@i+1)^0,c
  8953   000324  0EB8               	movlw	184
  8954   000326  6E10               	movwf	write_external_eeprom@i^0,c
  8955   000328                     l3133:
  8956   000328  0610               	decf	write_external_eeprom@i^0,f,c
  8957   00032A  A0D8               	btfss	status,0,c
  8958   00032C  0611               	decf	(write_external_eeprom@i+1)^0,f,c
  8959   00032E  2810               	incf	write_external_eeprom@i^0,w,c
  8960   000330  E106               	bnz	u2391
  8961   000332  2811               	incf	(write_external_eeprom@i+1)^0,w,c
  8962   000334  A4D8               	btfss	status,2,c
  8963   000336  EF9F  F001         	goto	u2391
  8964   00033A  EFA1  F001         	goto	u2390
  8965   00033E                     u2391:
  8966   00033E  EF94  F001         	goto	l3133
  8967   000342                     u2390:
  8968   000342  0012               	return		;funcret
  8969   000344                     __end_of_write_external_eeprom:
  8970                           	callstack 0
  8971                           
  8972 ;; *************** function _i2c_write *****************
  8973 ;; Defined at:
  8974 ;;		line 49 in file "i2c.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  data            1    wreg     unsigned char 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;  data            1    0[COMRAM] unsigned char 
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8988 ;;      Params:         0       0       0       0       0       0       0
  8989 ;;      Locals:         1       0       0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0
  8991 ;;      Totals:         1       0       0       0       0       0       0
  8992 ;;Total ram usage:        1 bytes
  8993 ;; Hardware stack levels used: 1
  8994 ;; Hardware stack levels required when called: 1
  8995 ;; This function calls:
  8996 ;;		_i2c_idle
  8997 ;; This function is called by:
  8998 ;;		_write_ds1307
  8999 ;;		_read_ds1307
  9000 ;;		_write_external_eeprom
  9001 ;;		_read_external_eeprom
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text37
  9006   000140                     __ptext37:
  9007                           	callstack 0
  9008   000140                     _i2c_write:
  9009                           	callstack 27
  9010                           
  9011                           ;incstack = 0
  9012                           ;i2c_write@data stored from wreg
  9013   000140  6E01               	movwf	i2c_write@data^0,c
  9014   000142                     
  9015                           ;i2c.c: 49: void i2c_write(unsigned char data);i2c.c: 50: {;i2c.c: 51:  SSPBUF = data;
  9016   000142  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  9017   000146                     
  9018                           ;i2c.c: 52:  i2c_idle();
  9019   000146  ECB4  F000         	call	_i2c_idle	;wreg free
  9020   00014A  0012               	return		;funcret
  9021   00014C                     __end_of_i2c_write:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function _i2c_stop *****************
  9025 ;; Defined at:
  9026 ;;		line 37 in file "i2c.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9040 ;;      Params:         0       0       0       0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; Hardware stack levels required when called: 1
  9047 ;; This function calls:
  9048 ;;		_i2c_idle
  9049 ;; This function is called by:
  9050 ;;		_write_ds1307
  9051 ;;		_read_ds1307
  9052 ;;		_write_external_eeprom
  9053 ;;		_read_external_eeprom
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text38
  9058   000128                     __ptext38:
  9059                           	callstack 0
  9060   000128                     _i2c_stop:
  9061                           	callstack 27
  9062   000128                     
  9063                           ;i2c.c: 39:  PEN = 1;
  9064   000128  84C5               	bsf	4037,2,c	;volatile
  9065   00012A                     
  9066                           ;i2c.c: 40:  i2c_idle();
  9067   00012A  ECB4  F000         	call	_i2c_idle	;wreg free
  9068   00012E  0012               	return		;funcret
  9069   000130                     __end_of_i2c_stop:
  9070                           	callstack 0
  9071                           
  9072 ;; *************** function _i2c_start *****************
  9073 ;; Defined at:
  9074 ;;		line 31 in file "i2c.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9088 ;;      Params:         0       0       0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used: 1
  9094 ;; Hardware stack levels required when called: 1
  9095 ;; This function calls:
  9096 ;;		_i2c_idle
  9097 ;; This function is called by:
  9098 ;;		_write_ds1307
  9099 ;;		_read_ds1307
  9100 ;;		_write_external_eeprom
  9101 ;;		_read_external_eeprom
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text39
  9106   000120                     __ptext39:
  9107                           	callstack 0
  9108   000120                     _i2c_start:
  9109                           	callstack 27
  9110   000120                     
  9111                           ;i2c.c: 33:  SEN = 1;
  9112   000120  80C5               	bsf	4037,0,c	;volatile
  9113   000122                     
  9114                           ;i2c.c: 34:  i2c_idle();
  9115   000122  ECB4  F000         	call	_i2c_idle	;wreg free
  9116   000126  0012               	return		;funcret
  9117   000128                     __end_of_i2c_start:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function _i2c_idle *****************
  9121 ;; Defined at:
  9122 ;;		line 25 in file "i2c.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		None
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9136 ;;      Params:         0       0       0       0       0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0
  9139 ;;      Totals:         0       0       0       0       0       0       0
  9140 ;;Total ram usage:        0 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_i2c_start
  9146 ;;		_i2c_stop
  9147 ;;		_i2c_rep_start
  9148 ;;		_i2c_write
  9149 ;;		_i2c_rx_mode
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text40
  9154   000168                     __ptext40:
  9155                           	callstack 0
  9156   000168                     _i2c_idle:
  9157                           	callstack 27
  9158   000168                     l409:
  9159   000168  A69E               	btfss	3998,3,c	;volatile
  9160   00016A  EFB9  F000         	goto	u2271
  9161   00016E  EFBB  F000         	goto	u2270
  9162   000172                     u2271:
  9163   000172  EFB4  F000         	goto	l409
  9164   000176                     u2270:
  9165   000176                     
  9166                           ;i2c.c: 28:  SSPIF = 0;
  9167   000176  969E               	bcf	3998,3,c	;volatile
  9168   000178  0012               	return		;funcret
  9169   00017A                     __end_of_i2c_idle:
  9170                           	callstack 0
  9171                           
  9172 ;; *************** function _read_switches *****************
  9173 ;; Defined at:
  9174 ;;		line 59 in file "mkp.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  detection_ty    1    wreg     unsigned char 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  detection_ty    1    0[COMRAM] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      unsigned char 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9188 ;;      Params:         0       0       0       0       0       0       0
  9189 ;;      Locals:         1       0       0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0
  9191 ;;      Totals:         1       0       0       0       0       0       0
  9192 ;;Total ram usage:        1 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 1
  9195 ;; This function calls:
  9196 ;;		_scan_key
  9197 ;; This function is called by:
  9198 ;;		_dash_board
  9199 ;;		_login
  9200 ;;		_menu_car
  9201 ;;		_change_password
  9202 ;;		_view_log
  9203 ;;		_set_time
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text41
  9208   00061A                     __ptext41:
  9209                           	callstack 0
  9210   00061A                     _read_switches:
  9211                           	callstack 28
  9212                           
  9213                           ;incstack = 0
  9214                           ;read_switches@detection_type stored from wreg
  9215   00061A  6E01               	movwf	read_switches@detection_type^0,c
  9216   00061C                     
  9217                           ;mkp.c: 59: unsigned char read_switches(unsigned char detection_type);mkp.c: 60: {;mkp.c
      +                          : 61:  static unsigned char once = 1, key;;mkp.c: 63:  if (detection_type == 1)
  9218   00061C  0401               	decf	read_switches@detection_type^0,w,c
  9219   00061E  A4D8               	btfss	status,2,c
  9220   000620  EF14  F003         	goto	u2531
  9221   000624  EF16  F003         	goto	u2530
  9222   000628                     u2531:
  9223   000628  EF3A  F003         	goto	l3285
  9224   00062C                     u2530:
  9225   00062C                     
  9226                           ;mkp.c: 64:  {;mkp.c: 65:   key = scan_key();
  9227   00062C  EC48  F003         	call	_scan_key	;wreg free
  9228   000630  6E5E               	movwf	read_switches@key^0,c
  9229   000632                     
  9230                           ;mkp.c: 66:   if(key != 0xFF && once )
  9231   000632  285E               	incf	read_switches@key^0,w,c
  9232   000634  B4D8               	btfsc	status,2,c
  9233   000636  EF1F  F003         	goto	u2541
  9234   00063A  EF21  F003         	goto	u2540
  9235   00063E                     u2541:
  9236   00063E  EF2E  F003         	goto	l3281
  9237   000642                     u2540:
  9238   000642  505F               	movf	read_switches@once^0,w,c
  9239   000644  B4D8               	btfsc	status,2,c
  9240   000646  EF27  F003         	goto	u2551
  9241   00064A  EF29  F003         	goto	u2550
  9242   00064E                     u2551:
  9243   00064E  EF2E  F003         	goto	l3281
  9244   000652                     u2550:
  9245   000652                     
  9246                           ;mkp.c: 67:   {;mkp.c: 68:    once = 0;
  9247   000652  0E00               	movlw	0
  9248   000654  6E5F               	movwf	read_switches@once^0,c
  9249                           
  9250                           ;mkp.c: 69:    return key;
  9251   000656  505E               	movf	read_switches@key^0,w,c
  9252   000658  EF47  F003         	goto	l125
  9253   00065C                     l3281:
  9254   00065C  285E               	incf	read_switches@key^0,w,c
  9255   00065E  A4D8               	btfss	status,2,c
  9256   000660  EF34  F003         	goto	u2561
  9257   000664  EF36  F003         	goto	u2560
  9258   000668                     u2561:
  9259   000668  EF46  F003         	goto	l3291
  9260   00066C                     u2560:
  9261   00066C                     
  9262                           ;mkp.c: 72:   {;mkp.c: 73:    once = 1;
  9263   00066C  0E01               	movlw	1
  9264   00066E  6E5F               	movwf	read_switches@once^0,c
  9265   000670  EF46  F003         	goto	l3291
  9266   000674                     l3285:
  9267   000674  5001               	movf	read_switches@detection_type^0,w,c
  9268   000676  A4D8               	btfss	status,2,c
  9269   000678  EF40  F003         	goto	u2571
  9270   00067C  EF42  F003         	goto	u2570
  9271   000680                     u2571:
  9272   000680  EF46  F003         	goto	l3291
  9273   000684                     u2570:
  9274   000684                     
  9275                           ;mkp.c: 77:  {;mkp.c: 78:   return scan_key();
  9276   000684  EC48  F003         	call	_scan_key	;wreg free
  9277   000688  EF47  F003         	goto	l125
  9278   00068C                     l3291:
  9279                           
  9280                           ;mkp.c: 80:  return 0xFF;
  9281   00068C  0EFF               	movlw	255
  9282   00068E                     l125:
  9283   00068E  0012               	return		;funcret
  9284   000690                     __end_of_read_switches:
  9285                           	callstack 0
  9286                           
  9287 ;; *************** function _scan_key *****************
  9288 ;; Defined at:
  9289 ;;		line 18 in file "mkp.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      unsigned char 
  9296 ;; Registers used:
  9297 ;;		wreg
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9303 ;;      Params:         0       0       0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used: 1
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_read_switches
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           	psect	text42
  9317   000690                     __ptext42:
  9318                           	callstack 0
  9319   000690                     _scan_key:
  9320                           	callstack 28
  9321   000690                     
  9322                           ;mkp.c: 20:  PORTBbits.RB5 = 0;
  9323   000690  9A81               	bcf	129,5,c	;volatile
  9324                           
  9325                           ;mkp.c: 21:  PORTBbits.RB6 = 1;
  9326   000692  8C81               	bsf	129,6,c	;volatile
  9327                           
  9328                           ;mkp.c: 22:  PORTBbits.RB7 = 1;
  9329   000694  8E81               	bsf	129,7,c	;volatile
  9330                           
  9331                           ;mkp.c: 24:  if (PORTBbits.RB1 == 0)
  9332   000696  B281               	btfsc	129,1,c	;volatile
  9333   000698  EF50  F003         	goto	u2341
  9334   00069C  EF52  F003         	goto	u2340
  9335   0006A0                     u2341:
  9336   0006A0  EF55  F003         	goto	l109
  9337   0006A4                     u2340:
  9338   0006A4                     
  9339                           ;mkp.c: 25:  {;mkp.c: 26:   return 1;
  9340   0006A4  0E01               	movlw	1
  9341   0006A6  EF85  F003         	goto	l110
  9342   0006AA                     l109:
  9343                           
  9344                           ;mkp.c: 29:  PORTBbits.RB5 = 1;
  9345   0006AA  8A81               	bsf	129,5,c	;volatile
  9346                           
  9347                           ;mkp.c: 30:  PORTBbits.RB6 = 0;
  9348   0006AC  9C81               	bcf	129,6,c	;volatile
  9349                           
  9350                           ;mkp.c: 31:  PORTBbits.RB7 = 1;
  9351   0006AE  8E81               	bsf	129,7,c	;volatile
  9352                           
  9353                           ;mkp.c: 33:  if (PORTBbits.RB1 == 0)
  9354   0006B0  B281               	btfsc	129,1,c	;volatile
  9355   0006B2  EF5D  F003         	goto	u2351
  9356   0006B6  EF5F  F003         	goto	u2350
  9357   0006BA                     u2351:
  9358   0006BA  EF62  F003         	goto	l111
  9359   0006BE                     u2350:
  9360   0006BE                     
  9361                           ;mkp.c: 34:  {;mkp.c: 35:   return 2;
  9362   0006BE  0E02               	movlw	2
  9363   0006C0  EF85  F003         	goto	l110
  9364   0006C4                     l111:
  9365   0006C4  B881               	btfsc	129,4,c	;volatile
  9366   0006C6  EF67  F003         	goto	u2361
  9367   0006CA  EF69  F003         	goto	u2360
  9368   0006CE                     u2361:
  9369   0006CE  EF6C  F003         	goto	l112
  9370   0006D2                     u2360:
  9371   0006D2                     
  9372                           ;mkp.c: 38:  {;mkp.c: 39:   return 11;
  9373   0006D2  0E0B               	movlw	11
  9374   0006D4  EF85  F003         	goto	l110
  9375   0006D8                     l112:
  9376                           
  9377                           ;mkp.c: 42:  PORTBbits.RB5 = 1;
  9378   0006D8  8A81               	bsf	129,5,c	;volatile
  9379                           
  9380                           ;mkp.c: 43:  PORTBbits.RB6 = 1;
  9381   0006DA  8C81               	bsf	129,6,c	;volatile
  9382                           
  9383                           ;mkp.c: 44:  PORTBbits.RB7 = 0;
  9384   0006DC  9E81               	bcf	129,7,c	;volatile
  9385                           
  9386                           ;mkp.c: 46:  PORTBbits.RB7 = 0;
  9387   0006DE  9E81               	bcf	129,7,c	;volatile
  9388                           
  9389                           ;mkp.c: 48:  if (PORTBbits.RB1 == 0)
  9390   0006E0  B281               	btfsc	129,1,c	;volatile
  9391   0006E2  EF75  F003         	goto	u2371
  9392   0006E6  EF77  F003         	goto	u2370
  9393   0006EA                     u2371:
  9394   0006EA  EF7A  F003         	goto	l114
  9395   0006EE                     u2370:
  9396   0006EE                     
  9397                           ;mkp.c: 49:  {;mkp.c: 50:   return 3;
  9398   0006EE  0E03               	movlw	3
  9399   0006F0  EF85  F003         	goto	l110
  9400   0006F4                     l114:
  9401   0006F4  B881               	btfsc	129,4,c	;volatile
  9402   0006F6  EF7F  F003         	goto	u2381
  9403   0006FA  EF81  F003         	goto	u2380
  9404   0006FE                     u2381:
  9405   0006FE  EF84  F003         	goto	l3093
  9406   000702                     u2380:
  9407   000702                     
  9408                           ;mkp.c: 53:  {;mkp.c: 54:   return 12;
  9409   000702  0E0C               	movlw	12
  9410   000704  EF85  F003         	goto	l110
  9411   000708                     l3093:
  9412                           
  9413                           ;mkp.c: 56:  return 0xFF;
  9414   000708  0EFF               	movlw	255
  9415   00070A                     l110:
  9416   00070A  0012               	return		;funcret
  9417   00070C                     __end_of_scan_key:
  9418                           	callstack 0
  9419                           
  9420 ;; *************** function _clcd_putch *****************
  9421 ;; Defined at:
  9422 ;;		line 68 in file "clcd.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  data            1    wreg     const unsigned char 
  9425 ;;  addr            1   14[COMRAM] unsigned char 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  data            1   15[COMRAM] const unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9437 ;;      Params:         1       0       0       0       0       0       0
  9438 ;;      Locals:         1       0       0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0
  9440 ;;      Totals:         2       0       0       0       0       0       0
  9441 ;;Total ram usage:        2 bytes
  9442 ;; Hardware stack levels used: 1
  9443 ;; Hardware stack levels required when called: 1
  9444 ;; This function calls:
  9445 ;;		_clcd_write
  9446 ;; This function is called by:
  9447 ;;		_dash_board
  9448 ;;		_login
  9449 ;;		_menu_car
  9450 ;;		_change_password
  9451 ;;		_view_log
  9452 ;;		_set_time
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text43
  9457   0001CE                     __ptext43:
  9458                           	callstack 0
  9459   0001CE                     _clcd_putch:
  9460                           	callstack 28
  9461                           
  9462                           ;incstack = 0
  9463                           ;clcd_putch@data stored from wreg
  9464   0001CE  6E10               	movwf	clcd_putch@data^0,c
  9465   0001D0                     
  9466                           ;clcd.c: 68: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 69: {
      +                          ;clcd.c: 70:  clcd_write(addr, 0);
  9467   0001D0  0E00               	movlw	0
  9468   0001D2  6E01               	movwf	clcd_write@control_bit^0,c
  9469   0001D4  500F               	movf	clcd_putch@addr^0,w,c
  9470   0001D6  EC65  F001         	call	_clcd_write
  9471                           
  9472                           ;clcd.c: 71:  clcd_write(data, 1);
  9473   0001DA  0E01               	movlw	1
  9474   0001DC  6E01               	movwf	clcd_write@control_bit^0,c
  9475   0001DE  5010               	movf	clcd_putch@data^0,w,c
  9476   0001E0  EC65  F001         	call	_clcd_write
  9477   0001E4  0012               	return		;funcret
  9478   0001E6                     __end_of_clcd_putch:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _clcd_print *****************
  9482 ;; Defined at:
  9483 ;;		line 59 in file "clcd.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  data            2    2[COMRAM] PTR const unsigned char 
  9486 ;;		 -> STR_24(16), STR_20(16), STR_19(17), STR_18(15), 
  9487 ;;		 -> STR_17(16), STR_16(15), STR_15(16), STR_14(8), 
  9488 ;;		 -> STR_13(15), STR_12(8), STR_11(17), STR_10(15), 
  9489 ;;		 -> menu(80), STR_9(7), STR_8(6), STR_7(16), 
  9490 ;;		 -> STR_6(16), STR_5(12), STR_4(14), STR_3(15), 
  9491 ;;		 -> STR_2(15), time(9), str(24), STR_1(17), 
  9492 ;;  addr            1    4[COMRAM] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9504 ;;      Params:         3       0       0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0
  9507 ;;      Totals:         3       0       0       0       0       0       0
  9508 ;;Total ram usage:        3 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 1
  9511 ;; This function calls:
  9512 ;;		_clcd_write
  9513 ;; This function is called by:
  9514 ;;		_dash_board
  9515 ;;		_display_time
  9516 ;;		_login
  9517 ;;		_menu_car
  9518 ;;		_change_password
  9519 ;;		_view_log
  9520 ;;		_set_time
  9521 ;;		_clear_log
  9522 ;;		_download_log
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text44
  9527   00053A                     __ptext44:
  9528                           	callstack 0
  9529   00053A                     _clcd_print:
  9530                           	callstack 28
  9531   00053A                     
  9532                           ;clcd.c: 59: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 60: 
      +                          {;clcd.c: 61:  clcd_write(addr, 0);
  9533   00053A  0E00               	movlw	0
  9534   00053C  6E01               	movwf	clcd_write@control_bit^0,c
  9535   00053E  5005               	movf	clcd_print@addr^0,w,c
  9536   000540  EC65  F001         	call	_clcd_write
  9537                           
  9538                           ;clcd.c: 62:  while (*data != '\0')
  9539   000544  EFBA  F002         	goto	l3065
  9540   000548                     l3061:
  9541                           
  9542                           ;clcd.c: 63:  {;clcd.c: 64:   clcd_write(*data++, 1);
  9543   000548  0E01               	movlw	1
  9544   00054A  6E01               	movwf	clcd_write@control_bit^0,c
  9545   00054C  C003  FFF6         	movff	clcd_print@data,tblptrl
  9546   000550  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  9547   000554  6AF8               	clrf	tblptru,c
  9548   000556  0E05               	movlw	(high __ramtop+-1)
  9549   000558  64F7               	cpfsgt	tblptrh,c
  9550   00055A  D003               	bra	u2317
  9551   00055C  0008               	tblrd		*
  9552   00055E  50F5               	movf	tablat,w,c
  9553   000560  D005               	bra	u2310
  9554   000562                     u2317:
  9555   000562  CFF6 FFE9          	movff	tblptrl,fsr0l
  9556   000566  CFF7 FFEA          	movff	tblptrh,fsr0h
  9557   00056A  50EF               	movf	indf0,w,c
  9558   00056C                     u2310:
  9559   00056C  EC65  F001         	call	_clcd_write
  9560   000570  4A03               	infsnz	clcd_print@data^0,f,c
  9561   000572  2A04               	incf	(clcd_print@data+1)^0,f,c
  9562   000574                     l3065:
  9563                           
  9564                           ;clcd.c: 62:  while (*data != '\0')
  9565   000574  C003  FFF6         	movff	clcd_print@data,tblptrl
  9566   000578  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  9567   00057C  6AF8               	clrf	tblptru,c
  9568   00057E  0E05               	movlw	(high __ramtop+-1)
  9569   000580  64F7               	cpfsgt	tblptrh,c
  9570   000582  D003               	bra	u2327
  9571   000584  0008               	tblrd		*
  9572   000586  50F5               	movf	tablat,w,c
  9573   000588  D005               	bra	u2320
  9574   00058A                     u2327:
  9575   00058A  CFF6 FFE9          	movff	tblptrl,fsr0l
  9576   00058E  CFF7 FFEA          	movff	tblptrh,fsr0h
  9577   000592  50EF               	movf	indf0,w,c
  9578   000594                     u2320:
  9579   000594  0900               	iorlw	0
  9580   000596  A4D8               	btfss	status,2,c
  9581   000598  EFD0  F002         	goto	u2331
  9582   00059C  EFD2  F002         	goto	u2330
  9583   0005A0                     u2331:
  9584   0005A0  EFA4  F002         	goto	l3061
  9585   0005A4                     u2330:
  9586   0005A4  0012               	return		;funcret
  9587   0005A6                     __end_of_clcd_print:
  9588                           	callstack 0
  9589                           
  9590 ;; *************** function _clcd_write *****************
  9591 ;; Defined at:
  9592 ;;		line 6 in file "clcd.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;  byte            1    wreg     unsigned char 
  9595 ;;  control_bit     1    0[COMRAM] unsigned char 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  byte            1    1[COMRAM] unsigned char 
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		wreg
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9607 ;;      Params:         1       0       0       0       0       0       0
  9608 ;;      Locals:         1       0       0       0       0       0       0
  9609 ;;      Temps:          0       0       0       0       0       0       0
  9610 ;;      Totals:         2       0       0       0       0       0       0
  9611 ;;Total ram usage:        2 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_init_clcd
  9617 ;;		_clcd_print
  9618 ;;		_clcd_putch
  9619 ;;		_dash_board
  9620 ;;		_login
  9621 ;;		_menu_car
  9622 ;;		_change_password
  9623 ;;		_view_log
  9624 ;;		_set_time
  9625 ;;		_clear_log
  9626 ;;		_download_log
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text45
  9631   0002CA                     __ptext45:
  9632                           	callstack 0
  9633   0002CA                     _clcd_write:
  9634                           	callstack 29
  9635                           
  9636                           ;incstack = 0
  9637                           ;clcd_write@byte stored from wreg
  9638   0002CA  6E02               	movwf	clcd_write@byte^0,c
  9639   0002CC                     
  9640                           ;clcd.c: 6: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 7: {;
      +                          clcd.c: 8:  RC1 = control_bit;
  9641   0002CC  B001               	btfsc	clcd_write@control_bit^0,0,c
  9642   0002CE  EF6B  F001         	goto	u2281
  9643   0002D2  EF6E  F001         	goto	u2280
  9644   0002D6                     u2281:
  9645   0002D6  8282               	bsf	3970,1,c	;volatile
  9646   0002D8  EF6F  F001         	goto	u2295
  9647   0002DC                     u2280:
  9648   0002DC  9282               	bcf	3970,1,c	;volatile
  9649   0002DE                     u2295:
  9650   0002DE                     
  9651                           ;clcd.c: 9:  PORTD = byte;
  9652   0002DE  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  9653   0002E2                     
  9654                           ;clcd.c: 12:  RC2 = 1;
  9655   0002E2  8482               	bsf	3970,2,c	;volatile
  9656   0002E4                     
  9657                           ;clcd.c: 13:  RC2 = 0;
  9658   0002E4  9482               	bcf	3970,2,c	;volatile
  9659   0002E6                     
  9660                           ;clcd.c: 15:  TRISD7 = 0xFF;
  9661   0002E6  8E95               	bsf	3989,7,c	;volatile
  9662   0002E8                     
  9663                           ;clcd.c: 16:  RC0 = 1;
  9664   0002E8  8082               	bsf	3970,0,c	;volatile
  9665   0002EA                     
  9666                           ;clcd.c: 17:  RC1 = 0;
  9667   0002EA  9282               	bcf	3970,1,c	;volatile
  9668   0002EC                     l3031:
  9669                           
  9670                           ;clcd.c: 20:  {;clcd.c: 21:   RC2 = 1;
  9671   0002EC  8482               	bsf	3970,2,c	;volatile
  9672   0002EE                     
  9673                           ;clcd.c: 22:   RC2 = 0;
  9674   0002EE  9482               	bcf	3970,2,c	;volatile
  9675   0002F0                     
  9676                           ;clcd.c: 23:  } while (RD7);
  9677   0002F0  BE83               	btfsc	3971,7,c	;volatile
  9678   0002F2  EF7D  F001         	goto	u2301
  9679   0002F6  EF7F  F001         	goto	u2300
  9680   0002FA                     u2301:
  9681   0002FA  EF76  F001         	goto	l3031
  9682   0002FE                     u2300:
  9683   0002FE                     
  9684                           ;clcd.c: 25:  RC0 = 0;
  9685   0002FE  9082               	bcf	3970,0,c	;volatile
  9686                           
  9687                           ;clcd.c: 26:  TRISD7 = 0x00;
  9688   000300  9E95               	bcf	3989,7,c	;volatile
  9689   000302  0012               	return		;funcret
  9690   000304                     __end_of_clcd_write:
  9691                           	callstack 0
  9692                           
  9693                           	psect	rparam
  9694   000000                     
  9695                           	psect	idloc
  9696                           
  9697                           ;Config register IDLOC0 @ 0x200000
  9698                           ;	unspecified, using default values
  9699   200000                     	org	2097152
  9700   200000  FF                 	db	255
  9701                           
  9702                           ;Config register IDLOC1 @ 0x200001
  9703                           ;	unspecified, using default values
  9704   200001                     	org	2097153
  9705   200001  FF                 	db	255
  9706                           
  9707                           ;Config register IDLOC2 @ 0x200002
  9708                           ;	unspecified, using default values
  9709   200002                     	org	2097154
  9710   200002  FF                 	db	255
  9711                           
  9712                           ;Config register IDLOC3 @ 0x200003
  9713                           ;	unspecified, using default values
  9714   200003                     	org	2097155
  9715   200003  FF                 	db	255
  9716                           
  9717                           ;Config register IDLOC4 @ 0x200004
  9718                           ;	unspecified, using default values
  9719   200004                     	org	2097156
  9720   200004  FF                 	db	255
  9721                           
  9722                           ;Config register IDLOC5 @ 0x200005
  9723                           ;	unspecified, using default values
  9724   200005                     	org	2097157
  9725   200005  FF                 	db	255
  9726                           
  9727                           ;Config register IDLOC6 @ 0x200006
  9728                           ;	unspecified, using default values
  9729   200006                     	org	2097158
  9730   200006  FF                 	db	255
  9731                           
  9732                           ;Config register IDLOC7 @ 0x200007
  9733                           ;	unspecified, using default values
  9734   200007                     	org	2097159
  9735   200007  FF                 	db	255
  9736                           
  9737                           	psect	config
  9738                           
  9739                           ; Padding undefined space
  9740   300000                     	org	3145728
  9741   300000  FF                 	db	255
  9742                           
  9743                           ;Config register CONFIG1H @ 0x300001
  9744                           ;	unspecified, using default values
  9745                           ;	Oscillator Selection bits
  9746                           ;	OSC = 0x7, unprogrammed default
  9747                           ;	Fail-Safe Clock Monitor Enable bit
  9748                           ;	FCMEN = 0x0, unprogrammed default
  9749                           ;	Internal/External Oscillator Switchover bit
  9750                           ;	IESO = 0x0, unprogrammed default
  9751   300001                     	org	3145729
  9752   300001  07                 	db	7
  9753                           
  9754                           ;Config register CONFIG2L @ 0x300002
  9755                           ;	unspecified, using default values
  9756                           ;	Power-up Timer Enable bit
  9757                           ;	PWRT = 0x1, unprogrammed default
  9758                           ;	Brown-out Reset Enable bits
  9759                           ;	BOREN = 0x3, unprogrammed default
  9760                           ;	Brown-out Reset Voltage bits
  9761                           ;	BORV = 0x3, unprogrammed default
  9762   300002                     	org	3145730
  9763   300002  1F                 	db	31
  9764                           
  9765                           ;Config register CONFIG2H @ 0x300003
  9766                           ;	unspecified, using default values
  9767                           ;	Watchdog Timer Enable bit
  9768                           ;	WDT = 0x1, unprogrammed default
  9769                           ;	Watchdog Timer Postscale Select bits
  9770                           ;	WDTPS = 0xF, unprogrammed default
  9771   300003                     	org	3145731
  9772   300003  1F                 	db	31
  9773                           
  9774                           ; Padding undefined space
  9775   300004                     	org	3145732
  9776   300004  FF                 	db	255
  9777                           
  9778                           ;Config register CONFIG3H @ 0x300005
  9779                           ;	unspecified, using default values
  9780                           ;	PORTB A/D Enable bit
  9781                           ;	PBADEN = 0x1, unprogrammed default
  9782                           ;	Low-Power Timer 1 Oscillator Enable bit
  9783                           ;	LPT1OSC = 0x0, unprogrammed default
  9784                           ;	MCLR Pin Enable bit
  9785                           ;	MCLRE = 0x1, unprogrammed default
  9786   300005                     	org	3145733
  9787   300005  82                 	db	130
  9788                           
  9789                           ;Config register CONFIG4L @ 0x300006
  9790                           ;	unspecified, using default values
  9791                           ;	Stack Full/Underflow Reset Enable bit
  9792                           ;	STVREN = 0x1, unprogrammed default
  9793                           ;	Single-Supply ICSP Enable bit
  9794                           ;	LVP = 0x1, unprogrammed default
  9795                           ;	Boot Block Size Select bit
  9796                           ;	BBSIZ = 0x0, unprogrammed default
  9797                           ;	Extended Instruction Set Enable bit
  9798                           ;	XINST = 0x0, unprogrammed default
  9799                           ;	Background Debugger Enable bit
  9800                           ;	DEBUG = 0x1, unprogrammed default
  9801   300006                     	org	3145734
  9802   300006  85                 	db	133
  9803                           
  9804                           ; Padding undefined space
  9805   300007                     	org	3145735
  9806   300007  FF                 	db	255
  9807                           
  9808                           ;Config register CONFIG5L @ 0x300008
  9809                           ;	unspecified, using default values
  9810                           ;	Code Protection bit
  9811                           ;	CP0 = 0x1, unprogrammed default
  9812                           ;	Code Protection bit
  9813                           ;	CP1 = 0x1, unprogrammed default
  9814                           ;	Code Protection bit
  9815                           ;	CP2 = 0x1, unprogrammed default
  9816                           ;	Code Protection bit
  9817                           ;	CP3 = 0x1, unprogrammed default
  9818   300008                     	org	3145736
  9819   300008  0F                 	db	15
  9820                           
  9821                           ;Config register CONFIG5H @ 0x300009
  9822                           ;	unspecified, using default values
  9823                           ;	Boot Block Code Protection bit
  9824                           ;	CPB = 0x1, unprogrammed default
  9825                           ;	Data EEPROM Code Protection bit
  9826                           ;	CPD = 0x1, unprogrammed default
  9827   300009                     	org	3145737
  9828   300009  C0                 	db	192
  9829                           
  9830                           ;Config register CONFIG6L @ 0x30000A
  9831                           ;	unspecified, using default values
  9832                           ;	Write Protection bit
  9833                           ;	WRT0 = 0x1, unprogrammed default
  9834                           ;	Write Protection bit
  9835                           ;	WRT1 = 0x1, unprogrammed default
  9836                           ;	Write Protection bit
  9837                           ;	WRT2 = 0x1, unprogrammed default
  9838                           ;	Write Protection bit
  9839                           ;	WRT3 = 0x1, unprogrammed default
  9840   30000A                     	org	3145738
  9841   30000A  0F                 	db	15
  9842                           
  9843                           ;Config register CONFIG6H @ 0x30000B
  9844                           ;	unspecified, using default values
  9845                           ;	Configuration Register Write Protection bit
  9846                           ;	WRTC = 0x1, unprogrammed default
  9847                           ;	Boot Block Write Protection bit
  9848                           ;	WRTB = 0x1, unprogrammed default
  9849                           ;	Data EEPROM Write Protection bit
  9850                           ;	WRTD = 0x1, unprogrammed default
  9851   30000B                     	org	3145739
  9852   30000B  E0                 	db	224
  9853                           
  9854                           ;Config register CONFIG7L @ 0x30000C
  9855                           ;	unspecified, using default values
  9856                           ;	Table Read Protection bit
  9857                           ;	EBTR0 = 0x1, unprogrammed default
  9858                           ;	Table Read Protection bit
  9859                           ;	EBTR1 = 0x1, unprogrammed default
  9860                           ;	Table Read Protection bit
  9861                           ;	EBTR2 = 0x1, unprogrammed default
  9862                           ;	Table Read Protection bit
  9863                           ;	EBTR3 = 0x1, unprogrammed default
  9864   30000C                     	org	3145740
  9865   30000C  0F                 	db	15
  9866                           
  9867                           ;Config register CONFIG7H @ 0x30000D
  9868                           ;	unspecified, using default values
  9869                           ;	Boot Block Table Read Protection bit
  9870                           ;	EBTRB = 0x1, unprogrammed default
  9871   30000D                     	org	3145741
  9872   30000D  40                 	db	64
  9873                           tosu	equ	0xFFF
  9874                           tosh	equ	0xFFE
  9875                           tosl	equ	0xFFD
  9876                           stkptr	equ	0xFFC
  9877                           pclatu	equ	0xFFB
  9878                           pclath	equ	0xFFA
  9879                           pcl	equ	0xFF9
  9880                           tblptru	equ	0xFF8
  9881                           tblptrh	equ	0xFF7
  9882                           tblptrl	equ	0xFF6
  9883                           tablat	equ	0xFF5
  9884                           prodh	equ	0xFF4
  9885                           prodl	equ	0xFF3
  9886                           indf0	equ	0xFEF
  9887                           postinc0	equ	0xFEE
  9888                           postdec0	equ	0xFED
  9889                           preinc0	equ	0xFEC
  9890                           plusw0	equ	0xFEB
  9891                           fsr0h	equ	0xFEA
  9892                           fsr0l	equ	0xFE9
  9893                           wreg	equ	0xFE8
  9894                           indf1	equ	0xFE7
  9895                           postinc1	equ	0xFE6
  9896                           postdec1	equ	0xFE5
  9897                           preinc1	equ	0xFE4
  9898                           plusw1	equ	0xFE3
  9899                           fsr1h	equ	0xFE2
  9900                           fsr1l	equ	0xFE1
  9901                           bsr	equ	0xFE0
  9902                           indf2	equ	0xFDF
  9903                           postinc2	equ	0xFDE
  9904                           postdec2	equ	0xFDD
  9905                           preinc2	equ	0xFDC
  9906                           plusw2	equ	0xFDB
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8

Data Sizes:
    Strings     330
    Constant    0
    Data        121
    BSS         581
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      95
    BANK0           160      0     101
    BANK1           256      0     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 80
		 -> menu(BANK1[80]), str(BANK0[24]), STR_1(CODE[17]), STR_10(CODE[15]), 
		 -> STR_11(CODE[17]), STR_12(CODE[8]), STR_13(CODE[15]), STR_14(CODE[8]), 
		 -> STR_15(CODE[16]), STR_16(CODE[15]), STR_17(CODE[16]), STR_18(CODE[15]), 
		 -> STR_19(CODE[17]), STR_2(CODE[15]), STR_20(CODE[16]), STR_24(CODE[16]), 
		 -> STR_3(CODE[15]), STR_4(CODE[14]), STR_5(CODE[12]), STR_6(CODE[16]), 
		 -> STR_7(CODE[16]), STR_8(CODE[6]), STR_9(CODE[7]), time(BANK0[9]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 160
		 -> array1(BANK1[160]), STR_21(CODE[26]), STR_22(CODE[20]), STR_23(CODE[3]), 
		 -> STR_25(CODE[19]), STR_26(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_dash_board
    _view_log->_clcd_putch
    _set_time->_clcd_putch
    _menu_car->_clcd_putch
    _login->_clcd_putch
    ___lwmod->___lwdiv
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->_clcd_print
    _read_external_eeprom->_i2c_write
    _puts->_putch
    _dash_board->___fltol
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _e_store->_write_external_eeprom
    ___awmod->___awdiv
    _display_time->_clcd_print
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _clear_log->_clcd_print
    _change_password->_write_external_eeprom
    _write_external_eeprom->___awmod
    _clcd_putch->___awmod
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  138667
                    _change_password
                          _clear_log
                         _dash_board
                       _download_log
                        _init_config
                              _login
                           _menu_car
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                            14    14      0   15511
                                             16 COMRAM    14    14      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _set_time                                            16    16      0   19912
                                             16 COMRAM    16    16      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _menu_car                                             2     2      0   15107
                                             16 COMRAM     2     2      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _login                                                8     8      0   16217
                                             16 COMRAM     8     8      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    3362
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    2628
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        10    10      0   10265
                                              5 COMRAM     8     8      0
                         _clcd_print
                         _clcd_write
                          _init_uart
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     523
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dash_board                                           5     5      0   33021
                                             49 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _display_time
                            _e_store
                           _get_time
                           _read_adc
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _e_store                                              4     4      0    4697
                                             18 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2120
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1972
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    6799
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            2     2      0    9427
                                              5 COMRAM     2     2      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _change_password                                      8     8      0   15845
                                             18 COMRAM     8     8      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1     469
                                             14 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    5636
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    6799
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    2628
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_password
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       _clcd_write (ARG)
     _clcd_write
     _read_switches
       _scan_key
     _write_external_eeprom
       ___awdiv (ARG)
       ___awmod (ARG)
       _i2c_start (ARG)
         _i2c_idle
       _i2c_stop (ARG)
         _i2c_idle
       _i2c_write (ARG)
         _i2c_idle
   _clear_log
     _clcd_print
     _clcd_write
   _dash_board
     ___awdiv
     ___awmod
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _clcd_print
     _clcd_putch
     _clcd_write
     _display_time
       _clcd_print
     _e_store
       ___awdiv
       ___awmod
       _write_external_eeprom
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _read_adc
     _read_switches
   _download_log
     _clcd_print
     _clcd_write
     _init_uart
     _puts
       _putch
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
   _login
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
     _read_switches
   _menu_car
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_switches
   _set_time
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_switches
     _write_ds1307
   _view_log
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
     _read_switches

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     140      27       20.8%
BITBIGSFRl         281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      65       5       63.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      5F       1      100.0%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRhl          F      0       0      24        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhlhhl      9      0       0      21        0.0%
BITBIGSFRhhlhhh      8      0       0      19        0.0%
BITBIGSFRhhlhhh      7      0       0      18        0.0%
BITBIGSFRhhll        7      0       0      23        0.0%
BITBIGSFRhhlhl       2      0       0      22        0.0%
BITBIGSFRhhlhhh      1      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B4      26        0.0%
DATA                 0      0     2F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 31 18:20:11 2024

                 ___fldiv@aexp 0027                   ___fldiv@bexp 0026                              _i 0058  
                            _j 0052                              _s 00AB                   ___fldiv@sign 001F  
        _write_external_eeprom 0304                 clcd_print@addr 0005                 clcd_print@data 0003  
                           l50 0B20                             l29 01CC                             l80 02FE  
                           l81 0302                             l90 05A4                             l84 08CA  
                           l93 01E4                             _GO 7E11                   ___awdiv@sign 0006  
                           _hr 003E                             _mn 003C             _init_matrix_keypad 017A  
                          l110 070A                            l111 06C4                            l112 06D8  
                          l114 06F4                            l106 018A                            l109 06AA  
                          l125 068E                            l222 0166                            l162 0222  
                          l411 0176                            l227 078E                            l219 10D0  
                          l412 0178                            l421 013E                            l165 035C  
                          l430 011E                            l406 01B6                            l350 163E  
                          l415 0126                            l511 0342                            l424 014A  
                          l168 0388                            l409 0168                            l433 0156  
                          l418 012E                            l514 02C8                            l370 0202  
                          l338 1592                            l427 0136                            l292 1DAA  
                          l276 1DF4                            l541 0D3E                            l373 0274  
                          l286 1BB2                            l367 03D0                            l473 26D2  
                          l801 01A0                            l714 0476                            l653 2EB2  
                          l750 1292                            l646 2876                            l807 04D4  
                          l751 12FA                            l598 2238                            l599 2156  
                          _CKE 7E3E                            l795 029E                            l798 018E  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            _PEN 7E2A                            _SEN 7E28  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                ?_display_time 0001                            _WUE 7DC1                            _arr 006C  
                          _key 005C                            _new 0064                            _sec 003A  
                          _one 00A9                            _val 0056                 clcd_putch@addr 000F  
                          _str 00AD                 clcd_putch@data 0010                   ___awmod@sign 000E  
                          wreg 0FE8   read_external_eeprom@address1 0002            ?_init_matrix_keypad 0001  
                 ___fltol@exp1 0031                           l1041 0A3E                           l1107 0C2C  
                         l1301 0610                           l1054 097A                           l1311 0530  
                         l1403 187E                           l3011 0130                           l1308 0618  
                         l3021 02E2                           l1405 18F6                           l3013 0132  
                         l3101 0258                           l1406 18E4                           l1318 0538  
                         l3031 02EC                           l3023 02E4                           l3015 011A  
                         l3103 025E                           l3111 01E8                           l3033 02EE  
                         l3025 02E6                           l3017 02CC                           l3009 0168  
                         l3041 0142                           l3121 0306                           l3201 0922  
                         l3105 0262                           l3113 01EC                           l4001 1FEC  
                         l3035 02F0                           l3027 02E8                           l3019 02DE  
                         l3043 0146                           l3131 0320                           l3123 030A  
                         l3203 0930                           l3211 095A                           l3051 013A  
                         l3107 026E                           l3115 01F2                           l4003 2016  
                         l4011 205C                           l3029 02EA                           l3061 0548  
                         l3037 0120                           l3045 0128                           l3133 0328  
                         l3125 0310                           l3141 0980                           l3213 096A  
                         l3205 0946                           l3053 014C                           l3301 0380  
                         l3221 0828                           l3117 01F8                           l4013 2070  
                         l4005 201E                           l3063 0570                           l3039 0122  
                         l3047 012A                           l3127 0316                           l3151 09B0  
                         l3143 098E                           l3215 0972                           l3207 094E  
                         l3055 0154                           l3135 018E                           l4111 11BA  
                         l3231 085A                           l3223 082E                           l3119 01FE  
                         l4031 2116                           l4015 2074                           l4023 20AE  
                         l4007 2048                           l1392 19D8                           l1472 0E2E  
                         l3065 0574                           l3073 06BE                           l3129 031C  
                         l3401 1640                           l1465 0D96                           l3161 09DE  
                         l3153 09B4                           l3145 0996                           l3209 0954  
                         l3321 0C70                           l3305 0C2E                           l3049 0138  
                         l3137 019C                           l4121 1252                           l4113 11F6  
                         l4105 1158                           l3241 0886                           l3233 0864  
                         l3225 0830                           l4201 28E8                           l4033 211A  
                         l4025 20C8                           l4017 2090                           l4009 2054  
                         l1394 1838                           l3059 053A                           l3083 06EE  
                         l3067 0690                           l3411 167C                           l3403 164C  
                         l3171 0A12                           l3163 09EC                           l3155 09BC  
                         l3147 099A                           l3139 097C                           l3331 0CAC  
                         l3323 0C8C                           l3315 0C56                           l3307 0C4A  
                         l4131 129A                           l4115 11FC                           l4107 116C  
                         l4123 1256                           l3251 08B8                           l3243 088E  
                         l3235 086C                           l3227 0840                           l3219 0824  
                         l1731 0182                           l4211 2932                           l4203 28F0  
                         l4051 21D2                           l4043 215E                           l4035 2142  
                         l4027 20E4                           l4019 20A0                           l1468 0EF2  
                         l3093 0708                           l3069 06A4                           l3501 18AE  
                         l1397 17FC                           l3421 16AC                           l3413 168C  
                         l3405 165A                           l3173 0A18                           l3165 09F2  
                         l3157 09CE                           l3149 09A8                           l3341 0CF4  
                         l3333 0CB0                           l3317 0C68                           l3309 0C4E  
                         l4141 12D0                           l4125 1274                           l4117 1200  
                         l4109 1180                           l3253 08C2                           l3245 0898  
                         l3237 0876                           l3229 084A                           l3261 03B2  
                         l1741 01A2                           l1733 0184                           l4301 2D36  
                         l4213 293E                           l4205 28FC                           l4221 297E  
                         l4061 2226                           l4053 21DA                           l4045 216A  
                         l4029 20EC                           l4037 214E                           l3079 06D2  
                         l3271 0632                           l4311 225C                           l4071 0454  
                         l3511 1920                           l3503 18DC                           l3431 16E2  
                         l3423 16B2                           l3415 168E                           l3407 165C  
                         l1479 0E8A                           l3167 0A08                           l3159 09D6  
                         l3175 0A1E                           l3191 08EA                           l3183 08CC  
                         l3343 0D18                           l3335 0CB4                           l3319 0C6C  
                         l3351 0732                           l4143 12D8                           l4127 1274  
                         l4119 121C                           l1735 0204                           l3247 08A0  
                         l3239 087C                           l3263 03BC                           l3255 038A  
                         l1751 01B4                           l1743 01A6                           l4303 2DF6  
                         l4223 2992                           l4215 2952                           l4207 290E  
                         l4151 26E4                           l4063 222E                           l4055 21DE  
                         l4047 2174                           l3265 01D0                           l3089 0702  
                         l3273 0642                           l3281 065C                           l4321 22BE  
                         l4313 226C                           l4073 045C                           l4065 0422  
                         l3521 1998                           l3513 194A                           l3441 1722  
                         l3433 16F2                           l3425 16C0                           l3409 166C  
                         l3417 1696                           l3177 0A2E                           l3169 0A10  
                         l3193 08F8                           l3185 08D0                           l3345 0D2C  
                         l3337 0CD0                           l3329 0C94                           l3097 024E  
                         l3361 0774                           l3353 074A                           l4145 12E4  
                         l4129 128A                           l4137 12A8                           l4081 10D6  
                         l1737 0218                           l3249 08AA                           l3257 0392  
                         l1745 01AE                           l1729 017A                           l3601 0604  
                         l4305 2E00                           l4241 2A2A                           l4225 2996  
                         l4233 29D0                           l4217 296E                           l4209 292A  
                         l4161 2782                           l4153 26F8                           l4049 21BC  
                         l4057 21FE                           l3283 066C                           l3291 068C  
                         l3275 0652                           l3267 061C                           l4411 2546  
                         l4403 24FC                           l4323 22C6                           l4331 22EE  
                         l4315 2280                           l4307 223A                           l4075 0464  
                         l4067 0432                           l3531 19CE                           l3523 19B4  
                         l3507 1906                           l3515 194E                           l3443 1732  
                         l3451 1752                           l3435 16F4                           l3427 16C2  
                         l3419 16A6                           l3179 0A36                           l3195 0900  
                         l3187 08DE                           l3339 0CF0                           l3099 0252  
                         l3363 078A                           l3355 075E                           l3347 070C  
                         l3371 02AC                           l4147 12F0                           l4139 12B8  
                         l4091 1138                           l4083 10EA                           l1739 0220  
                         l3259 039E                           l1747 01B0                           l3603 060A  
                         l3611 04F8                           l4251 2A88                           l4243 2A32  
                         l4235 29EA                           l4227 29B2                           l4219 2976  
                         l4171 27C6                           l4163 2788                           l4155 2758  
                         l4059 220E                           l3269 062C                           l3285 0674  
                         l4421 258A                           l4413 2552                           l4405 2516  
                         l4341 233A                           l4325 22D2                           l4333 22F6  
                         l4317 2288                           l4309 2248                           l4077 046C  
                         l4069 044A                           l3525 19B8                           l3517 1968  
                         l3509 1912                           l3461 1790                           l3453 1762  
                         l3445 173A                           l3429 16D2                           l3437 16FC  
                         l3541 0B3E                           l3621 0D42                           l3365 0158  
                         l3197 0912                           l3189 08E6                           l3357 0762  
                         l3349 0724                           l3701 1064                           l3381 0276  
                         l3373 02B2                           l4093 1144                           l4085 1104  
                         l1749 01B2                           l3613 0506                           l3605 04D6  
                         l4261 2B2A                           l4253 2A90                           l4237 2A06  
                         l4229 29C2                           l4245 2A3A                           l4181 282A  
                         l4173 27D6                           l4165 27A4                           l4157 2760  
                         l4149 26D4                           l4501 0AFC                           l3287 0684  
                         l4431 25B0                           l4415 2556                           l4407 2532  
                         l4423 2594                           l4351 2386                           l4335 230A  
                         l4327 22DE                           l4319 22A2                           l3527 19C6  
                         l3519 197E                           l3471 17D8                           l3463 17A0  
                         l3455 1762                           l3447 173E                           l3439 170C  
                         l3551 0B8E                           l3623 0D52                           l3199 091A  
                         l3359 076C                           l3295 0346                           l3711 1090  
                         l3391 029C                           l3383 0292                           l3375 02B6  
                         l3367 02A2                           l4095 1144                           l4087 1114  
                         l4079 10D2                           l3615 051C                           l3607 04E8  
                         l4271 2B88                           l4255 2AAE                           l4247 2A4C  
                         l4263 2B32                           l4239 2A0E                           l4183 283A  
                         l4175 27E0                           l4167 27AC                           l4191 287A  
                         l4159 276E                           l4503 0B04                           l4441 2610  
                         l4433 25D2                           l4425 25A8                           l4409 253A  
                         l4417 255E                           l4361 23BE                           l4353 2392  
                         l4337 230E                           l4345 2348                           l4329 22E2  
                         l3529 19CC                           l3481 1826                           l3473 17EC  
                         l3465 17B0                           l3561 0BB8                           l3553 0B92  
                         l3545 0B52                           l3641 0E18                           l3633 0DD0  
                         l3625 0D60                           l3297 035A                           l3713 10A4  
                         l3705 1070                           l3385 0296                           l3393 0478  
                         l3377 02C2                           l3369 02A6                           l4097 1144  
                         l4089 112C                           l3617 0524                           l3609 04F0  
                         l3801 1C26                           l3721 1A16                           l4273 2BA6  
                         l4265 2B44                           l4281 2C2A                           l4257 2ACA  
                         l4249 2A74                           l4193 2896                           l4185 2860  
                         l4177 27EA                           l4169 27B6                           l4505 0B18  
                         l4451 263C                           l4443 2620                           l4435 25DC  
                         l4419 2572                           l4371 241C                           l4363 23D6  
                         l4355 239E                           l4347 2362                           l4339 232A  
                         l3491 186E                           l3483 1836                           l3475 17FA  
                         l3467 17C0                           l3459 1776                           l3571 0BE0  
                         l3563 0BC2                           l3555 0BA0                           l3547 0B7C  
                         l3539 0B28                           l3651 0E98                           l3643 0E24  
                         l3635 0DD8                           l3627 0DA6                           l3299 036A  
                         l3715 10C6                           l3707 1088                           l3387 0298  
                         l3395 047C                           l4099 1150                           l3619 052A  
                         l3811 1C6E                           l3803 1C30                           l3731 1A6C  
                         l3723 1A1E                           l4291 2CA0                           l4283 2C3E  
                         l4275 2BC2                           l4267 2B6C                           l4259 2AE6  
                         l4195 28B2                           l4187 286A                           l4179 2804  
                         l4461 2680                           l4453 2640                           l4437 25E0  
                         l4381 247E                           l4373 2420                           l4357 23A2  
                         l4349 237E                           l4365 23E4                           l3493 187C  
                         l3485 1848                           l3477 1806                           l3469 17C8  
                         l3573 0BEC                           l3565 0BCC                           l3549 0B7E  
                         l3661 0EE0                           l3653 0E9A                           l3645 0E60  
                         l3637 0DE4                           l3629 0DBC                           l3709 108C  
                         l3389 029A                           l3397 04A0                           l3813 1C8E  
                         l3821 1CB6                           l3805 1C3A                           l3741 1AAE  
                         l3733 1A80                           l3725 1A30                           l3717 19DA  
                         l3901 14BA                           l4293 2CBC                           l4285 2C66  
                         l4277 2BDE                           l4269 2B80                           l4197 28BA  
                         l4471 26C8                           l4455 2656                           l4463 268E  
                         l4439 25FC                           l4383 2486                           l4375 243C  
                         l4391 24AA                           l4367 23F8                           l4359 23AA  
                         l3487 185E                           l3495 188E                           l3479 1824  
                         l3575 0BFC                           l3663 0EE2                           l3655 0E9E  
                         l3647 0E6C                           l3639 0E16                           l3399 04A4  
                         l3671 01C4                           l3591 05D0                           l3583 05A6  
                         l3831 1CF8                           l3823 1CC8                           l3815 1C96  
                         l3807 1C3E                           l3751 1AFE                           l3743 1AC0  
                         l3735 1A90                           l3727 1A58                           l3719 19EE  
                         l3911 1508                           l3903 14CE                           l4295 2CD8  
                         l4287 2C7A                           l4279 2C22                           l4199 28CC  
                         l4465 269E                           l4457 266E                           l4449 2628  
                         l4393 24BE                           l4385 2492                           l4377 2448  
                         l4369 2408                           l3497 189C                           l3489 1864  
                         l3577 0C0C                           l3657 0EC2                           l3649 0E7A  
                         l3681 0FE0                           l3673 0EF4                           l3593 05DE  
                         l3585 05AE                           l3841 1D8C                           l3833 1D08  
                         l3825 1CD4                           l3817 1CA0                           l3809 1C5A  
                         l3761 1B36                           l3753 1B02                           l3745 1AD0  
                         l3729 1A5C                           l3921 1552                           l3913 1514  
                         l3905 14D2                           l4297 2D1C                           l4289 2C82  
                         l4481 0A70                           l4473 0A40                           l4467 26B6  
                         l4459 2676                           l4395 24C2                           l4387 249E  
                         l4379 2462                           l3499 18A0                           l3579 0C1C  
                         l3659 0ED2                           l3691 1024                           l3683 0FE4  
                         l3675 0FAE                           l3667 01B8                           l3595 05E4  
                         l3587 05C0                           l3851 1DEA                           l3843 1DA0  
                         l3835 1D28                           l3827 1CDE                           l3819 1CA8  
                         l3771 1B58                           l3755 1B0A                           l3747 1AE6  
                         l3739 1A9E                           l3923 1566                           l3915 1526  
                         l3907 14EE                           l3931 15A0                           l4299 2D24  
                         l4491 0AB0                           l4483 0A78                           l4475 0A44  
                         l4469 26BE                           l4397 24DE                           l4389 24A2  
                         l3693 102A                           l3685 1000                           l3677 0FBE  
                         l3669 01C0                           l3597 05FA                           l3589 05C8  
                         l3845 1DC0                           l3837 1D5C                           l3829 1CE8  
                         l3781 1B8A                           l3749 1AF2                           l3757 1B16  
                         l3941 15FE                           l3933 15BA                           l3925 1572  
                         l3917 1532                           l3909 14F6                           l3861 1384  
                         l3853 12FC                           l4493 0AC4                           l4485 0A8C  
                         l4477 0A56                           l4399 24EE                           l3695 1046  
                         l3687 1008                           l3679 0FCC                           l3599 0602  
                         l3839 1D7C                           l3847 1DC6                           l3791 1BDA  
                         l3783 1B9E                           l3759 1B2A                           l3943 1612  
                         l3935 15D6                           l3927 1586                           l3919 1546  
                         l3871 13BC                           l3863 1396                           l3855 1310  
                         l3951 1E0A                           l4495 0ACC                           l4487 0A94  
                         l4479 0A5E                           l3689 1010                           l3849 1DD8  
                         l3793 1BEE                           l3785 1BAA                           l3777 1B60  
                         l3769 1B46                           l3945 161E                           l3937 15F0  
                         l3929 1592                           l3873 13D0                           l3881 140E  
                         l3857 1324                           l3961 1E6A                           l3953 1E1A  
                         l4497 0AE0                           l4489 0AA8                           l3699 1052  
                         l3795 1C06                           l3787 1BBA                           l3779 1B82  
                         l3947 1638                           l3939 15F6                           l3891 1472  
                         l3883 1428                           l3875 13D4                           l3859 1352  
                         l3971 1E92                           l3963 1E76                           l3955 1E2C  
                         l4499 0AE8                           l3797 1C10                           l3789 1BCA  
                         l3893 147A                           l3885 1444                           l3877 13F0  
                         l3869 13AE                           l3981 1F38                           l3973 1EA6  
                         l3957 1E46                           l3949 1DF6                           l3799 1C1A  
                         l3895 148E                           l3887 1452                           l3879 1400  
                         l3991 1F8E                           l3983 1F54                           l3975 1EE6  
                         l3959 1E56                           l3897 149A                           l3889 146E  
                         l3993 1FA2                           l3977 1F2E                           l3969 1E7E  
                         l3985 1F58                           _ADFM 7E07                           l3899 14B6  
                         l3995 1FAC                           l3987 1F76                           l3979 1F34  
                         l3997 1FC8                           l3989 1F80                           l3999 1FE4  
                         _ADON 7E10                           STR_1 2F18                           STR_2 2F09  
                         STR_3 2FB6                           STR_4 2FC5                           STR_5 2FD3  
                         STR_6 2F69                           STR_7 2F79                           STR_8 2FF6  
                         STR_9 2FEF                           _BRGH 7D62                           _CREN 7D5C  
                         u3000 04E8                           u3001 04E4                           u3010 0506  
                         u3011 0502                           u2300 02FE                           u3100 0E98  
                         u3020 051C                           u2301 02FA                           u3101 0E94  
                         u3021 0518                           u2310 056C                           u3110 0ED2  
                         u3030 0D52                           u3111 0ECE                           u3031 0D4E  
                         u2320 0594                           u3120 0EE0                           u3040 0D60  
                         u2400 019C                           u3200 1A30                           u4000 2992  
                         u3121 0EDC                           u3041 0D5C                           u2401 0198  
                         u3201 1A2C                           u4001 298E                           u2330 05A4  
                         u3050 0DBC                           u2410 098E                           u3130 0FE0  
                         u3210 1A58                           u4010 29B2                           u2331 05A0  
                         u3051 0DB8                           u2411 098A                           u3131 0FDC  
                         u3211 1A54                           u4011 29AE                           u2340 06A4  
                         u3060 0E12                           u2420 09A8                           u2500 0930  
                         u3140 1000                           u3300 1C6E                           u3220 1A80  
                         u4100 2B44                           u4020 29EA                           u2317 0562  
                         u2341 06A0                           u3061 0E0E                           u2421 09A4  
                         u2501 092C                           u3141 0FFC                           u3301 1C6A  
                         u3221 1A7C                           u4101 2B40                           u4021 29E6  
                         u2350 06BE                           u2270 0176                           u3070 0E5C  
                         u2430 09CE                           u2510 0946                           u3150 1024  
                         u3310 1CC8                           u3230 1AC0                           u4110 2B6C  
                         u4030 2A06                           u2327 058A                           u2351 06BA  
                         u2271 0172                           u3071 0E58                           u2431 09CA  
                         u2511 0942                           u3151 1020                           u3311 1CC4  
                         u3231 1ABC                           u4111 2B68                           u4031 2A02  
                         u2280 02DC                           u2360 06D2                           u3080 0E7A  
                         u2440 09EC                           u2520 096A                           u2600 0C8C  
                         u3160 1046                           u3320 1DC0                           u3240 1AE6  
                         u3400 1452                           u4200 2D36                           u4120 2BA2  
                         u4040 2A2A                           u2281 02D6                           u2361 06CE  
                         u3081 0E76                           u2441 09E8                           u2521 0966  
                         u2601 0C88                           u3161 1042                           u3321 1DBC  
                         u3241 1AE2                           u3401 144E                           u4201 2D32  
                         u4121 2B9E                           u4041 2A26                           u2370 06EE  
                         u2530 062C                           u4210 225C                           u3090 0E8A  
                         u2450 0A08                           u2610 0CD0                           u3170 1064  
                         u3330 1DD8                           u3250 1B2A                           u3410 146E  
                         u4130 2BC2                           u4050 2A4C                           u2371 06EA  
                         u2531 0628                           u4211 2258                           u3091 0E86  
                         u2451 0A04                           u2611 0CCC                           u3171 1060  
                         u3331 1DD4                           u3251 1B26                           u3411 146A  
                         u4131 2BBE                           u4051 2A48                           u2380 0702  
                         u2540 0642                           u4300 23F8                           u4220 2280  
                         u2700 16C0                           u2460 0A2E                           u2620 0D2C  
                         u3180 10A4                           u3260 1B58                           u3500 1586  
                         u3420 148E                           u3340 1310                           u4140 2BDE  
                         u4060 2A74                           u2381 06FE                           u2541 063E  
                         u4301 23F4                           u4221 227C                           u2701 16BC  
                         u2461 0A2A                           u2621 0D28                           u3181 10A0  
                         u3261 1B54                           u3501 1582                           u3421 148A  
                         u3341 130C                           u4141 2BDA                           u4061 2A70  
                         u2550 0652                           u2390 0342                           u4310 241C  
                         u4230 22A2                           u2710 16D2                           u2470 08DE  
                         u2630 0732                           u3270 1B82                           u3190 19EE  
                         u3510 15BA                           u3430 14B6                           u3350 1396  
                         u4150 2C3E                           u4070 2AAA                           u2295 02DE  
                         u2551 064E                           u2391 033E                           u4311 2418  
                         u4231 229E                           u2711 16CE                           u2471 08DA  
                         u2631 072E                           u3271 1B7E                           u3191 19EA  
                         u3511 15B6                           u3431 14B2                           u3351 1392  
                         u4151 2C3A                           u4071 2AA6                           u2560 066C  
                         u4400 25A8                           u4320 243C                           u4240 22BE  
                         u2800 187C                           u2720 16E2                           u2480 08F8  
                         u2640 049C                           u3280 1B9E                           u3520 15D6  
                         u3440 14CE                           u3360 13D0                           u4160 2C66  
                         u4080 2ACA                           u3600 1E92                           u2561 0668  
                         u4401 25A4                           u4321 2438                           u4241 22BA  
                         u2801 1878                           u2721 16DE                           u2481 08F4  
                         u3281 1B9A                           u3521 15D2                           u3441 14CA  
                         u3361 13CC                           u4161 2C62                           u4081 2AC6  
                         u3601 1E8E                           u2570 0684                           u4410 25D2  
                         u4330 2462                           u4250 230A                           u2810 189C  
                         u2730 1722                           u2490 0912                           u2650 04C4  
                         u3290 1C5A                           u3530 15F0                           u3450 14EE  
                         u3370 13F0                           u4170 2C9C                           u4090 2AE6  
                         u3610 1EA6          ?_read_external_eeprom 0001                           u2571 0680  
                         u4411 25CE                           u4331 245E                           u4251 2306  
                         u2811 1898                           u2731 171E                           u2491 090E  
                         u3291 1C56                           u3531 15EC                           u3451 14EA  
                         u3371 13EC                           u4171 2C98                           u4091 2AE2  
                         u3611 1EA2                           u4420 25FC                           u4340 247E  
                         u4260 232A                           u2820 18AE                           u2740 1762  
                         u2900 0B3E                           u2580 036A                           u2660 04D4  
                         u3540 1612                           u3460 1508                           u3380 1428  
                         u4180 2CBC                           u3700 2048                           u4500 0AE0  
                         u4421 25F8                           u4341 247A                           u4261 2326  
                         u2821 18AA                           u2741 175E                           u2901 0B3A  
                         u2581 0366                           u2661 04D0                           u3541 160E  
                         u3461 1504                           u3381 1424                           u4181 2CB8  
                         u3701 2044                           u4501 0ADC                           u4430 2610  
                         u4350 24BE                           u4270 2362                           u2830 18DC  
                         u2750 17D8                           u2670 165A                           u2910 0B72  
                         u2590 0C4A                           u3550 1638                           u3470 1526  
                         u3390 1444                           u4190 2CD8                           u3710 2070  
                         u4510 0AFC                           u4431 260C                           u4351 24BA  
                         u4271 235E                           u2831 18D8                           u2751 17D4  
                         u2671 1656                           u2591 0C46                           u2647 0492  
                         u3551 1634                           u3471 1522                           u3391 1440  
                         u4191 2CD4                           u3711 206C                           u4511 0AF8  
                         u4440 2656                           u4360 24DE                           u4280 237E  
                         u2840 18F2                           u2760 17FA                           u2680 166C  
                         u2920 0BA0                           u3800 10EA                           u3480 1546  
                         u3720 2090                           u3640 1F54                           u3560 1E0A  
                         u4520 0B18                           u4441 2652                           u4361 24DA  
                         u4281 237A                           u2841 18EE                           u2761 17F6  
                         u2681 1668                           u2921 0B9C                           u2657 04BA  
                         u3801 10E6                           u3481 1542                           u3721 208C  
                         u3641 1F50                           u3625 1EB0                           u3561 1E06  
                         u4521 0B14                           u4370 2516                           u4290 23BE  
                         u2850 1906                           u2770 1824                           u2690 167C  
                         u2930 0BB4                           u3810 1104                           u3490 1566  
                         u3730 20C8                           u3650 1F76                           u3570 1E2C  
                         u4450 0A56                           u4371 2512                           u4291 23BA  
                         u2851 1902                           u2771 1820                           u2691 1678  
                         u2931 0BB0                           u2915 0B68                           u3811 1100  
                         u3491 1562                           u3731 20C4                           u3651 1F72  
                         u3635 1EFC                           u3571 1E28                           u4451 0A52  
                         u4380 2532                           u2860 1920                           u2780 1848  
                         u2940 0BDC                           u3820 116C                           u3900 282A  
                         u3740 20E4                           u3660 1FA2                           u3580 1E46  
                         u4460 0A70                           u4381 252E                           u2861 191C  
                         u2781 1844                           u2941 0BD8                           u3821 1168  
                         u3901 2826                           u3741 20E0                           u3661 1F9E  
                         u3581 1E42                           u4461 0A6C                           u4390 2572  
                         u2870 1968                           u2790 185E                           u2950 0BFC  
                         u3830 1180                           u3910 2860                           u3750 2116  
                         u3670 1FC8                           u3590 1E6A                           u4470 0A8C  
                         u4391 256E                           u2871 1964                           u2791 185A  
                         u2951 0BF8                           u3831 117C                           u4607 08B0  
                         u3911 285C                           u3751 2112                           u3671 1FC4  
                         u3591 1E66                           u4471 0A88                           u2880 1998  
                         u2960 0C0C                           u3840 121C                           u3920 2896  
                         u3760 2142                           u3680 1FE4                           u4480 0AA8  
                         u2881 1994                           u2961 0C08                           u3841 1218  
                         u4617 08C4                           u3921 2892                           u4537 2218  
                         u3761 213E                           u3681 1FE0                           u4481 0AA4  
                         u2890 19C6                           u3850 1274                           u2970 05C0  
                         u3930 28B2                           u3690 2016                           u4490 0AC4  
                         u2891 19C2                           u3851 1270                           u4627 111E  
                         u2971 05BC                           u4547 1BF8                           u3931 28AE  
                         u3691 2012                           u4491 0AC0                           _RCIE 7CED  
                         u3860 128A                           u2980 05DE                           u3940 28CC  
                         u3780 21D2                           _RCEN 7E2B                           _RCIF 7CF5  
                         u4637 12C2                           u3861 1286                           u4557 0836  
                         u2981 05DA                           u3941 28C8                           u3781 21CE  
                         u2990 05FA                           u3950 28E8                           u3870 26F8  
                         u3790 21FA                           u4647 043C                           u4567 0850  
                         u2991 05F6                           u3951 28E4                           u3871 26F4  
                         u3791 21F6                           u3775 2184                           u3960 290E  
                         u3880 2782                           u4657 2660                           u4577 0866  
                         u3961 290A                           u3881 277E                           u3970 292A  
                         u3890 27A4                           u4667 26A8                           u4587 0888  
                         u3971 2926                           u3891 27A0                           u3980 2952  
                         u4597 089A                           u3981 294E                           u3990 296E  
                         u3991 296A                           _RBPU 7F8F                           _SPEN 7D5F  
                         _RSEN 7E29                           _TXIE 7CEC                           _TXEN 7D65  
                         _TXIF 7CF4                           _SYNC 7D64                           _arr1 0070  
                         _flag 00A7                           _main 0A40                           _left 00A5  
                         _menu 01A0                           _once 009D                           _wait 004C  
                         _time 0094                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         _puts 0478                           prodh 0FF4                           prodl 0FF3  
                         start 0000                ___fldiv@new_exp 0020           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                  _i2c_rep_start 0138  
                ??_i2c_rx_mode 0001                   ?_init_ds1307 0001                  ___fltol@sign1 0030  
                        _ABDEN 7DC0                          _ADCS0 7E00                          _ADCS1 7E01  
                        _ADCS2 7E02                          ?_main 0001                   ?_read_ds1307 0001  
                        _ACKEN 7E2C                          _ACKDT 7E2D                 ??_display_time 0006  
                        _BCLIF 7D0B                __end_of___fldiv 19DA                          _ACQT0 7E03  
                        _ACQT1 7E04                          _ACQT2 7E05                __end_of___awdiv 0A40  
                        STR_10 2F09                          STR_11 2F07                          STR_12 2FE7  
                        STR_20 2F29                          STR_13 2FA7                          STR_21 2EB5  
                        STR_14 2FDF                          STR_22 2ECF                          STR_23 2FFC  
                        STR_15 2F59                          STR_16 2F98                          STR_24 2F39  
                        _BRG16 7DC3                          STR_17 2F49                          STR_25 2EE3  
                        STR_26 2FFC                          STR_18 2F89                          STR_19 2EF6  
              __end_of___awmod 097C                __end_of___fltol 0C2E                          ?_puts 0002  
              ___awdiv@divisor 0003                __end_of___lwdiv 061A                __end_of___lwmod 053A  
                 ?_init_config 0001                ___awdiv@counter 0005                          _VCFG0 7E0C  
                        _VCFG1 7E0D                          _SENDB 7D63                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD                __end_of_e_store 0D40      write_external_eeprom@data 000F  
                        _delay 004E                          _array 01F0                          _event 0054  
                        _login 19DA                          _wait1 0068                          _renew 0060  
                        _right 008A                          _shift 005A                          _speed 008C  
                        _putch 018C                _change_password 223A                          _worng 0084  
                        tablat 0FF5                          puts@s 0002                          status 0FD8  
             init_ds1307@dummy 0004                     _i2c_no_ack 011A                __initialization 0790  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 000F                   __end_of_main 0B28  
                 __end_of_puts 04D6               __end_of_i2c_idle 017A               __end_of_i2c_read 0158  
             __end_of_i2c_stop 0130                  ?_download_log 0001                         ??_main 0037  
                       ??_puts 0004                  __activetblptr 0002            __end_of_i2c_rx_mode 0138  
                       _ADCON0 0FC2                         _ADCON1 0FC1                         _ABDOVF 7DC7  
             read_switches@key 005E         ??_read_external_eeprom 0002                         _ADRESH 0FC4  
                       ?_login 0001                         _ADRESL 0FC3               ___awdiv@dividend 0001  
                       ?_putch 0001                         _GODONE 7E11                   _write_ds1307 01E6  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 0EF4               __end_of_get_time 0790  
                       _e_flag 0082                      ??___fldiv 0017                      ??___awdiv 0005  
                    ??___awmod 000D                      ??___fltol 002C                         _flag_t 0040  
                    ??___lwdiv 0005                  view_log@i_457 001B                         _array1 0100  
                    ??___lwmod 000C                         _count1 008E               __end_of_init_i2c 01B8  
             __end_of_init_adc 0224               __end_of_read_adc 038A                         clear_0 07EA  
                       clear_1 07FC                         clear_2 0808                         clear_3 0814  
               ??_download_log 0006               __end_of_menu_car 1640               ___awdiv@quotient 0007  
                       _second 0088                ___awmod@divisor 000B                         _scroll 007E  
                       isa$std 0001               __end_of_scan_key 070C                ___awmod@counter 000D  
                    ??_e_store 0013          change_password@count2 00A1                   __pdataCOMRAM 005F  
                       login@i 0017                         login@j 0013        __end_of_change_password 26D4  
             __end_of_set_time 2EB4                   __mediumconst 2EB4                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               __end_of_view_log 223A  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   __accesstop 0060        __end_of__initialization 081A           __end_of_display_time 0168  
                ___rparam_used 0001                     ___fltol@f1 0028                ??_i2c_rep_start 0001  
                  ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 0224  
                 __pidataBANK1 03D2                    _i2c_rx_mode 0130                  __end_of_login 1DF6  
                __end_of_putch 01A2              __end_of_i2c_start 0128              __end_of_i2c_write 014C  
               _flag@menu$F308 0050                        ??_login 0011                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100         write_external_eeprom@i 0010  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                   _dash_board 0EF4                     _clcd_print 053A                     _clcd_putch 01CE  
                   _clcd_write 02CA                     _clear_flag 0090                read_ds1307@data 0003  
            read_switches@once 005F                      ?___xxtofl 0001               ?_change_password 0001  
                      _SSPCON1 0FC6                      ?_get_time 0001                  _read_switches 061A  
                   ??_i2c_idle 0001                     ??_i2c_read 0001                     ??_i2c_stop 0001  
                    ?_init_i2c 0001           __end_of_download_log 12FC                      ?_init_adc 0001  
                    ?_read_adc 0001              __end_of_clear_log 0478                      ?_menu_car 0001  
                    ?_scan_key 0001        ??_write_external_eeprom 0010                        __Hparam 0000  
                      __Lparam 0000                      ?_set_time 0001             change_password@key 0015  
                      ___fldiv 1640                        ___awdiv 097C                        ___awmod 08CC  
                    ?_view_log 0001                        ___fltol 0B28                        ___lwdiv 05A6  
                      ___lwmod 04D6                        _address 007C                        _delay11 0076  
                      _delay12 0074                        __pcinit 0790                        __ramtop 0600  
                      _e_store 0C2E                        __ptext0 0A40                        __ptext1 1DF6  
                      __ptext2 26D4                        __ptext3 12FC                        __ptext4 19DA  
                      __ptext5 04D6                        __ptext6 05A6                        __ptext7 01B8  
                      __ptext8 017A                        __ptext9 01A2                     _menu_index 004A  
            __end_of_init_clcd 08CC                        _key_mkp 0092                     ??___xxtofl 0005  
            __end_of_init_uart 02A0               ___awmod@dividend 0009                  dash_board@key 0035  
                dash_board@var 0033         change_password@delay12 0046                 ?_read_switches 0001  
                   ??_get_time 0004           end_of_initialization 081A                     ??_init_i2c 0001  
                   ??_init_adc 0001                  __Lmediumconst 2EB4                     ??_read_adc 0003  
                   ??_menu_car 0011                    ?_dash_board 0001                     ??_scan_key 0001  
                  ?_clcd_print 0003                    ?_clcd_putch 000F                    ?_clcd_write 0001  
                   ??_set_time 0011                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
                   ??_view_log 0011                      _PORTBbits 0F81                read_adc@channel 0007  
                 _display_time 0158                  i2c_write@data 0001                  ___xxtofl@sign 0009  
              read_adc@reg_val 0005                    ___fldiv@grs 0022                    ___fldiv@rem 001B  
     read_external_eeprom@data 0003                   ??_i2c_no_ack 0001                   ?_i2c_rx_mode 0001  
                __pidataCOMRAM 3000                 e_store@address 0042                    view_log@key 0017  
          start_initialization 0790                ??_read_switches 0001                      _i2c_start 0120  
                    _i2c_write 0140             __end_of_i2c_no_ack 0120               change_password@i 0048  
             change_password@j 0017               change_password@w 0019          __end_of_i2c_rep_start 0140  
                ??_init_ds1307 0004                    __pdataBANK0 009D                    __pdataBANK1 01A0  
                ??_read_ds1307 0002                   _download_log 10D2    read_switches@detection_type 0001  
                ??_init_config 0005                      ___fldiv@a 0013                      ___fldiv@b 000F  
                  __pbssBIGRAM 01F0                    __pbssCOMRAM 0037                     ?_i2c_start 0001  
                   ?_i2c_write 0001  write_external_eeprom@address1 0012               ___lwdiv@dividend 0001  
__end_of_write_external_eeprom 0344                      _clear_log 0422                  __pmediumconst 2EB4  
                     ?___fldiv 000F                       ?___awdiv 0001                       ?___awmod 0009  
                     ?___fltol 0028             read_ds1307@address 0002                       ?___lwdiv 0001  
                    _clock_reg 0037                       ?___lwmod 0008                       ?_e_store 0001  
          __end_of_init_ds1307 03D2            __end_of_read_ds1307 0276               ___lwdiv@quotient 0005  
                    _init_clcd 0824            __end_of_init_config 01CE                      _init_uart 0276  
                ?_write_ds1307 0002                   ??_dash_board 0032                   ??_clcd_print 0006  
                 ??_clcd_putch 0010     __end_of_init_matrix_keypad 018C                   ??_clcd_write 0002  
                   ?_clear_log 0001                      _view_flag 0080                  download_log@i 000A  
                download_log@j 000C          clcd_write@control_bit 0001                      _star_flag 0086  
           __end_of_dash_board 10D2                    ??_i2c_start 0001             __end_of_clcd_print 05A6  
                  ??_i2c_write 0001             __end_of_clcd_putch 01E6             __end_of_clcd_write 0304  
                   ?_init_clcd 0001                     ?_init_uart 0001                      copy_data0 07A4  
                    copy_data1 07C4                 ??_write_ds1307 0003                       _i2c_idle 0168  
                     _i2c_read 014C                       _i2c_stop 0128                       __Hrparam 0000  
                set_time@w_481 0017                  set_time@w_482 001B                  set_time@w_483 001D  
                set_time@w_484 001F                       __Lrparam 0000            change_password@flag 009F  
 __end_of_read_external_eeprom 02CA                    _init_ds1307 038A                    _event_count 0044  
                    login@left 00A3                    _read_ds1307 024C                    _init_config 01B8  
                     ___xxtofl 0D40            write_ds1307@address 0003                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 038A                       __ptext11 01E6  
                     __ptext20 0344                       __ptext12 0824                       __ptext21 070C  
                     __ptext13 0204                       __ptext30 0158                       __ptext22 024C  
                     __ptext14 10D2                       __ptext31 0D40                       __ptext23 0138  
                     __ptext15 02A0                       __ptext40 0168                       __ptext32 0B28  
                     __ptext24 014C                       __ptext16 0478                       __ptext41 061A  
                     __ptext33 1640                       __ptext25 0130                       __ptext17 018C  
                     __ptext42 0690                       __ptext34 0422                       __ptext26 011A  
                     __ptext18 0276                       __ptext43 01CE                       __ptext35 223A  
                     __ptext27 0C2E                       __ptext19 0EF4                       __ptext44 053A  
                     __ptext36 0304                       __ptext28 08CC                       __ptext45 02CA  
                     __ptext37 0140                       __ptext29 097C                       __ptext38 0128  
                     __ptext39 0120                       _get_time 070C                       _init_i2c 01A2  
                     _init_adc 0204                       _read_adc 0344                       _menu_car 12FC  
                     _scan_key 0690                view_log@delay11 007A                view_log@delay12 0078  
                    set_time@w 0013                    ??_clear_log 0006              ??_change_password 0013  
                     _set_time 26D4                       e_store@i 0013                       e_store@j 0015  
                     isa$xinst 0000                       _view_log 1DF6                      view_log@i 0019  
                    view_log@j 001D                      putch@byte 0001                    ??_init_clcd 0003  
        __end_of_read_switches 0690                    ??_init_uart 0001               ___lwmod@dividend 0008  
         __end_of_write_ds1307 0204                ___lwmod@divisor 000A                ___lwmod@counter 000C  
             write_ds1307@data 0002           _read_external_eeprom 02A0  
